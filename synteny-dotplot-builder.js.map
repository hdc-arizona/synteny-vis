{"version":3,"sources":["webpack:///synteny-dotplot-builder.js","webpack:///webpack/bootstrap 1ec555c25c187707ec3b","webpack:///./src/hook.js","webpack:///./~/lodash/lodash.js","webpack:///./~/d3/d3.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/persistence.js","webpack:///./~/svg-transform/index.js","webpack:///./src/async-benchmark.js","webpack:///./src/auto-colorscale.js","webpack:///./src/colorscales.js","webpack:///./src/dotplot.js","webpack:///./src/histogram.js","webpack:///./src/main.js","webpack:///./src/synteny-vis.js","webpack:///./~/crossfilter/crossfilter.js","webpack:///./~/crossfilter/index.js","webpack:///./src/style.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/d3-queue/build/d3-queue.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/style.css?2ad8","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","window","makeSyntenyDotPlot","__WEBPACK_AMD_DEFINE_RESULT__","global","addMapEntry","map","pair","set","addSetEntry","value","add","apply","func","thisArg","args","length","arrayAggregator","array","setter","iteratee","accumulator","index","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","result","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","Array","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","baseFindKey","collection","eachFunc","key","baseFindIndex","fromIndex","fromRight","indexOfNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseReduce","baseSortBy","comparer","sort","current","undefined","baseTimes","n","baseToPairs","object","props","baseUnary","baseValues","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","checkGlobal","Object","countHolders","placeholder","deburrLetter","letter","deburredLetters","escapeHtmlChar","chr","htmlEscapes","escapeStringChar","stringEscapes","getValue","other","isHostObject","toString","e","iteratorToArray","iterator","data","next","done","push","mapToArray","size","forEach","replaceHolders","PLACEHOLDER","setToArray","setToPairs","stringSize","string","reHasComplexSymbol","test","reComplexSymbol","lastIndex","stringToArray","match","unescapeHtmlChar","htmlUnescapes","runInContext","context","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","hasOwnProperty","wrapperClone","baseLodash","chainAll","this","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","MAX_ARRAY_LENGTH","__views__","lazyClone","copyArray","lazyReverse","clone","lazyValue","dir","isArr","isRight","arrLength","view","getView","start","end","iteratees","iterLength","takeCount","nativeMin","LARGE_ARRAY_SIZE","baseWrapperValue","outer","iterIndex","type","computed","LAZY_MAP_FLAG","LAZY_FILTER_FLAG","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","splice","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","Map","mapCacheDelete","getMapData","mapCacheGet","get","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","assignInDefaults","objValue","srcValue","eq","objectProto","assignMergeValue","assignValue","baseAggregator","baseEach","baseAssign","source","copyObject","keys","baseAt","paths","isNil","baseClamp","number","lower","upper","baseClone","isDeep","isFull","customizer","stack","isObject","initCloneArray","tag","getTag","isFunc","funcTag","genTag","isBuffer","cloneBuffer","objectTag","argsTag","initCloneObject","copySymbols","cloneableTags","initCloneByTag","stacked","getAllKeys","subValue","baseConforms","baseCreate","proto","objectCreate","baseDelay","wait","TypeError","FUNC_ERROR_TEXT","setTimeout","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","path","isKey","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGt","baseHas","getPrototype","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInverter","baseInvoke","parent","last","baseIsEqual","bitmask","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","arrayTag","othTag","objIsObj","othIsObj","isSameTag","isTypedArray","equalArrays","equalByTag","PARTIAL_COMPARE_FLAG","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMatch","matchData","noCustomizer","UNORDERED_COMPARE_FLAG","baseIsNative","isMasked","pattern","reIsNative","reIsHostCtor","toSource","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","nativeKeys","baseKeysIn","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isStrictComparable","hasIn","baseMerge","srcIndex","keysIn","baseMergeDeep","newValue","mergeFunc","isArrayLikeObject","isPlainObject","isArguments","toPlainObject","baseNth","isIndex","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","getAllKeysIn","baseProperty","basePropertyDeep","basePullAll","indexOf","basePullAt","indexes","previous","baseRandom","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","MAX_SAFE_INTEGER","baseSet","nested","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","HALF_MAX_ARRAY_LENGTH","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","MAX_ARRAY_INDEX","baseSortedUniq","baseToNumber","baseToString","symbolToString","INFINITY","baseUniq","createSet","seenIndex","baseUnset","baseUpdate","updater","baseWhile","isDrop","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","slice","constructor","copy","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","reFlags","exec","cloneSet","cloneSymbol","symbol","symbolValueOf","cloneTypedArray","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","order","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","getSymbols","createAggregator","initializer","createAssigner","assigner","rest","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBaseWrapper","wrapper","fn","root","Ctor","isBind","arguments","BIND_FLAG","createCtorWrapper","createCaseFirst","methodName","charAt","trailing","join","createCompounder","callback","words","deburr","replace","reApos","thisBinding","prototype","createCurryWrapper","arity","getHolder","createRecurryWrapper","createHybridWrapper","createFind","findIndexFunc","createFlow","funcs","prereq","thru","reverse","getFuncName","funcName","getData","isLaziable","ARY_FLAG","CURRY_FLAG","PARTIAL_FLAG","REARG_FLAG","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","BIND_KEY_FLAG","CURRY_RIGHT_FLAG","FLIP_FLAG","createInverter","toIteratee","createMathOperation","operator","createOver","arrayFunc","isFlattenableIteratee","createPadding","chars","charsLength","createPartialWrapper","createRange","toNumber","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","PARTIAL_RIGHT_FLAG","CURRY_BOUND_FLAG","newData","setData","createRound","Math","precision","split","createToPairs","mapTag","setTag","createWrapper","mergeData","baseSetData","isPartial","arrValue","othValue","compared","dataViewTag","arrayBufferTag","boolTag","dateTag","errorTag","name","message","numberTag","regexpTag","stringTag","convert","symbolTag","objProps","objLength","othProps","skipCtor","objCtor","othCtor","getSymbolsIn","realNames","otherFunc","isKeyable","getNative","nativeGetPrototype","getOwnPropertySymbols","objectToString","transforms","hasPath","hasFunc","isLength","isString","input","isPrototype","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","indexKeys","String","reIsUint","reIsPlainProp","reIsDeepProp","maskSrcKey","srcBitmask","newBitmask","isCombo","mergeDefaults","oldArray","funcToString","chunk","compact","concat","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flatten","flattenDeep","flattenDepth","fromPairs","pairs","head","initial","separator","nativeJoin","lastIndexOf","nth","pullAll","pullAllBy","pullAllWith","remove","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","every","filter","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","orderBy","reduce","reduceRight","reject","sample","sampleSize","rand","shuffle","some","now","Date","after","before","curry","curryRight","debounce","options","invokeFunc","time","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","negate","once","otherArgs","spread","throttle","unary","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","propertyIsEnumerable","isArrayBuffer","getLength","isBoolean","isDate","isElement","nodeType","isEmpty","nonEnumShadows","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMap","isMatch","isMatchWith","isNaN","isNumber","isNative","isMaskable","Error","isNull","objectCtorString","isRegExp","isSafeInteger","isSet","typedArrayTags","isUndefined","isWeakMap","weakMapTag","isWeakSet","weakSetTag","iteratorSymbol","toFinite","sign","MAX_INTEGER","remainder","valueOf","reTrim","isBinary","reIsBinary","reIsOctal","freeParseInt","reIsBadHex","toSafeInteger","create","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","defaultValue","isProto","skipIndexes","propsLength","mapKeys","mapValues","omitBy","pickBy","setWith","transform","unset","update","updateWith","valuesIn","clamp","inRange","random","floating","temp","freeParseFloat","capitalize","upperFirst","toLowerCase","reLatin1","reComboMark","endsWith","target","position","escape","reHasUnescapedHtml","reUnescapedHtml","escapeRegExp","reHasRegExpChar","reRegExpChar","pad","strLength","padEnd","padStart","parseInt","radix","nativeParseInt","reHasHexPrefix","repeat","nativeReplace","limit","nativeSplit","startsWith","template","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reNoMatch","reDelimiters","RegExp","reInterpolate","reEsTemplate","evaluate","sourceURL","templateCounter","escapeValue","interpolateValue","esTemplateValue","evaluateValue","reUnescapedString","variable","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","attempt","Function","toLower","toUpper","toUpperCase","trim","trimEnd","reTrimEnd","trimStart","reTrimStart","truncate","DEFAULT_TRUNC_LENGTH","omission","DEFAULT_TRUNC_OMISSION","search","substring","newEnd","unescape","reHasEscapedHtml","reEscapedHtml","reHasComplexWord","reComplexWord","reBasicWord","cond","conforms","constant","matches","matchesProperty","mixin","methodNames","noConflict","_","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","max","maxBy","mean","meanBy","min","minBy","sum","sumBy","defaults","pick","contextProps","arrayProto","stringProto","coreJsData","uid","IE_PROTO","Buffer","moduleExports","Reflect","Symbol","enumerate","ceil","floor","getPrototypeOf","DataView","Promise","Set","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","reEscape","reEvaluate","ArrayBuffer","resolve","promiseTag","ctorString","count","lastCalled","stamp","remaining","HOT_SPAN","HOT_COUNT","rePropName","quote","reEscapeChar","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","isProp","keyBy","partition","sortBy","bind","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","method","methodOf","over","overEvery","overSome","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","round","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","first","VERSION","filtered","isFilter","LAZY_WHILE_FLAG","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","names","commit","toJSON","rsAstralRange","rsComboMarksRange","rsComboSymbolsRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsLowerMisc","rsUpperMisc","rsOptLowerContr","rsOptUpperContr","reOptMod","rsOptVar","rsOptJoin","rsSeq","rsEmoji","rsSymbol","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","&","<",">","\"","'","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","\\","\n","\r"," "," ","parseFloat","freeExports","freeModule","freeGlobal","freeSelf","self","thisGlobal","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","d3_bisector","compare","left","lo","hi","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","defineProperty","enumerable","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","i","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","getAttribute","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parentNode","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","d3_selection_each","j","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","d3_array","addEventListener","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","format","hsl","color","d3_rgb_parseNumber","d3_rgb_names","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","d3_timer_sweep","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t","t0","t1","d3_timer_queueTail","d3_format_precision","log","LN10","d3_formatPrefix","abs","scale","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","specifier","d3_format_re","align","zfill","comma","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","d3_date_utc","UTC","d3_time_interval","date","d0","d1","d3_date","dt","range_utc","utc","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","points","isSubject","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","P","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","rescale","linear","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","permute","permutes","zips","transpose","matrix","merged","empty","nest","mapType","rollup","sortValues","keyValue","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","querySelector","querySelectorAll","d3_selectMatcher","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","ROUNDING_FACTOR","RUN_BENCHMARKS","SHOW_MAXIMA_AND_MINIMA","AUTO_SCALE_VALLEY_FILL","SYNTENY_MARGIN","CIRCLE_RADIUS","UNSELECTED_DOT_FILL","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","DOTPLOT_COLOR_TRANS_LEN","MAXIMIZE_WIDTH","MIN_TEXT_GAP","GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS","HISTOGRAM_MARGIN","HISTOGRAM_Y_SCALE_TRANS_LEN","NUM_HISTOGRAM_TICKS","UNSELECTED_BAR_FILL","COLOR_RANGES","rg","quantized","rg_quantized","rainbow","rainbow_quantized","unselected","getComputedAttr","element","samplePointsInRange","timeIt","_len","_key","console","removeNonExtrema","here","gapBetweenPoints","indexOfSmallestPointDifference","simplify","dirtyPoints","persistence","toRemove","prop","benchmark","testArgs","results","runOne","tests","stats","arg","totalTime","average","persistenceFuncs","_require","generateAutoScale","extrema","generateColorScaleFromExtrema","isMaxima","shouldBeMarked","colors","colored","utils","onData","generateScale","colorScale","_defineProperty","obj","configurable","writable","synteny","dataObj","initialColorScale","meta","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","drawBG","allDots","currentData","getWidth","height","getHeight","clearRect","fillStyle","xScale","x_relative_offset","yScale","y_relative_offset","fillRect","draw","elapsedMS","finalColorScale","intermediateColorScale","interpolateScales","allData","activeDots","rounded","val","_ref4","_ref5","_slicedToArray","loIndex","hiIndex","highlighted","beginPath","strokeStyle","stroke","diff","aDomain","bDomain","setSyntenyData","setNavigationMode","originalXScale","originalYScale","updateGeVOLink","setColorScale","newColorScale","setField","getXLineOffsets","getYLineOffsets","dataAspectRatio","baseID","svgElement","getElementById","getComputedWidth","getComputedHeight","screenRatio","darknessOfTextGaps","filterTextGaps","gap","gap_has_elapsed","genGeVOLink","aDbId","bDbId","getSingleGeVoDescription","fetch","getGeVODescription","all","_ref","_ref2","x_name","y_name","x_component","y_component","x_feature_id","y_feature_id","_ref3","makeLabels","xFilter","yFilter","tempXOffsets","xOffsets","tempYOffsets","yOffsets","tempXGaps","xMidpoints","tempYGaps","yMidpoints","xGridLines","xLabels","yGridLines","yLabels","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","tempXOffsetDarknesses","tempYOffsetDarknesses","brushGroup","addSpatialFilter","removeSpatialFilter","canvas","backCanvas","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","midpoints","xOffsetToName","getXLineNames","xAxisBase","transformer","xAxisWrapper","yOffsetToName","getYLineNames","yAxisBase","yAxisWrapper","addListener","setNavMode","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","plotBrushBrush","plotBrush","addDataFilter","plotBrushEnd","removeDataFilter","notifyListeners","updateColors","dataBarSel","updateMinMaxMarkers","summary","summaryF","markers","tempSelA","plot","xPlotScale","yPlotScale","updatePlot","typeHint","tempSel","getYExtent","yAxisSel","yAxis","updatePlotAttrs","getColorScale","dataExtent","plotWidth","plotHeight","currentDataSummary","brushSelectForBM","xAxis","updateHeights","orZero","sendBrushEvent","ksTextToObjects","csvLines","dots","ksLineToSyntenyDot","min_logks","logks","min_logkn","logkn","logknks","ks","kn","log10","x_chromosome_id","y_chromosome_id","lengthsToCumulativeBPCounts","len_list","ntLenList","kv","total","nameLenList","gene_count","geneCounts","nt","gene_counts","inlineKSData","xmap","ymap","ksObj","xShift","yShift","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","ret","crossfilter","cross_all","cross_x","cross_y","filters","zeros","extents","filterAll","clearListeners","typeOfChange","sv","data_url","element_id","genome_x","genome_y","await","have_ks","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","controller","buildDiv","show_histograms","makeForm","title","optionId","elements","checkIndex","navOptions","formWrapper","navForm","label","checked","div","subdiv","histogramAndTopForm","formWrapperTop","buttonWrapper","histogramWrapper","option","persistenceOptions","initialPersistence","gevoLink","getInitialColorScale","histograms","activePlot","activeField","autoscale","getPersistence","setUpHistograms","initialCS","initialAutoScale","name_map","which","other_smh","names_smh","scientific_names","common","refreshAutoScale","refreshPlot","syntenyPlot","radio","auto","newAutoScale","innerText","newCS","dotplot","onresize","el","firstChild","cs","_d3$extent","_d3$extent2","minLogKs","maxLogKs","rangeList","_ref6","asyncBenchmark","_ref7","alert","crossfilter_identity","bisect_by","heap_by","heap","sift","heapselect_by","heapselect","insertionsort_by","insertionsort","quicksort_by","quicksort_sizeThreshold","quicksort","sixth","i5","i3","i2","i4","e2","e3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","crossfilter_arrayUntyped","crossfilter_arrayLengthenUntyped","crossfilter_arrayWidenUntyped","crossfilter_filterExact","crossfilter_filterRange","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","crossfilter_reduceSubtract","crossfilter_arrayLengthen","dataListeners","removeData","newIndex","crossfilter_index","removed","filterListeners","removeDataListeners","preAdd","newValues","crossfilter_range","refilter","lo1","hi1","refilterFunction","one","lo0","hi0","oldValues","oldIndex","postAdd","indexListeners","reIndex","filterIndexBounds","filterIndexFunction","added","filterRange","filterFunction","filterExact","groupIncrement","groupCapacity","crossfilter_arrayWiden","groupWidth","crossfilter_capacity","g0","oldGroups","reduceAdd","reduceInitial","k0","resetNeeded","updateMany","resetMany","groupAll","updateOne","resetOne","oldK","seenGroups","filterOne","reduceRemove","reduceCount","reduceSum","orderNatural","dispose","dimensionGroups","reduceValue","crossfilter_array8","crossfilter_array16","crossfilter_array32","Uint16Array","Uint32Array","item","mediaQuery","alreadyImportedModules","factory","Queue","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","noabort","maybeNotify","concurrency","awaitAll","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","encodeURIComponent","blob","oldSrc","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content","locals","webpackPolyfill","deprecate"],"mappings":"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MAAAD,GAAAC,GAgmBA,OAxiBAj7B,GAAAglB,SACAhlB,EAAA8Z,OACA9Z,EAAAu4B,UACAv4B,EAAAw4B,YACAx4B,EAAAuuB,gBACAvuB,EAAAy4B,cACAz4B,EAAA04B,MACA14B,EAAAilB,UACAjlB,EAAA23B,QACA33B,EAAA45B,WACA55B,EAAA43B,WACA53B,EAAAwnB,aACAxnB,EAAAkjB,SACAljB,EAAAmgB,SACAngB,EAAAogB,WACApgB,EAAAqgB,UACArgB,EAAAsxB,QACAtxB,EAAAuxB,YACAvxB,EAAAwxB,YACAxxB,EAAAk3B,WACAl3B,EAAA2qB,UACA3qB,EAAAklB,SACAllB,EAAAmlB,cACAnlB,EAAAolB,YACAplB,EAAAqzB,YACArzB,EAAA24B,gBACA34B,EAAA63B,SACA73B,EAAA83B,SACA93B,EAAA+1B,cACA/1B,EAAAg2B,gBACAh2B,EAAAi2B,kBACAj2B,EAAAsgB,QACAtgB,EAAAugB,aACAvgB,EAAAwgB,kBACAxgB,EAAAygB,aACAzgB,EAAA0gB,QACA1gB,EAAA+jB,UACA/jB,EAAAgkB,WACAhkB,EAAAikB,eACAjkB,EAAAkkB,gBACAlkB,EAAA6gB,WACA7gB,EAAA8gB,eACA9gB,EAAA+gB,gBACA/gB,EAAA2mB,QACA3mB,EAAA65B,QACA75B,EAAA85B,aACA95B,EAAAghB,aACAhhB,EAAAmrB,aACAnrB,EAAAorB,eACAprB,EAAAq3B,WACAr3B,EAAAmhB,WACAnhB,EAAAk2B,gBACAl2B,EAAAo2B,kBACAp2B,EAAAq2B,oBACAr2B,EAAA64B,UACA74B,EAAA84B,YACA94B,EAAAs3B,aACAt3B,EAAAjG,YACAiG,EAAAw3B,SACAx3B,EAAAkG,QACAlG,EAAA0O,UACA1O,EAAA/G,OACA+G,EAAAyrB,WACAzrB,EAAA0rB,aACA1rB,EAAAyxB,WACAzxB,EAAA0xB,mBACA1xB,EAAA4mB,WACA5mB,EAAAg5B,SACAh5B,EAAA44B,aACA54B,EAAA+5B,UACA/5B,EAAAg6B,YACAh6B,EAAA2xB,SACA3xB,EAAAgnB,UACAhnB,EA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","file":"synteny-dotplot-builder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// Expose our API, but not anywhere close to anything that might need to be\n\t// tested in node land.\n\t\n\twindow.makeSyntenyDotPlot = __webpack_require__(12).makeSyntenyDotPlot;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/**\n\t * @license\n\t * lodash <https://lodash.com/>\n\t * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.13.1';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Used as the `TypeError` message for \"Functions\" methods. */\n\t  var FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for wrapper metadata. */\n\t  var BIND_FLAG = 1,\n\t      BIND_KEY_FLAG = 2,\n\t      CURRY_BOUND_FLAG = 4,\n\t      CURRY_FLAG = 8,\n\t      CURRY_RIGHT_FLAG = 16,\n\t      PARTIAL_FLAG = 32,\n\t      PARTIAL_RIGHT_FLAG = 64,\n\t      ARY_FLAG = 128,\n\t      REARG_FLAG = 256,\n\t      FLIP_FLAG = 512;\n\t\n\t  /** Used to compose bitmasks for comparison styles. */\n\t  var UNORDERED_COMPARE_FLAG = 1,\n\t      PARTIAL_COMPARE_FLAG = 2;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 150,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n\t      reUnescapedHtml = /[&<>\"'`]/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match non-compound words composed of alphanumeric characters. */\n\t  var reBasicWord = /[a-zA-Z0-9]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect hexadecimal string values. */\n\t  var reHasHexPrefix = /^0x/i;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n\t  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reComplexWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n\t    rsUpper + '+' + rsOptUpperContr,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n\t    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map latin-1 supplementary letters to basic latin letters. */\n\t  var deburredLetters = {\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '`': '&#96;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\",\n\t    '&#96;': '`'\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\t\n\t  /** Detect `this` as the global object. */\n\t  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    var length = args.length;\n\t    switch (length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array ? array.length : 0;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to search.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array ? array.length : 0,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array ? array.length : 0;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array ? array.length : 0;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    if (value !== value) {\n\t      return indexOfNaN(array, fromIndex);\n\t    }\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array ? array.length : 0;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing wrapper metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a cache value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a global object.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n\t   */\n\t  function checkGlobal(value) {\n\t    return (value && value.Object === Object) ? value : null;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        result++;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  function deburrLetter(letter) {\n\t    return deburredLetters[letter];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeHtmlChar(chr) {\n\t    return htmlEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to search.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n\t   */\n\t  function indexOfNaN(array, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      var other = array[index];\n\t      if (other !== other) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * Checks if `value` is a host object in IE < 9.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n\t   */\n\t  function isHostObject(value) {\n\t    // Many host objects are `Object` objects that can coerce to strings\n\t    // despite having improperly defined `toString` methods.\n\t    var result = false;\n\t    if (value != null && typeof value.toString != 'function') {\n\t      try {\n\t        result = !!(value + '');\n\t      } catch (e) {}\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    if (!(string && reHasComplexSymbol.test(string))) {\n\t      return string.length;\n\t    }\n\t    var result = reComplexSymbol.lastIndex = 0;\n\t    while (reComplexSymbol.test(string)) {\n\t      result++;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return string.match(reComplexSymbol);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  function unescapeHtmlChar(chr) {\n\t    return htmlUnescapes[chr];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Use `context` to stub `Date#getTime` use in `_.now`.\n\t   * var stubbed = _.runInContext({\n\t   *   'Date': function() {\n\t   *     return { 'getTime': stubGetTime };\n\t   *   }\n\t   * });\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  function runInContext(context) {\n\t    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\t\n\t    /** Built-in constructor references. */\n\t    var Date = context.Date,\n\t        Error = context.Error,\n\t        Math = context.Math,\n\t        RegExp = context.RegExp,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = context.Array.prototype,\n\t        objectProto = context.Object.prototype,\n\t        stringProto = context.String.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = context.Function.prototype.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var objectToString = objectProto.toString;\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Reflect = context.Reflect,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        enumerate = Reflect ? Reflect.enumerate : undefined,\n\t        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n\t        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice;\n\t\n\t    /** Built-in method references that are mockable. */\n\t    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetPrototype = Object.getPrototypeOf,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = Object.keys,\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReplace = stringProto.replace,\n\t        nativeReverse = arrayProto.reverse,\n\t        nativeSplit = stringProto.split;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n\t    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array of at least `200` elements\n\t     * and any iteratees accept only one argument. The heuristic for whether a\n\t     * section qualifies for shortcut fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n\t     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n\t     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n\t     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n\t     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n\t     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n\t     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n\t     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n\t     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n\t     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB). Change the following template settings to use\n\t     * alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n\t          (arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      return this.has(key) && delete this.__data__[key];\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries ? entries.length : 0;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      return getMapData(this, key)['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      getMapData(this, key).set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values ? values.length : 0;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      this.__data__ = new ListCache(entries);\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      return this.__data__['delete'](key);\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var cache = this.__data__;\n\t      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n\t        cache = this.__data__ = new MapCache(cache.__data__);\n\t      }\n\t      cache.set(key, value);\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function assignInDefaults(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (typeof key == 'number' && value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to search.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          isNil = object == null,\n\t          length = paths.length,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        result[index] = isNil ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @param {boolean} [isFull] Specify a clone including symbols.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n\t      var result;\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          if (isHostObject(value)) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneObject(isFunc ? {} : value);\n\t          if (!isDeep) {\n\t            return copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      if (!isArr) {\n\t        var props = isFull ? getAllKeys(value) : keys(value);\n\t      }\n\t      // Recursively populate clone (susceptible to call stack limits).\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source),\n\t          length = props.length;\n\t\n\t      return function(object) {\n\t        if (object == null) {\n\t          return !length;\n\t        }\n\t        var index = length;\n\t        while (index--) {\n\t          var key = props[index],\n\t              predicate = source[key],\n\t              value = object[key];\n\t\n\t          if ((value === undefined &&\n\t              !(key in Object(object))) || !predicate(value)) {\n\t            return false;\n\t          }\n\t        }\n\t        return true;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseCreate(proto) {\n\t      return isObject(proto) ? objectCreate(proto) : {};\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts an array\n\t     * of `func` arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Object} args The arguments to provide to `func`.\n\t     * @returns {number} Returns the timer id.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n\t      // that are composed entirely of index properties, return `false` for\n\t      // `hasOwnProperty` checks of them.\n\t      return object != null &&\n\t        (hasOwnProperty.call(object, key) ||\n\t          (typeof object == 'object' && key in object && getPrototype(object) === null));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      if (!isKey(path, object)) {\n\t        path = castPath(path);\n\t        object = parent(object, path);\n\t        path = last(path);\n\t      }\n\t      var func = object == null ? object : object[toKey(path)];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {boolean} [bitmask] The bitmask of comparison flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - Unordered comparison\n\t     *     2 - Partial comparison\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, customizer, bitmask, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = arrayTag,\n\t          othTag = arrayTag;\n\t\n\t      if (!objIsArr) {\n\t        objTag = getTag(object);\n\t        objTag = objTag == argsTag ? objectTag : objTag;\n\t      }\n\t      if (!othIsArr) {\n\t        othTag = getTag(other);\n\t        othTag = othTag == argsTag ? objectTag : othTag;\n\t      }\n\t      var objIsObj = objTag == objectTag && !isHostObject(object),\n\t          othIsObj = othTag == objectTag && !isHostObject(other),\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n\t          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n\t      }\n\t      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      return nativeKeys(Object(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't skip the constructor\n\t     * property of prototypes or treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      object = object == null ? object : Object(object);\n\t\n\t      var result = [];\n\t      for (var key in object) {\n\t        result.push(key);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Fallback for IE < 9 with es6-shim.\n\t    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n\t      baseKeysIn = function(object) {\n\t        return iteratorToArray(enumerate(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      if (!(isArray(source) || isTypedArray(source))) {\n\t        var props = keysIn(source);\n\t      }\n\t      arrayEach(props || source, function(srcValue, key) {\n\t        if (props) {\n\t          key = srcValue;\n\t          srcValue = source[key];\n\t        }\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        newValue = srcValue;\n\t        if (isArray(srcValue) || isTypedArray(srcValue)) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            isCommon = false;\n\t            newValue = baseClone(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = objValue;\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      stack.set(srcValue, newValue);\n\t\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t      }\n\t      stack['delete'](srcValue);\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} props The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, props) {\n\t      object = Object(object);\n\t      return arrayReduce(props, function(result, key) {\n\t        if (key in object) {\n\t          result[key] = object[key];\n\t        }\n\t        return result;\n\t      }, {});\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, predicate) {\n\t      var index = -1,\n\t          props = getAllKeysIn(object),\n\t          length = props.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var key = props[index],\n\t            value = object[key];\n\t\n\t        if (predicate(value, key)) {\n\t          result[key] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.property` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function baseProperty(key) {\n\t      return function(object) {\n\t        return object == null ? undefined : object[key];\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          }\n\t          else if (!isKey(index, array)) {\n\t            var path = castPath(index),\n\t                object = parent(array, path);\n\t\n\t            if (object != null) {\n\t              delete object[toKey(last(path))];\n\t            }\n\t          }\n\t          else {\n\t            delete array[toKey(index)];\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments to numbers.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (isObject(nested)) {\n\t          var newValue = value;\n\t          if (index != lastIndex) {\n\t            var objValue = nested[key];\n\t            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t            if (newValue === undefined) {\n\t              newValue = objValue == null\n\t                ? (isIndex(path[index + 1]) ? [] : {})\n\t                : objValue;\n\t            }\n\t          }\n\t          assignValue(nested, key, newValue);\n\t        }\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop detection.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array ? array.length : low;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array ? array.length : 0,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t      object = parent(object, path);\n\t\n\t      var key = toKey(last(path));\n\t      return !(object != null && baseHas(object, key)) || delete object[key];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var index = -1,\n\t          length = arrays.length;\n\t\n\t      while (++index < length) {\n\t        var result = result\n\t          ? arrayPush(\n\t              baseDifference(result, arrays[index], iteratee, comparator),\n\t              baseDifference(arrays[index], result, iteratee, comparator)\n\t            )\n\t          : arrays[index];\n\t      }\n\t      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value) {\n\t      return isArray(value) ? value : stringToPath(value);\n\t    }\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var result = new buffer.constructor(buffer.length);\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : source[key];\n\t\n\t        assignValue(object, key, newValue);\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbol properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return rest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBaseWrapper(func, bitmask, thisArg) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = reHasComplexSymbol.test(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtorWrapper(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurryWrapper(func, bitmask, arity) {\n\t      var Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        predicate = getIteratee(predicate, 3);\n\t        if (!isArrayLike(collection)) {\n\t          var props = keys(collection);\n\t        }\n\t        var index = findIndexFunc(props || collection, function(value, key) {\n\t          if (props) {\n\t            key = value;\n\t            value = iterable[key];\n\t          }\n\t          return predicate(value, key, iterable);\n\t        }, fromIndex);\n\t        return index > -1 ? collection[props ? props[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return rest(function(funcs) {\n\t        funcs = baseFlatten(funcs, 1);\n\t\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 &&\n\t              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & ARY_FLAG,\n\t          isBind = bitmask & BIND_FLAG,\n\t          isBindKey = bitmask & BIND_KEY_FLAG,\n\t          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurryWrapper(\n\t            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtorWrapper(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return 0;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return rest(function(iteratees) {\n\t        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n\t          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t        return rest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return reHasComplexSymbol.test(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartialWrapper(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & BIND_FLAG,\n\t          Ctor = createCtorWrapper(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toNumber(start);\n\t        start = start === start ? start : 0;\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toNumber(end) || 0;\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n\t     *  for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask of wrapper flags.\n\t     *  The bitmask may be composed of the following flags:\n\t     *     1 - `_.bind`\n\t     *     2 - `_.bindKey`\n\t     *     4 - `_.curry` or `_.curryRight` of a bound function\n\t     *     8 - `_.curry`\n\t     *    16 - `_.curryRight`\n\t     *    32 - `_.partial`\n\t     *    64 - `_.partialRight`\n\t     *   128 - `_.rearg`\n\t     *   256 - `_.ary`\n\t     *   512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] == null\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == BIND_FLAG) {\n\t        var result = createBaseWrapper(func, bitmask, thisArg);\n\t      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n\t        result = createCurryWrapper(func, bitmask, arity);\n\t      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartialWrapper(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybridWrapper.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setter(result, newData);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!seen.has(othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n\t                  return seen.add(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          // Coerce dates and booleans to numbers, dates to milliseconds and\n\t          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n\t          // not equal.\n\t          return +object == +other;\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case numberTag:\n\t          // Treat `NaN` vs. `NaN` as equal.\n\t          return (object != +object) ? other != +other : object == +other;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= UNORDERED_COMPARE_FLAG;\n\t          stack.set(object, other);\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n\t     *  for more details.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n\t      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n\t          objProps = keys(object),\n\t          objLength = objProps.length,\n\t          othProps = keys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : baseHas(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the \"length\" property value of `object`.\n\t     *\n\t     * **Note:** This function is used to avoid a\n\t     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n\t     * Safari on at least iOS 8.1-8.3 ARM64.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {*} Returns the \"length\" value.\n\t     */\n\t    var getLength = baseProperty('length');\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the `[[Prototype]]` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {null|Object} Returns the `[[Prototype]]`.\n\t     */\n\t    function getPrototype(value) {\n\t      return nativeGetPrototype(Object(value));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbol properties of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    function getSymbols(object) {\n\t      // Coerce `object` to an object to avoid non-object errors in V8.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n\t      return getOwnPropertySymbols(Object(object));\n\t    }\n\t\n\t    // Fallback for IE < 11.\n\t    if (!getOwnPropertySymbols) {\n\t      getSymbols = stubArray;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbol properties\n\t     * of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function getTag(value) {\n\t      return objectToString.call(value);\n\t    }\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11,\n\t    // for data views in Edge, and promises in Node.js.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = objectToString.call(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : undefined;\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var result,\n\t          index = -1,\n\t          length = path.length;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result) {\n\t        return result;\n\t      }\n\t      var length = object ? object.length : 0;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isString(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Creates an array of index keys for `object` values of arrays,\n\t     * `arguments` objects, and strings, otherwise `null` is returned.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array|null} Returns index keys, else `null`.\n\t     */\n\t    function indexKeys(object) {\n\t      var length = object ? object.length : undefined;\n\t      if (isLength(length) &&\n\t          (isArray(object) || isString(object) || isArguments(object))) {\n\t        return baseTimes(length, String);\n\t      }\n\t      return null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n\t     * iteratee shorthand.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenableIteratee(value) {\n\t      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n\t        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = (function() {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function(key, value) {\n\t        var stamp = now(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return key;\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return baseSetData(key, value);\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoize(function(string) {\n\t      var result = [];\n\t      toString(string).replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to process.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array ? array.length : 0;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array ? array.length : 0,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length,\n\t          args = Array(length ? length - 1 : 0),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return length\n\t        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique `array` values not included in the other given\n\t     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = rest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. Result values\n\t     * are chosen from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = rest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['fred', 30], ['barney', 40]]);\n\t     * // => { 'fred': 30, 'barney': 40 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs ? pairs.length : 0,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      return dropRight(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order of result values is determined by the\n\t     * order they occur in the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = rest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. Result values are chosen from the first array.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. Result values are chosen\n\t     * from the first array. The comparator is invoked with two arguments:\n\t     * (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = rest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (comparator === last(mapped)) {\n\t        comparator = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array ? nativeJoin.call(array, separator) : '';\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array ? array.length : 0;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = (\n\t          index < 0\n\t            ? nativeMax(length + index, 0)\n\t            : nativeMin(index, length - 1)\n\t        ) + 1;\n\t      }\n\t      if (value !== value) {\n\t        return indexOfNaN(array, index - 1, true);\n\t      }\n\t      while (index--) {\n\t        if (array[index] === value) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = rest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = rest(function(array, indexes) {\n\t      indexes = baseFlatten(indexes, 1);\n\t\n\t      var length = array ? array.length : 0,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array ? nativeReverse.call(array) : array;\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to search.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array ? array.length : 0;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      return drop(array, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array ? array.length : 0;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false},\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = rest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each\n\t     * element is kept.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length)\n\t        ? baseUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, getIteratee(iteratee))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      return (array && array.length)\n\t        ? baseUniq(array, undefined, comparator)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['fred', 'barney'], [30, 40], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = rest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = rest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = rest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The comparator is invoked with\n\t     * two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = rest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n\t     * // => [['fred', 30, true], ['barney', 40, false]]\n\t     */\n\t    var zip = rest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = rest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = rest(function(paths) {\n\t      paths = baseFlatten(paths, 1);\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _([1, 2]).forEach(function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        result[key] = [value];\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to search.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n\t     * // => true\n\t     *\n\t     * _.includes('pebbles', 'eb');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `methodName` is a function, it's\n\t     * invoked for and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = rest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          isProp = isKey(path),\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n\t        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      result[key] = value;\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      predicate = getIteratee(predicate, 3);\n\t      return func(collection, function(value, index, collection) {\n\t        return !predicate(value, index, collection);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var array = isArrayLike(collection) ? collection : values(collection),\n\t          length = array.length;\n\t\n\t      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      var index = -1,\n\t          result = toArray(collection),\n\t          length = result.length,\n\t          lastIndex = length - 1;\n\t\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = baseClamp(toInteger(n), 0, length);\n\t      }\n\t      while (++index < n) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = result[rand];\n\t\n\t        result[rand] = result[index];\n\t        result[index] = value;\n\t      }\n\t      result.length = n;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      return sampleSize(collection, MAX_ARRAY_LENGTH);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        var result = collection.length;\n\t        return (result && isString(collection)) ? stringSize(collection) : result;\n\t      }\n\t      if (isObjectLike(collection)) {\n\t        var tag = getTag(collection);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return collection.size;\n\t        }\n\t      }\n\t      return keys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, function(o) { return o.user; });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     *\n\t     * _.sortBy(users, 'user', function(o) {\n\t     *   return Math.floor(o.age / 10);\n\t     * });\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    var sortBy = rest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n\t        ? iteratees[0]\n\t        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\t\n\t      return baseOrderBy(collection, iteratees, []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    function now() {\n\t      return Date.now();\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => allows adding up to 4 contacts to the list\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = rest(function(func, thisArg, partials) {\n\t      var bitmask = BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = rest(function(object, key, partials) {\n\t      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= PARTIAL_FLAG;\n\t      }\n\t      return createWrapper(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide an options object to indicate whether `func` should be invoked on\n\t     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent calls\n\t     * to the debounced function return the result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n\t     * on the trailing edge of the timeout only if the debounced function is\n\t     * invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one or more milliseconds.\n\t     */\n\t    var defer = rest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = rest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrapper(func, FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result);\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Assign cache to `_.memoize`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        return !predicate.apply(this, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // `initialize` invokes `createApplication` once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments transformed by\n\t     * corresponding `transforms`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [transforms[_.identity]] The functions to transform.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = rest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return rest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * var greet = function(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * };\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = rest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = rest(function(func, indexes) {\n\t      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        switch (start) {\n\t          case 0: return func.call(this, array);\n\t          case 1: return func.call(this, args[0], array);\n\t          case 2: return func.call(this, args[0], args[1], array);\n\t        }\n\t        var otherArgs = Array(start + 1);\n\t        index = -1;\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = array;\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n\t      return rest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide an options object to indicate whether\n\t     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to the wrapper function as its\n\t     * first argument. Any additional arguments provided to the function are\n\t     * appended to those provided to the wrapper function. The wrapper is invoked\n\t     * with the `this` binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      wrapper = wrapper == null ? identity : wrapper;\n\t      return partial(wrapper, value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, false, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      return baseClone(value, false, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, true, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      return baseClone(value, true, true, customizer);\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    function isArguments(value) {\n\t      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n\t      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n\t        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @type {Function}\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    function isArrayBuffer(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(getLength(value)) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && objectToString.call(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = !Buffer ? stubFalse : function(value) {\n\t      return value instanceof Buffer;\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    function isDate(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || isString(value) || isFunction(value.splice) ||\n\t            isArguments(value) || isBuffer(value))) {\n\t        return !value.length;\n\t      }\n\t      if (isObjectLike(value)) {\n\t        var tag = getTag(value);\n\t        if (tag == mapTag || tag == setTag) {\n\t          return !value.size;\n\t        }\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return !(nonEnumShadows && keys(value).length);\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are **not** supported.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     * var other = { 'user': 'fred' };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      return (objectToString.call(value) == errorTag) ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n\t      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n\t      var tag = isObject(value) ? objectToString.call(value) : '';\n\t      return tag == funcTag || tag == genTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This function is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return !!value && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return !!value && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    function isMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values. This method is\n\t     * equivalent to a `_.matches` function when `source` is partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred', 'age': 40 };\n\t     *\n\t     * _.isMatch(object, { 'age': 40 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'age': 36 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the\n\t     * presence of the `core-js` package because `core-js` circumvents this kind\n\t     * of detection. Despite multiple requests, the `core-js` maintainer has made\n\t     * it clear: any attempt to fix the detection will be obstructed. As a result,\n\t     * we're left with little choice but to throw an error. Unfortunately, this\n\t     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on `core-js`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && objectToString.call(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) ||\n\t          objectToString.call(value) != objectTag || isHostObject(value)) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return (typeof Ctor == 'function' &&\n\t        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    function isRegExp(value) {\n\t      return isObject(value) && objectToString.call(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    function isSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    function isTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is correctly classified,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (iteratorSymbol && value[iteratorSymbol]) {\n\t        return iteratorToArray(value[iteratorSymbol]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.e = 5;\n\t     * }\n\t     *\n\t     * Foo.prototype.d = 4;\n\t     * Bar.prototype.f = 6;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3, 'e': 5 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.d = 4;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     * Bar.prototype.e = 5;\n\t     *\n\t     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keysIn(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        assignValue(object, key, source[key]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = rest(function(object, paths) {\n\t      return baseAt(object, baseFlatten(paths, 1));\n\t    });\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties ? baseAssign(result, properties) : result;\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     */\n\t    var defaults = rest(function(args) {\n\t      args.push(undefined, assignInDefaults);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n\t     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n\t     *\n\t     */\n\t    var defaultsDeep = rest(function(args) {\n\t      args.push(undefined, mergeDefaults);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to search.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is used in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = rest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      var isProto = isPrototype(object);\n\t      if (!(isProto || isArrayLike(object))) {\n\t        return baseKeys(object);\n\t      }\n\t      var indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      for (var key in object) {\n\t        if (baseHas(object, key) &&\n\t            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(isProto && key == 'constructor')) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      var index = -1,\n\t          isProto = isPrototype(object),\n\t          props = baseKeysIn(object),\n\t          propsLength = props.length,\n\t          indexes = indexKeys(object),\n\t          skipIndexes = !!indexes,\n\t          result = indexes || [],\n\t          length = result.length;\n\t\n\t      while (++index < propsLength) {\n\t        var key = props[index];\n\t        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n\t            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[iteratee(value, key, object)] = value;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        result[key] = iteratee(value, key, object);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n\t     * };\n\t     *\n\t     * var ages = {\n\t     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n\t     * };\n\t     *\n\t     * _.merge(users, ages);\n\t     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with seven arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = {\n\t     *   'fruits': ['apple'],\n\t     *   'vegetables': ['beet']\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'fruits': ['banana'],\n\t     *   'vegetables': ['carrot']\n\t     * };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable string keyed properties of `object` that are\n\t     * not omitted.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = rest(function(object, props) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      props = arrayMap(baseFlatten(props, 1), toKey);\n\t      return basePick(object, baseDifference(getAllKeysIn(object), props));\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, function(value, key) {\n\t        return !predicate(value, key);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [props] The property identifiers to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = rest(function(object, props) {\n\t      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Array|Function|Object|string} [predicate=_.identity]\n\t     *  The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = isKey(path, object) ? [path] : castPath(path);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        object = undefined;\n\t        length = 1;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object) || isTypedArray(object);\n\t      iteratee = getIteratee(iteratee, 4);\n\t\n\t      if (accumulator == null) {\n\t        if (isArr || isObject(object)) {\n\t          var Ctor = object.constructor;\n\t          if (isArr) {\n\t            accumulator = isArray(object) ? new Ctor : [];\n\t          } else {\n\t            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t          }\n\t        } else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object ? baseValues(object, keys(object)) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toNumber(start) || 0;\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toNumber(end) || 0;\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toNumber(lower) || 0;\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toNumber(upper) || 0;\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * to basic latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      position -= target.length;\n\t      return position >= 0 && string.indexOf(target, position) == position;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n\t     * their corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * Backticks are escaped because in IE < 9, they can break out of\n\t     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n\t     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n\t     * [#133](https://html5sec.org/#133) of the\n\t     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      // Chrome fails to trim leading <BOM> whitespace characters.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      string = toString(string).replace(reTrim, '');\n\t      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (separator == '' && reHasComplexSymbol.test(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return nativeSplit.call(string, separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to search.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = baseClamp(toInteger(position), 0, string.length);\n\t      return string.lastIndexOf(baseToString(target), position) == position;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, assignInDefaults);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (reHasComplexSymbol.test(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = rest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'onClick': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['onClick']);\n\t     * jQuery(element).on('click', view.onClick);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = rest(function(object, methodNames) {\n\t      arrayEach(baseFlatten(methodNames, 1), function(key) {\n\t        key = toKey(key);\n\t        object[key] = bind(object[key], object);\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.constant(true),                _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs ? pairs.length : 0,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return rest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument given to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`. The created function is equivalent to\n\t     * `_.isMatch` with a `source` partially applied.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n\t     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** This method supports comparing the same values as `_.isEqual`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * _.find(users, _.matchesProperty('user', 'fred'));\n\t     * // => { 'user': 'fred' }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, true));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = rest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = rest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * A method that returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return rest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [iteratees=[_.identity]] The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n\t     *  [predicates=[_.identity]] The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * A method that returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * A method that returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A method that returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * A method that returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * A method that returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    });\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    });\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Array|Function|Object|string} [iteratee=_.identity]\n\t     *  The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.deburr = deburr;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        var filtered = this.__filtered__;\n\t        if (filtered && !index) {\n\t          return new LazyWrapper(this);\n\t        }\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = this.clone();\n\t        if (filtered) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      predicate = getIteratee(predicate, 3);\n\t      return this.filter(function(value) {\n\t        return !predicate(value);\n\t      });\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    if (iteratorSymbol) {\n\t      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Expose Lodash on the free variable `window` or `self` when available so it's\n\t  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n\t  // also prevents errors in cases where Lodash is loaded by a script tag in the\n\t  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n\t  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n\t  (freeSelf || {})._ = _;\n\t\n\t  // Some AMD build optimizers like r.js check for condition patterns like the following:\n\t  if (true) {\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(21)(module), (function() { return this; }())))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.ROUNDING_FACTOR = 10;\n\t\n\texports.RUN_BENCHMARKS = false;\n\t\n\texports.SHOW_MAXIMA_AND_MINIMA = false;\n\t\n\texports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\t\n\texports.SYNTENY_MARGIN = 50;\n\texports.CIRCLE_RADIUS = 2;\n\texports.UNSELECTED_DOT_FILL = '#D0D0D0';\n\texports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\texports.DOTPLOT_COLOR_TRANS_LEN = 500;\n\texports.MAXIMIZE_WIDTH = true;\n\texports.MIN_TEXT_GAP = 12;\n\texports.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS = 50;\n\t\n\texports.HISTOGRAM_MARGIN = 50;\n\texports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\n\texports.NUM_HISTOGRAM_TICKS = 75;\n\texports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\texports.COLOR_RANGES = {\n\t  rg: {\n\t    range: ['red', 'green'],\n\t    quantized: false\n\t  },\n\t  rg_quantized: { /* From colorbrewer */\n\t    range: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\t    quantized: true\n\t  },\n\t  rainbow: {\n\t    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t    quantized: false\n\t  },\n\t  rainbow_quantized: {\n\t    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t    quantized: true\n\t  },\n\t  unselected: {\n\t    range: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t    quantized: false\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t  var computed = getComputedStyle(element)[attr];\n\t  return parseInt(computed, 10);\n\t};\n\t\n\texports.samplePointsInRange = function (extent, n) {\n\t  return _.map(_.range(n), d3.scale.linear().domain([0, n - 1]).range(extent));\n\t};\n\t\n\texports.timeIt = function (f, name) {\n\t  return function () {\n\t    var start = Date.now();\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    var x = f.call.apply(f, [null].concat(args));\n\t    console.log(name, Date.now() - start);\n\t    return x;\n\t  };\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\texports.simplify = function simplify(dirtyPoints, persistence) {\n\t  var points = removeNonExtrema(dirtyPoints);\n\t  var index = indexOfSmallestPointDifference(points);\n\t\n\t  if (points.length < 3 || gapBetweenPoints(points, index) > persistence) return points;\n\t\n\t  var toRemove = index === 0 ? 1 : index;\n\t  points.splice(toRemove, 1);\n\t\n\t  return simplify(points, persistence);\n\t};\n\t\n\tfunction removeNonExtrema(A) {\n\t  return _.filter(A, function (element, index) {\n\t    if (index === 0 || index === A.length - 1) return true;\n\t\n\t    var before = A[index - 1].y;\n\t    var here = element.y;\n\t    var after = A[index + 1].y;\n\t    return here > Math.max(before, after) || here < Math.min(before, after);\n\t  });\n\t}\n\t\n\tfunction gapBetweenPoints(A, i) {\n\t  return Math.abs(A[i].y - A[i + 1].y);\n\t}\n\t\n\tfunction indexOfSmallestPointDifference(A) {\n\t  return _(A.length - 1).range().minBy(function (i) {\n\t    return gapBetweenPoints(A, i);\n\t  });\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function transform(props) {\n\t  var transform = [];\n\t  if (Array.isArray(props)) {\n\t    props.forEach(function forEachAccessor(prop) {\n\t      var key = Object.keys(prop)[0];\n\t      transform.push(key + '(' + prop[key] + ')');\n\t    });\n\t  }\n\t  return transform.join(' ');\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(1);\n\t\n\t/*\n\t * I want to run a benchmark, but I don't want to block UI updates \n\t * in between iterations.\n\t *\n\t * My guess is that this isn't super accurate for fast functions.\n\t */\n\texports.benchmark = function (testArgs, f, done) {\n\t\n\t  var results = [];\n\t  var runOne = function runOne(tests) {\n\t    if (!tests.length) return done(stats(results));\n\t\n\t    results.push(timeIt(f, tests[0]));\n\t    setTimeout(runOne, 0, tests.slice(1));\n\t  };\n\t  setTimeout(runOne, 0, testArgs);\n\t\n\t  var timeIt = function timeIt(f, arg) {\n\t    var start = Date.now();\n\t    f(arg);\n\t    return Date.now() - start;\n\t  };\n\t\n\t  var stats = function stats(times) {\n\t    return {\n\t      totalTime: _.sum(times),\n\t      count: times.length,\n\t      max: _.max(times),\n\t      average: _.sum(times) / times.length\n\t    };\n\t  };\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar AUTO_SCALE_VALLEY_FILL = _require.AUTO_SCALE_VALLEY_FILL;\n\t\n\t\n\texports.generateAutoScale = function (points, persistence) {\n\t  var extrema = persistenceFuncs.simplify(points, persistence);\n\t  return generateColorScaleFromExtrema(extrema);\n\t};\n\t\n\tvar isMaxima = function isMaxima(A, i) {\n\t  return A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t};\n\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t  // This is bad, but we are special casing the first maximum if it is \"big.\"\n\t  // This gives the ks == 0 spike color. The\n\t  if (i == 0 && A[i].y >= _.max(_.map(A, function (x) {\n\t    return x.y;\n\t  }))) {\n\t    return true;\n\t  }\n\t  // common case: normal maxima\n\t  return i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t};\n\t\n\tvar generateColorScaleFromExtrema = function generateColorScaleFromExtrema(extrema) {\n\t  var colors = d3.scale.category10();\n\t\n\t  var colored = _.map(extrema, function (x, i, A) {\n\t    var color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n\t    return Object.assign({}, x, { color: color });\n\t  });\n\t\n\t  var domain = _.map(colored, function (d) {\n\t    return d.x + d.dx / 2;\n\t  });\n\t  var range = _.map(colored, function (d) {\n\t    return d.color;\n\t  });\n\t\n\t  return d3.scale.linear().domain(domain).range(range);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar d3 = __webpack_require__(2);\n\tvar _ = __webpack_require__(1);\n\tvar utils = __webpack_require__(4);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar COLOR_RANGES = _require.COLOR_RANGES;\n\t\n\t\n\texports.onData = function (data) {\n\t  var generateScale = function generateScale(field, name) {\n\t    var extent = d3.extent(data, function (point) {\n\t      return point[field];\n\t    });\n\t\n\t    var colorScale = COLOR_RANGES[name];\n\t    var range = colorScale.range;\n\t    var domain = utils.samplePointsInRange(extent, range.length);\n\t\n\t    if (colorScale.quantized) {\n\t      return d3.scale.quantize().domain(domain).range(range);\n\t    } else {\n\t      return d3.scale.linear().domain(domain).range(range);\n\t    }\n\t  };\n\t\n\t  /* _.memoize acts only on the first arg unless we tell it otherwise */\n\t  return _.memoize(generateScale, function (field, name) {\n\t    return field + '.' + name;\n\t  });\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar SYNTENY_MARGIN = _require.SYNTENY_MARGIN;\n\tvar CIRCLE_RADIUS = _require.CIRCLE_RADIUS;\n\tvar UNSELECTED_DOT_FILL = _require.UNSELECTED_DOT_FILL;\n\tvar NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = _require.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\tvar GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS = _require.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS;\n\tvar DOTPLOT_COLOR_TRANS_LEN = _require.DOTPLOT_COLOR_TRANS_LEN;\n\tvar MAXIMIZE_WIDTH = _require.MAXIMIZE_WIDTH;\n\tvar MIN_TEXT_GAP = _require.MIN_TEXT_GAP;\n\tvar ROUNDING_FACTOR = _require.ROUNDING_FACTOR;\n\t\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\t  var xExtent = d3.extent(dataObj.getXLineOffsets());\n\t  var yExtent = d3.extent(dataObj.getYLineOffsets());\n\t  var dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t  var baseID = id.substring(1);\n\t  var svgElement = document.getElementById(baseID);\n\t\n\t  var getComputedWidth = function getComputedWidth() {\n\t    return utils.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n\t  };\n\t  var getComputedHeight = function getComputedHeight() {\n\t    return utils.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n\t  };\n\t\n\t  var getWidth = function getWidth() {\n\t    var screenRatio = getComputedHeight() / getComputedWidth();\n\t    if (screenRatio > dataAspectRatio) {\n\t      // We are too tall. Use the entire width.\n\t      return getComputedWidth();\n\t    } else {\n\t      // We are too wide. Only use as much width as we have height for.\n\t      return getComputedHeight() / dataAspectRatio;\n\t    }\n\t  };\n\t\n\t  var getHeight = function getHeight() {\n\t    var screenRatio = getComputedHeight() / getComputedWidth();\n\t    if (screenRatio > dataAspectRatio) {\n\t      // We are too tall. Only use as much height as we have width for.\n\t      return getComputedWidth() * dataAspectRatio;\n\t    } else {\n\t      // We are too wide. Use the entire height.\n\t      return getComputedHeight();\n\t    }\n\t  };\n\t\n\t  var xScale = d3.scale.linear().domain(xExtent).range([0, getWidth()]);\n\t  var yScale = d3.scale.linear().domain(yExtent).range([getHeight(), 0]);\n\t\n\t  var darknessOfTextGaps = function darknessOfTextGaps(values, scale) {\n\t    return _.zipWith(values, _.tail(values), function (a, b) {\n\t      return b ? Math.abs(scale(b) - scale(a)) : 10000;\n\t    }).map(function (v) {\n\t      return v > MIN_TEXT_GAP ? 1 : v / MIN_TEXT_GAP;\n\t    }).map(function (v) {\n\t      return 255 - Math.floor(v * 256);\n\t    }).map(function (v) {\n\t      return Math.min(v, 245);\n\t    });\n\t  };\n\t\n\t  var filterTextGaps = function filterTextGaps(values, scale) {\n\t    return values.reduce(function (out, next) {\n\t      var first = out.length === 0;\n\t      var gap = Math.abs(scale(next) - scale(_.last(out)));\n\t      var gap_has_elapsed = gap > MIN_TEXT_GAP;\n\t      if (first || gap_has_elapsed) out.push(next);\n\t      return out;\n\t    }, []);\n\t  };\n\t\n\t  var genGeVOLink = function genGeVOLink(aDbId, bDbId) {\n\t    return 'http://geco.iplantcollaborative.org/asherkhb/coge/GEvo.pl?' + ('fid1=' + aDbId + ';fid2=' + bDbId + ';apply_all=' + 50000 + ';num_seqs=' + 2);\n\t  };\n\t\n\t  var getSingleGeVoDescription = function getSingleGeVoDescription(id) {\n\t    return fetch('https://genomevolution.org/coge/api/v1/features/' + id).then(function (r) {\n\t      return r.json();\n\t    });\n\t  };\n\t\n\t  var getGeVODescription = function getGeVODescription(aDbId, bDbId) {\n\t    return Promise.all([getSingleGeVoDescription(aDbId), getSingleGeVoDescription(bDbId)]).then(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 2);\n\t\n\t      var x = _ref2[0];\n\t      var y = _ref2[1];\n\t\n\t      return { x_name: x.names.join(', '), y_name: y.names.join(', ') };\n\t    });\n\t  };\n\t\n\t  var highlighted = void 0;\n\t  var updateGeVOLink = function updateGeVOLink(x, y) {\n\t    var distance = function distance(d) {\n\t      var x_component = Math.pow(d.x_relative_offset - x, 2);\n\t      var y_component = Math.pow(d.y_relative_offset - y, 2);\n\t      return Math.sqrt(x_component + y_component);\n\t    };\n\t    var point = _.minBy(dataObj.currentData().raw, distance);\n\t    highlighted = point;\n\t\n\t    var ratio = (xScale.range()[1] - xScale.range()[0]) / (xScale.domain()[1] - xScale.domain()[0]);\n\t    if (distance(point) * ratio < GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS) {\n\t      d3.select('#gevo-link').text('Compare in GEvo >>>').attr('onclick', function () {\n\t        var link = genGeVOLink(point.x_feature_id, point.y_feature_id);\n\t        return 'window.open(\\'' + link + '\\')';\n\t      });\n\t      getGeVODescription(point.x_feature_id, point.y_feature_id).then(function (_ref3) {\n\t        var x_name = _ref3.x_name;\n\t        var y_name = _ref3.y_name;\n\t\n\t        d3.select('#gevo-link-xname').text(meta.x_name + ': ' + x_name);\n\t        d3.select('#gevo-link-yname').text(meta.y_name + ': ' + y_name);\n\t      });\n\t    }\n\t\n\t    setSyntenyData();\n\t  };\n\t\n\t  var makeLabels = function makeLabels() {\n\t\n\t    var xFilter = function xFilter(x) {\n\t      return 0 <= xScale(x) && xScale(x) <= getWidth();\n\t    };\n\t    var yFilter = function yFilter(y) {\n\t      return 0 <= yScale(y) && yScale(y) <= getHeight();\n\t    };\n\t\n\t    var tempXOffsets = _.filter(xOffsets, xFilter);\n\t    var tempYOffsets = _.filter(yOffsets, yFilter);\n\t    var tempXGaps = filterTextGaps(_.filter(xMidpoints, xFilter), xScale);\n\t    var tempYGaps = filterTextGaps(_.filter(yMidpoints, yFilter), yScale);\n\t\n\t    xGridLines.tickValues(tempXOffsets);\n\t    xLabels.tickValues(tempXGaps);\n\t    yGridLines.tickValues(tempYOffsets);\n\t    yLabels.tickValues(tempYGaps);\n\t\n\t    xAxisGapsGroup.call(xLabels);\n\t    yAxisGapsGroup.call(yLabels);\n\t    xAxisLineGroup.call(xGridLines);\n\t    yAxisLineGroup.call(yGridLines);\n\t\n\t    var tempXOffsetDarknesses = darknessOfTextGaps(tempXOffsets, xScale);\n\t    var tempYOffsetDarknesses = darknessOfTextGaps(tempYOffsets, yScale);\n\t\n\t    xAxisLineGroup.selectAll('line').data(tempXOffsetDarknesses).style('stroke', function (d) {\n\t      return d3.rgb(d, d, d);\n\t    });\n\t\n\t    yAxisLineGroup.selectAll('line').data(tempYOffsetDarknesses).style('stroke', function (d) {\n\t      return d3.rgb(d, d, d);\n\t    });\n\t  };\n\t\n\t  var zoom = d3.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t    var t = d3.event.translate;\n\t    var s = d3.event.scale;\n\t    t[0] = Math.min(0, Math.max(-getWidth() * s + getWidth(), t[0]));\n\t    t[1] = Math.min(0, Math.max(-getHeight() * s + getHeight(), t[1]));\n\t    // prevents the translate from growing large. This way, you don't\n\t    // have to \"scroll back\" onto the canvas if you pan past the edge.\n\t    zoom.translate(t);\n\t\n\t    brushGroup.attr('transform', transform([{ translate: t }, { scale: s }]));\n\t\n\t    resizeBrushBoundary();\n\t    makeLabels();\n\t    drawBG();\n\t    setSyntenyData();\n\t  });\n\t\n\t  function resizeBrushBoundary() {\n\t    var scaling = zoom.scale();\n\t    var corners = ['.nw', '.ne', '.se', '.sw'];\n\t    var vertical = ['.e', '.w'];\n\t    var horizontal = ['.n', '.s'];\n\t    var horizontalRescale = corners.concat(vertical);\n\t    var verticalRescale = corners.concat(horizontal);\n\t\n\t    _.map(horizontalRescale, function (name) {\n\t      d3.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t    });\n\t\n\t    _.map(verticalRescale, function (name) {\n\t      d3.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t    });\n\t  }\n\t\n\t  /* We are copying the scale here because brushes do not play nice with\n\t   * zooming. All sorts of nasty things happen when the scales get changed\n\t   * underneath a brush. */\n\t  var originalXScale = xScale.copy();\n\t  var originalYScale = yScale.copy();\n\t  var brush = d3.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t    if (!brush.empty()) {\n\t      dataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t      resizeBrushBoundary();\n\t    }\n\t  }).on('brushend', function () {\n\t    if (brush.empty()) {\n\t      dataObj.removeSpatialFilter('spatial-stop');\n\t      var mouse = d3.mouse(this);\n\t      var x = originalXScale.invert(mouse[0]);\n\t      var y = originalYScale.invert(mouse[1]);\n\t      updateGeVOLink(x, y);\n\t    } else {\n\t      dataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t      resizeBrushBoundary();\n\t    }\n\t  });\n\t\n\t  var canvas = d3.select(id + '-canvas').attr('width', getWidth()).attr('height', getHeight()).style('left', SYNTENY_MARGIN).style('top', SYNTENY_MARGIN);\n\t\n\t  var backCanvas = d3.select(id + '-canvas-background').attr('width', getWidth()).attr('height', getHeight()).style('left', SYNTENY_MARGIN).style('top', SYNTENY_MARGIN);\n\t\n\t  var context = canvas.node().getContext('2d');\n\t  var background = backCanvas.node().getContext('2d');\n\t\n\t  var svg = d3.select(id);\n\t\n\t  var TEXT_OFFSET = 35;\n\t  var TEXT_BOX_HEIGHT = 25;\n\t  svg.append('text').attr('x', (getWidth() + 2 * SYNTENY_MARGIN) / 3).attr('width', (getWidth() + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN + getHeight() + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.x_name);\n\t\n\t  svg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (getHeight() + 2 * SYNTENY_MARGIN) / 3).attr('width', (getHeight() + 2 * SYNTENY_MARGIN) / 3).attr('y', SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.y_name);\n\t\n\t  svg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', getWidth()).attr('y', 0).attr('height', getHeight()).attr('fill', 'black');\n\t\n\t  var midpoints = function midpoints(points) {\n\t    return _.zipWith(_.initial(points), _.tail(points), function (a, b) {\n\t      return (a + b) / 2;\n\t    });\n\t  };\n\t\n\t  var xOffsets = dataObj.getXLineOffsets();\n\t  var xMidpoints = midpoints(xOffsets);\n\t\n\t  var xOffsetToName = _.fromPairs(_.zip(xMidpoints, dataObj.getXLineNames()));\n\t  var xAxisBase = function xAxisBase() {\n\t    return d3.svg.axis().scale(xScale).orient('bottom');\n\t  };\n\t\n\t  var xGridLines = xAxisBase().tickFormat('').tickSize(-getHeight());\n\t\n\t  var xLabels = xAxisBase().tickFormat(function (x) {\n\t    return xOffsetToName[x];\n\t  }).tickSize(0);\n\t\n\t  var transformer = transform([{ translate: [SYNTENY_MARGIN, getHeight() + SYNTENY_MARGIN] }]);\n\t  var xAxisWrapper = svg.append('g').attr('transform', transformer);\n\t  var xAxisGapsGroup = xAxisWrapper.append('g');\n\t  var xAxisLineGroup = xAxisWrapper.append('g');\n\t\n\t  var yOffsets = dataObj.getYLineOffsets();\n\t  var yMidpoints = midpoints(yOffsets);\n\t\n\t  var yOffsetToName = _.fromPairs(_.zip(yMidpoints, dataObj.getYLineNames()));\n\t  var yAxisBase = function yAxisBase() {\n\t    return d3.svg.axis().scale(yScale).orient('left');\n\t  };\n\t\n\t  var yGridLines = yAxisBase().tickFormat('').tickSize(-getWidth());\n\t\n\t  var yLabels = yAxisBase().tickFormat(function (x) {\n\t    return yOffsetToName[x];\n\t  }).tickSize(0);\n\t\n\t  var yAxisWrapper = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }]));\n\t  var yAxisGapsGroup = yAxisWrapper.append('g');\n\t  var yAxisLineGroup = yAxisWrapper.append('g');\n\t\n\t  makeLabels();\n\t\n\t  svg = svg.append('g').attr('transform', transform([{ translate: [SYNTENY_MARGIN, SYNTENY_MARGIN] }])).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t  var brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t  var colorScale = initialColorScale;\n\t\n\t  function drawBG() {\n\t    var allDots = dataObj.currentData().raw;\n\t    var width = getWidth();\n\t    var height = getHeight();\n\t    background.clearRect(0, 0, width, height);\n\t    background.fillStyle = UNSELECTED_DOT_FILL;\n\t    _.each(allDots, function (d) {\n\t      var cx = xScale(d.x_relative_offset);\n\t      var cy = yScale(d.y_relative_offset);\n\t\n\t      if (cx < 0 || cx > width || cy < 0 || cy > height) return;\n\t\n\t      background.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t    });\n\t  }\n\t\n\t  function draw(elapsedMS, initialColorScale, finalColorScale) {\n\t    var start = Date.now();\n\t\n\t    var intermediateColorScale;\n\t    var t = Math.min((DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n\t    intermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\n\t    var allData = dataObj.currentData();\n\t    var activeDots = allData.active;\n\t\n\t    //console.log('Time after collecting data', Date.now() - start);\n\t    start = Date.now();\n\t\n\t    var width = getWidth();\n\t    var height = getHeight();\n\t\n\t    context.clearRect(0, 0, width, height);\n\t\n\t    /* On top, active dots */\n\t    var groups = [];\n\t    var index = 0;\n\t\n\t    var rounded = function rounded(x) {\n\t      return Math.floor(x[field] * ROUNDING_FACTOR) / ROUNDING_FACTOR;\n\t    };\n\t    while (index < activeDots.length) {\n\t      var low = index;\n\t      var val = rounded(activeDots[index]);\n\t      index = _.sortedLastIndexBy(activeDots, _defineProperty({}, field, val), function (x) {\n\t        return -rounded(x);\n\t      });\n\t      groups.push([low, index]);\n\t    }\n\t\n\t    _.each(groups, function (_ref4) {\n\t      var _ref5 = _slicedToArray(_ref4, 2);\n\t\n\t      var loIndex = _ref5[0];\n\t      var hiIndex = _ref5[1];\n\t\n\t      context.fillStyle = intermediateColorScale(rounded(activeDots[loIndex]));\n\t      for (var i = loIndex; i < hiIndex; i++) {\n\t        var d = activeDots[i];\n\t        var cx = xScale(d.x_relative_offset);\n\t        var cy = yScale(d.y_relative_offset);\n\t\n\t        if (cx < 0 || cx > width || cy < 0 || cy > height) continue;\n\t\n\t        context.fillRect(cx - CIRCLE_RADIUS, cy - CIRCLE_RADIUS, CIRCLE_RADIUS, CIRCLE_RADIUS);\n\t      }\n\t    });\n\t\n\t    if (highlighted) {\n\t      context.beginPath();\n\t      context.strokeStyle = 'red';\n\t      context.arc(xScale(highlighted.x_relative_offset), yScale(highlighted.y_relative_offset), 10, 0, 2 * Math.PI);\n\t      context.stroke();\n\t    }\n\t\n\t    var diff = Date.now() - start;\n\t    //console.log('Start of call to end of draw call:', diff);\n\t    if (elapsedMS > 0) {\n\t      setTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t    }\n\t  }\n\t\n\t  function interpolateScales(a, b, t) {\n\t    var aDomain = a.domain();\n\t    var bDomain = b.domain();\n\t    var min = Math.min(aDomain[0], bDomain[0]);\n\t    var max = Math.max(aDomain[aDomain.length - 1], bDomain[bDomain.length - 1]);\n\t    var step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n\t    var domain = _.range(min, max + 1, step);\n\t    var range = _.map(domain, function (input) {\n\t      return d3.interpolateRgb(a(input), b(input))(t);\n\t    });\n\t    return d3.scale.linear().domain(domain).range(range);\n\t  }\n\t\n\t  function setSyntenyData() {\n\t    draw(0, colorScale, colorScale);\n\t  }\n\t  dataObj.addListener(setSyntenyData);\n\t  drawBG();\n\t  setSyntenyData();\n\t\n\t  function setNavigationMode(mode) {\n\t    if (mode === 'pan') {\n\t      d3.select(id).select('#brush-group').on('mousedown.brush', null);\n\t      d3.select(id).select('#zoom-group').call(zoom);\n\t      d3.select(id).select('#brush-group').style('pointer-events', null);\n\t      d3.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t      d3.select(id).select('#brush-group').on('click', function () {\n\t        var mouse = d3.mouse(this);\n\t        var x = originalXScale.invert(mouse[0]);\n\t        var y = originalYScale.invert(mouse[1]);\n\t        updateGeVOLink(x, y);\n\t      });\n\t    } else if (mode === 'brush') {\n\t      d3.select(id).select('#brush-group').call(brush);\n\t      d3.select(id).select('#brush-group').style('pointer-events', 'all');\n\t      d3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t    }\n\t  }\n\t\n\t  function setColorScale(newColorScale) {\n\t    draw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t    colorScale = newColorScale;\n\t  }\n\t\n\t  function setField(f) {\n\t    field = f;\n\t    setSyntenyData();\n\t  }\n\t\n\t  return {\n\t    setNavMode: setNavigationMode,\n\t    setColorScale: setColorScale,\n\t    setField: setField\n\t  };\n\t}\n\t\n\texports.synteny = synteny;\n\t\n\t// Local Variables:\n\t// mode: js2\n\t// js2-basic-offset: 8\n\t// End:\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar HISTOGRAM_MARGIN = _require.HISTOGRAM_MARGIN;\n\tvar HISTOGRAM_Y_SCALE_TRANS_LEN = _require.HISTOGRAM_Y_SCALE_TRANS_LEN;\n\tvar NUM_HISTOGRAM_TICKS = _require.NUM_HISTOGRAM_TICKS;\n\tvar UNSELECTED_BAR_FILL = _require.UNSELECTED_BAR_FILL;\n\t\n\t\n\tvar persistenceFuncs = __webpack_require__(5);\n\tvar utils = __webpack_require__(4);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar transform = __webpack_require__(6);\n\t\n\tfunction histogram(id, dataObj, field, colorScale) {\n\t  var dataExtent = d3.extent(_.map(dataObj.currentData().raw, field));\n\t\n\t  var plot = d3.select(id);\n\t  var plotWidth = function plotWidth() {\n\t    return utils.getComputedAttr(document.getElementById(id.substring(1)), 'width');\n\t  };\n\t  var plotHeight = function plotHeight() {\n\t    return utils.getComputedAttr(document.getElementById(id.substring(1)), 'height');\n\t  };\n\t\n\t  function plotBrushBrush() {\n\t    if (!plotBrush.empty()) {\n\t      dataObj.addDataFilter(plotBrush.extent(), field);\n\t    }\n\t  }\n\t\n\t  function plotBrushEnd() {\n\t    if (plotBrush.empty()) {\n\t      dataObj.removeDataFilter(field);\n\t    }\n\t    dataObj.notifyListeners('histogram-stop');\n\t    updateColors(dataBarSel); // Cancel color animation -- just brushing\n\t  }\n\t\n\t  var xPlotScale = d3.scale.linear().domain(dataExtent).range([HISTOGRAM_MARGIN, plotWidth() - HISTOGRAM_MARGIN]);\n\t\n\t  var bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n\t  var summaryF = dataObj.currentDataSummary(bins, field);\n\t  var getYExtent = function getYExtent(summary) {\n\t    return [0, 3 / 2 * _.max(_.map(summary, 'y'))];\n\t  };\n\t\n\t  var yPlotScale = d3.scale.linear().domain(getYExtent(summaryF())).range([plotHeight() - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\t\n\t  function updateMinMaxMarkers(persistence) {\n\t    var summary = summaryF();\n\t    var extrema = persistenceFuncs.simplify(summary, persistence);\n\t\n\t    var isMaxima = function isMaxima(A, i) {\n\t      return A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t    };\n\t    var shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t      return i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t    };\n\t    var markers = _.map(extrema, function (d, i, A) {\n\t      return {\n\t        color: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t        x: d.x + d.dx / 2,\n\t        y: d.y\n\t      };\n\t    });\n\t\n\t    var tempSelA = plot.selectAll('.maxMark').data(markers);\n\t    tempSelA.exit().remove();\n\t    tempSelA.enter().append('circle').classed('maxMark', 1);\n\t    tempSelA.attr('cx', function (d) {\n\t      return xPlotScale(d.x);\n\t    }).attr('cy', function (d) {\n\t      return yPlotScale(d.y) - 5;\n\t    }).attr('r', 3).attr('fill', function (d) {\n\t      return d.color;\n\t    });\n\t  }\n\t\n\t  var plotBrush = d3.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t  var dataBarSel = plot.selectAll('.dataBars').data(summaryF()).enter().append('rect').classed('dataBars', true).attr('x', function (d) {\n\t    return xPlotScale(d.x);\n\t  }).attr('width', function (d) {\n\t    return xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t  });\n\t\n\t  var brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', transform([{ translate: [0, HISTOGRAM_MARGIN] }])).call(plotBrush);\n\t  brushSelectForBM.selectAll('rect').attr('height', plotHeight() - 2 * HISTOGRAM_MARGIN);\n\t\n\t  var xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t  var yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t  plot.append('g').attr('transform', transform([{ translate: [0, plotHeight() - HISTOGRAM_MARGIN] }])).classed('xAxis', true).call(xAxis);\n\t  var yAxisSel = plot.append('g').attr('transform', transform([{ translate: [HISTOGRAM_MARGIN, 0] }])).classed('yAxis', true).call(yAxis);\n\t\n\t  var updateHeights = function updateHeights(selection) {\n\t    selection.transition(); // cancel transition\n\t    selection.attr('y', function (d) {\n\t      return yPlotScale(d.y);\n\t    });\n\t  };\n\t  var updateColors = function updateColors(selection) {\n\t    selection.transition(); // cancel transition\n\t    var extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t    var active = function active(bin) {\n\t      return bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\t    };\n\t\n\t    var orZero = function orZero(x) {\n\t      return Math.max(x, 0);\n\t    };\n\t    var height = plotHeight();\n\t    selection.attr('height', function (d) {\n\t      return orZero(height - HISTOGRAM_MARGIN - yPlotScale(d.y));\n\t    }).attr('fill', function (d) {\n\t      return active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL;\n\t    });\n\t  };\n\t\n\t  var updatePlotAttrs = function updatePlotAttrs(selection) {\n\t    updateHeights(selection);\n\t    updateColors(selection);\n\t  };\n\t\n\t  function updatePlot(typeHint) {\n\t    dataBarSel.transition(); /* cancel previous transition */\n\t\n\t    typeHint = typeHint || '';\n\t\n\t    var summary = summaryF();\n\t    var tempSel = dataBarSel.data(summary);\n\t\n\t    if (typeHint.indexOf('stop') > -1) {\n\t      yPlotScale.domain(getYExtent(summary));\n\t      yAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t      tempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t    }\n\t\n\t    tempSel.call(updatePlotAttrs);\n\t  }\n\t\n\t  dataObj.addListener(updatePlot);\n\t\n\t  function setColorScale(newColorScale) {\n\t    colorScale = newColorScale;\n\t    updatePlot('stop'); /* trigger animation -- FIXME */\n\t  }\n\t\n\t  function getColorScale() {\n\t    return colorScale;\n\t  }\n\t\n\t  return {\n\t    setColorScale: setColorScale,\n\t    getColorScale: getColorScale,\n\t    brush: plotBrush,\n\t    sendBrushEvent: plotBrushBrush,\n\t    selection: brushSelectForBM,\n\t    updateMinMaxMarkers: updateMinMaxMarkers,\n\t    bins: summaryF\n\t  };\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar queue = __webpack_require__(18);\n\tvar sv = __webpack_require__(13);\n\tvar crossfilter = __webpack_require__(15);\n\t\n\texports.makeSyntenyDotPlot = function (_ref) {\n\t  var data_url = _ref.data_url;\n\t  var element_id = _ref.element_id;\n\t  var genome_x = _ref.genome_x;\n\t  var genome_y = _ref.genome_y;\n\t\n\t  queue.queue().defer(d3.text, data_url).await(function (err, ks) {\n\t    if (err) {\n\t      console.log(err);\n\t      return;\n\t    }\n\t\n\t    // Dirty hacks to make files with no ks work:\n\t    var have_ks = data_url.endsWith('.ks');\n\t    if (!have_ks) {\n\t      (function () {\n\t        var random = function random() {\n\t          return Math.random() * 3 + 2;\n\t        };\n\t        ks = ks.split('\\n').map(function (x) {\n\t          return x[0] === '#' ? x : random() + ',' + random() + ',' + x;\n\t        }).join('\\n');\n\t      })();\n\t    }\n\t\n\t    var x_name = genome_x.name;\n\t    var y_name = genome_y.name;\n\t\n\t    var ksData = ksTextToObjects(ks);\n\t    var xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t    var yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t    var inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t    var ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t    console.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t    sv.controller(ksDataObject, element_id, { x_name: x_name, y_name: y_name, have_ks: have_ks });\n\t  });\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t  /* .ks files are delimited with a combination of tabs and double bars. */\n\t  var csvLines = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '').split('\\n');\n\t\n\t  var dots = _.chain(csvLines).filter(function (line) {\n\t    return line && line[0] !== '#';\n\t  }).map(ksLineToSyntenyDot).filter(function (x) {\n\t    return x;\n\t  }).value();\n\t\n\t  var min_logks = _(dots).filter(function (line) {\n\t    return isFinite(line.logks);\n\t  }).map(function (line) {\n\t    return line.logks;\n\t  }).min();\n\t  var min_logkn = _(dots).filter(function (line) {\n\t    return isFinite(line.logkn);\n\t  }).map(function (line) {\n\t    return line.logkn;\n\t  }).min();\n\t\n\t  return _.map(dots, function (x) {\n\t    x.logks = isFinite(x.logks) ? x.logks : min_logks;\n\t    x.logkn = isFinite(x.logkn) ? x.logkn : min_logkn;\n\t    x.logknks = x.logkn - x.logks;\n\t    return x;\n\t  });\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t  var fields = line.split(',');\n\t\n\t  if (fields[0] === 'NA' || fields[1] === 'NA') {\n\t    return undefined;\n\t  }\n\t\n\t  var ks = Number(fields[0]);\n\t  var kn = Number(fields[1]);\n\t  var log10 = function log10(n) {\n\t    return Math.log(n) / Math.log(10);\n\t  };\n\t\n\t  return {\n\t    ks: ks,\n\t    logks: log10(ks),\n\t    kn: kn,\n\t    logkn: log10(kn),\n\t    logknks: log10(kn) - log10(ks),\n\t    x_chromosome_id: fields[3],\n\t    y_chromosome_id: fields[15],\n\t    x_feature_id: fields[9],\n\t    y_feature_id: fields[21],\n\t    x_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t    y_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t  };\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t  var ntLenList = _.chain(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t    map[kv.name] = map.total;\n\t    map.total += kv.length;\n\t    return map;\n\t  }, {\n\t    total: 0\n\t  }).value();\n\t\n\t  var nameLenList = _.chain(len_list).sortBy('name').reduce(function (map, kv) {\n\t    map[kv.name] = map.total;\n\t    map.total += kv.gene_count;\n\t    return map;\n\t  }, {\n\t    total: 0\n\t  }).value();\n\t\n\t  var geneCounts = _.fromPairs(_.zip(_.map(len_list, function (x) {\n\t    return x.name;\n\t  }), _.map(len_list, function (x) {\n\t    return x.gene_count;\n\t  })));\n\t\n\t  return {\n\t    nt: ntLenList,\n\t    name: nameLenList,\n\t    gene_counts: geneCounts\n\t  };\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t  _.each(ks, function (ksObj) {\n\t    var xShift = xmap.nt[ksObj.x_chromosome_id];\n\t    var yShift = ymap.nt[ksObj.y_chromosome_id];\n\t    ksObj.x_relative_offset += xShift;\n\t    ksObj.y_relative_offset += yShift;\n\t  });\n\t  return ks;\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t  var xmap = xmapPair.nt;\n\t  var ymap = ymapPair.nt;\n\t  var ret = {};\n\t\n\t  var cross = crossfilter(syntenyDots);\n\t  var cross_all = cross.dimension(function (x) {\n\t    return x.logks;\n\t  });\n\t  var cross_x = cross.dimension(function (x) {\n\t    return x.x_relative_offset;\n\t  });\n\t  var cross_y = cross.dimension(function (x) {\n\t    return x.y_relative_offset;\n\t  });\n\t  var filters = _(['logks', 'logkn', 'logknks']).map(function (field) {\n\t    return [field, cross.dimension(function (x) {\n\t      return x[field];\n\t    })];\n\t  }).fromPairs().value();\n\t\n\t  ret.getXLineOffsets = function () {\n\t    return _.chain(xmap).values().sortBy().value();\n\t  };\n\t\n\t  ret.getYLineOffsets = function () {\n\t    return _.chain(ymap).values().sortBy().value();\n\t  };\n\t\n\t  ret.getXLineNames = function () {\n\t    return filterMapForNames(xmap);\n\t  };\n\t\n\t  ret.getYLineNames = function () {\n\t    return filterMapForNames(ymap);\n\t  };\n\t\n\t  function filterMapForNames(map) {\n\t    return _.chain(map).toPairs().sortBy('1').map('0').reject(function (x) {\n\t      return x === 'total';\n\t    }).value();\n\t  }\n\t\n\t  ret.currentData = function currentData() {\n\t    return {\n\t      raw: syntenyDots,\n\t      active: cross_all.top(Infinity)\n\t    };\n\t  };\n\t\n\t  ret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t    var group = filters[field].group(function (x) {\n\t      return ticks[_.sortedIndex(ticks, x)];\n\t    });\n\t    var dx = ticks[1] - ticks[0];\n\t\n\t    return function () {\n\t      var groups = group.top(Infinity);\n\t      var result = _.fromPairs(groups.map(function (x) {\n\t        return [x.key, x.value];\n\t      }));\n\t      var zeros = _.fromPairs(ticks.map(function (x) {\n\t        return [x, 0];\n\t      }));\n\t\n\t      return _(zeros).merge(result).toPairs().map(function (x) {\n\t        return x.map(Number);\n\t      }).map(function (_ref2) {\n\t        var _ref3 = _slicedToArray(_ref2, 2);\n\t\n\t        var x = _ref3[0];\n\t        var y = _ref3[1];\n\t        return { x: x, y: y, dx: dx };\n\t      }).sortBy('x').value();\n\t    };\n\t  };\n\t\n\t  ret.addSpatialFilter = function (extents, typeHint) {\n\t    cross_x.filter([extents[0][0], extents[1][0]]);\n\t    cross_y.filter([extents[0][1], extents[1][1]]);\n\t    ret.notifyListeners(typeHint);\n\t  };\n\t\n\t  ret.removeSpatialFilter = function (typeHint) {\n\t    cross_x.filterAll();\n\t    cross_y.filterAll();\n\t    ret.notifyListeners(typeHint);\n\t  };\n\t\n\t  ret.addDataFilter = function (extent, field, typeHint) {\n\t    filters[field].filter(extent);\n\t    ret.notifyListeners(typeHint || 'data');\n\t  };\n\t\n\t  ret.removeDataFilter = function (field) {\n\t    filters[field].filterAll();\n\t    ret.notifyListeners('data-stop');\n\t  };\n\t\n\t  var listeners = [];\n\t  ret.addListener = function (x) {\n\t    listeners.push(x);\n\t  };\n\t  ret.clearListeners = function () {\n\t    while (listeners.length > 0) {\n\t      listeners.pop();\n\t    }\n\t  };\n\t\n\t  ret.notifyListeners = function (typeOfChange) {\n\t    _.each(listeners, function (x) {\n\t      x(typeOfChange);\n\t    });\n\t  };\n\t\n\t  return ret;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar histogram = __webpack_require__(11);\n\tvar dotplot = __webpack_require__(10);\n\tvar _ = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\tvar autoscale = __webpack_require__(8);\n\t\n\t__webpack_require__(20);\n\t\n\tvar _require = __webpack_require__(3);\n\t\n\tvar RUN_BENCHMARKS = _require.RUN_BENCHMARKS;\n\tvar SHOW_MAXIMA_AND_MINIMA = _require.SHOW_MAXIMA_AND_MINIMA;\n\t\n\t\n\tfunction buildDiv(element_id, show_histograms) {\n\t  var div = d3.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\t\n\t  div.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\t\n\t  var subdiv = div.append('div').classed('dotplot', true);\n\t  /* pointer-events = none stops the canvas from intercepting brush events\n\t   * before they get to the svg element below. */\n\t  subdiv.append('canvas').attr('id', 'dotplot-canvas-background').classed('dotplot', true).style('pointer-events', 'none');\n\t  subdiv.append('canvas').attr('id', 'dotplot-canvas').classed('dotplot', true).style('pointer-events', 'none');\n\t\n\t  var histogramAndTopForm = div.append('div').attr('id', 'histogram-and-top-form', true);\n\t\n\t  var formWrapperTop = histogramAndTopForm.append('div').attr('id', 'form-wrapper-top');\n\t  if (show_histograms) {\n\t    var buttonWrapper = formWrapperTop.append('div').classed('histogram-button-wrapper', true);\n\t    buttonWrapper.append('button').classed('histogram-button', true).attr('id', 'histogram-button-left').text('<');\n\t    buttonWrapper.append('div').attr('id', 'histogram-button-title').append('text').attr('id', 'histogram-button-title-text');\n\t    buttonWrapper.append('button').classed('histogram-button', true).attr('id', 'histogram-button-right').text('>');\n\t  }\n\t\n\t  var histogramWrapper = histogramAndTopForm.append('div').attr('id', 'histogram-wrapper');\n\t  histogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\t  histogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\t  histogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\t\n\t  var formWrapper = div.append('div').attr('id', 'form-wrapper');\n\t  function makeForm(title, optionId, elements, checkIndex) {\n\t    var navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t    if (title) {\n\t      navOptions.append('text').text(title + ': ');\n\t    }\n\t\n\t    var navForm = navOptions.append('form').attr('id', optionId);\n\t    var options = navForm.selectAll('input').data(elements).enter().append('input').attr('type', 'radio').attr('name', optionId).attr('value', function (d) {\n\t      return d[0];\n\t    });\n\t\n\t    options.forEach(function (selection) {\n\t      selection.forEach(function (element, i) {\n\t        var label = document.createElement('label');\n\t        label.textContent = elements[i][1];\n\t        navForm.node().insertBefore(label, element);\n\t      });\n\t    });\n\t    options[0][checkIndex].checked = true;\n\t  }\n\t\n\t  if (show_histograms) {\n\t    var option = function option(value, text) {\n\t      return [value, text];\n\t    };\n\t\n\t    formWrapper.append('div').attr('id', 'form-top-label').append('strong').text('Controls');\n\t    makeForm('Navigation', 'mouse-options', [option('brush', 'Brushing'), option('pan', 'Panning')], 0);\n\t    formWrapper.append('div').style('height', '10');\n\t\n\t    formWrapper.append('strong').text('Color Options');\n\t    makeForm('Color Scale', 'color-options', [option('auto', 'auto'), option('rainbow_quantized', 'rainbow_quantized')], 0);\n\t\n\t    var persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t    persistenceOptions.append('text').text('Auto-scale peak threshold: ');\n\t\n\t    var initialPersistence = 50;\n\t    persistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100).attr('value', initialPersistence).attr('step', 1);\n\t\n\t    persistenceOptions.append('label').attr('id', 'persistence-text').text(initialPersistence);\n\t  }\n\t\n\t  formWrapper.append('div').style('height', '10');\n\t  formWrapper.append('strong').text('Point Selection');\n\t  var gevoLink = formWrapper.append('div');\n\t  gevoLink.append('div').attr('id', 'gevo-link-xname');\n\t  gevoLink.append('div').attr('id', 'gevo-link-yname');\n\t  gevoLink.append('button').attr('id', 'gevo-link').text('No Point Selected');\n\t}\n\t\n\tfunction controller(dataObj, element_id, meta) {\n\t\n\t  buildDiv('#' + element_id, meta.have_ks);\n\t\n\t  var refreshPlot = _.debounce(function (colorScale) {\n\t    syntenyPlot.setField(activeField);\n\t    syntenyPlot.setColorScale(colorScale);\n\t  }, 100);\n\t\n\t  var refreshAutoScale = _.throttle(function (persistence) {\n\t    var radio = document.getElementById('color-options');\n\t    var auto = _.find(radio.children, { value: 'auto' });\n\t    auto.checked = true;\n\t\n\t    var bins = histograms[activeField].bins();\n\t    var newAutoScale = autoscale.generateAutoScale(bins, persistence);\n\t\n\t    histograms[activeField].setColorScale(newAutoScale);\n\t    refreshPlot(newAutoScale);\n\t\n\t    if (SHOW_MAXIMA_AND_MINIMA) _.each(histograms, function (h) {\n\t      return h.updateMinMaxMarkers(persistence);\n\t    });\n\t  }, 50);\n\t\n\t  var getPersistence = function getPersistence() {\n\t    return d3.select('#persistence').node().value;\n\t  };\n\t\n\t  d3.select('#persistence').on('input', function () {\n\t    var p = getPersistence();\n\t    refreshAutoScale(p);\n\t    d3.select('#persistence-text').node().innerText = p;\n\t  });\n\t\n\t  /* zoom/pan switching */\n\t  d3.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t    syntenyPlot.setNavMode(this.value);\n\t  });\n\t\n\t  /* color mode switching */\n\t  var activeField = 'logks';\n\t\n\t  /* Don't be cute and use fat arrow functions here. Fat arrow functions\n\t   * have a lexically bound \"this\" and we really really need the old \"this\"\n\t   * scoping, since we are getting value from a form. */\n\t  d3.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t    var newCS;\n\t    if (this.value === 'auto') {\n\t      newCS = autoscale.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t    } else {\n\t      newCS = colorScale(activeField, this.value);\n\t    }\n\t    histograms[activeField].setColorScale(newCS);\n\t    syntenyPlot.setColorScale(newCS);\n\t  });\n\t\n\t  var colorScale = __webpack_require__(9).onData(dataObj.currentData().raw);\n\t\n\t  var initial = colorScale(activeField, 'rg');\n\t\n\t  if (!meta.have_ks) {\n\t    var scale = colorScale(activeField, 'unselected');\n\t    var synteny = dotplot.synteny;\n\t    var _syntenyPlot = synteny('#dotplot', dataObj, 'logks', scale, meta);\n\t    return;\n\t  }\n\t\n\t  function getInitialColorScale(histograms) {\n\t    var activePlot = histograms[activeField];\n\t    return autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n\t  }\n\t\n\t  function setUpHistograms(initialCS) {\n\t    d3.selectAll('.histogram').classed('hidden', false);\n\t    var histograms = {\n\t      'logks': histogram.histogram('#plot', dataObj, 'logks', initialCS),\n\t      'logkn': histogram.histogram('#plot2', dataObj, 'logkn', initialCS),\n\t      'logknks': histogram.histogram('#plot3', dataObj, 'logknks', initialCS)\n\t    };\n\t    var activePlot = histograms[activeField];\n\t\n\t    var initialAutoScale = autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n\t    activePlot.setColorScale(initialAutoScale);\n\t\n\t    _(histograms).toPairs().filter(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 1);\n\t\n\t      var name = _ref2[0];\n\t      return name !== activeField;\n\t    }).forEach(function (_ref3) {\n\t      var _ref4 = _slicedToArray(_ref3, 2);\n\t\n\t      var name = _ref4[0];\n\t      var plot = _ref4[1];\n\t      return plot.setColorScale(colorScale(name, 'unselected'));\n\t    });\n\t\n\t    //FIXME\n\t    var name_map = {\n\t      'logks': 'plot',\n\t      'logkn': 'plot2',\n\t      'logknks': 'plot3'\n\t    };\n\t\n\t    var which = 0;\n\t    var other_smh = ['logks', 'logkn', 'logknks'];\n\t    var names_smh = ['plot', 'plot2', 'plot3'];\n\t    var scientific_names = ['Synonomous - ks', 'Non-Synonomous - kn', 'Non-Synonomous / Synonomous ratio - kn/ks'];\n\t\n\t    var common = function common() {\n\t      d3.selectAll('.histogram').classed('hidden', true);\n\t      d3.select('#' + names_smh[which]).classed('hidden', false);\n\t      activeField = other_smh[which];\n\t      d3.select('#histogram-button-title-text').text(scientific_names[which]);\n\t      refreshAutoScale(getPersistence());\n\t    };\n\t    d3.select('#histogram-button-left').on('click', function () {\n\t      which = (which + 2) % 3;\n\t      common();\n\t    });\n\t    d3.select('#histogram-button-right').on('click', function () {\n\t      which = (which + 1) % 3;\n\t      common();\n\t    });\n\t\n\t    d3.selectAll('.histogram').classed('hidden', true);\n\t    d3.select('#' + name_map[activeField]).classed('hidden', false);\n\t    d3.select('#histogram-button-title-text').text(scientific_names[which]);\n\t\n\t    // Since the histograms aren't controlling their own color scale policy\n\t    // now (a good thing), we need to manually fire of their update methods.\n\t    // Eventually, we should fix this up.\n\t    dataObj.addListener(function (typeHint) {\n\t      if (typeHint.indexOf('stop') > -1 && SHOW_MAXIMA_AND_MINIMA) _.each(histograms, function (h) {\n\t        return h.updateMinMaxMarkers(getPersistence());\n\t      });\n\t    });\n\t    return histograms;\n\t  }\n\t\n\t  var histograms = setUpHistograms(initial);\n\t  var syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks', getInitialColorScale(histograms), meta);\n\t\n\t  dataObj.notifyListeners('initial');\n\t\n\t  // Resize the window? Tear everything out and rebuild it.\n\t  window.onresize = function () {\n\t    ['dotplot', 'plot', 'plot2', 'plot3'].forEach(function (id) {\n\t      var el = document.getElementById(id);\n\t      while (el.firstChild) {\n\t        el.removeChild(el.firstChild);\n\t      }\n\t    });\n\t    dataObj.clearListeners();\n\t    var cs = histograms[activeField].getColorScale();\n\t    histograms = setUpHistograms(cs);\n\t    syntenyPlot = dotplot.synteny('#dotplot', dataObj, activeField, cs, meta);\n\t  };\n\t\n\t  /* Benchmark */\n\t  if (RUN_BENCHMARKS) {\n\t    (function () {\n\t      var _d3$extent = d3.extent(dataObj.currentData().raw, function (x) {\n\t        return x.logks;\n\t      });\n\t\n\t      var _d3$extent2 = _slicedToArray(_d3$extent, 2);\n\t\n\t      var minLogKs = _d3$extent2[0];\n\t      var maxLogKs = _d3$extent2[1];\n\t\n\t      var points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\t\n\t      var rangeList = _.chain(points).map(function (lo) {\n\t        return _.map(points, function (hi) {\n\t          return [lo, hi];\n\t        });\n\t      }).flatten().filter(function (_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2);\n\t\n\t        var lo = _ref6[0];\n\t        var hi = _ref6[1];\n\t        return lo < hi;\n\t      }).value();\n\t\n\t      var asyncBenchmark = __webpack_require__(7);\n\t      asyncBenchmark.benchmark(rangeList, function (range) {\n\t        histograms.logks.brush.extent(range);\n\t        histograms.logks.brush.event(histograms.logks.selection);\n\t      }, function (_ref7) {\n\t        var average = _ref7.average;\n\t        var max = _ref7.max;\n\t\n\t        alert('Average: ' + average + ', max: ' + max);\n\t      });\n\t    })();\n\t  }\n\t}\n\t\n\texports.controller = controller;\n\t\n\t// Local Variables:\n\t// mode: js2\n\t// js2-basic-offset: 8\n\t// End:\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t(function(exports){\n\tcrossfilter.version = \"1.3.12\";\n\tfunction crossfilter_identity(d) {\n\t  return d;\n\t}\n\tcrossfilter.permute = permute;\n\t\n\tfunction permute(array, index) {\n\t  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n\t    copy[i] = array[index[i]];\n\t  }\n\t  return copy;\n\t}\n\tvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\t\n\tbisect.by = bisect_by;\n\t\n\tfunction bisect_by(f) {\n\t\n\t  // Locate the insertion point for x in a to maintain sorted order. The\n\t  // arguments lo and hi may be used to specify a subset of the array which\n\t  // should be considered; by default the entire array is used. If x is already\n\t  // present in a, the insertion point will be before (to the left of) any\n\t  // existing entries. The return value is suitable for use as the first\n\t  // argument to `array.splice` assuming that a is already sorted.\n\t  //\n\t  // The returned insertion point i partitions the array a into two halves so\n\t  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectLeft(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (f(a[mid]) < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  // Similar to bisectLeft, but returns an insertion point which comes after (to\n\t  // the right of) any existing entries of x in a.\n\t  //\n\t  // The returned insertion point i partitions the array into two halves so that\n\t  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectRight(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (x < f(a[mid])) hi = mid;\n\t      else lo = mid + 1;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  bisectRight.right = bisectRight;\n\t  bisectRight.left = bisectLeft;\n\t  return bisectRight;\n\t}\n\tvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\t\n\theap.by = heap_by;\n\t\n\tfunction heap_by(f) {\n\t\n\t  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n\t  // property such that the parent a[lo+i] is always less than or equal to its\n\t  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n\t  function heap(a, lo, hi) {\n\t    var n = hi - lo,\n\t        i = (n >>> 1) + 1;\n\t    while (--i > 0) sift(a, i, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n\t  // already a heap.\n\t  function sort(a, lo, hi) {\n\t    var n = hi - lo,\n\t        t;\n\t    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n\t  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n\t  // incrementally, without incurring the full cost of reconstructing the heap.\n\t  function sift(a, i, n, lo) {\n\t    var d = a[--lo + i],\n\t        x = f(d),\n\t        child;\n\t    while ((child = i << 1) <= n) {\n\t      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n\t      if (x <= f(a[lo + child])) break;\n\t      a[lo + i] = a[lo + child];\n\t      i = child;\n\t    }\n\t    a[lo + i] = d;\n\t  }\n\t\n\t  heap.sort = sort;\n\t  return heap;\n\t}\n\tvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\t\n\theapselect.by = heapselect_by;\n\t\n\tfunction heapselect_by(f) {\n\t  var heap = heap_by(f);\n\t\n\t  // Returns a new array containing the top k elements in the array a[lo:hi].\n\t  // The returned array is not sorted, but maintains the heap property. If k is\n\t  // greater than hi - lo, then fewer than k elements will be returned. The\n\t  // order of elements in a is unchanged by this operation.\n\t  function heapselect(a, lo, hi, k) {\n\t    var queue = new Array(k = Math.min(hi - lo, k)),\n\t        min,\n\t        i,\n\t        x,\n\t        d;\n\t\n\t    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n\t    heap(queue, 0, k);\n\t\n\t    if (lo < hi) {\n\t      min = f(queue[0]);\n\t      do {\n\t        if (x = f(d = a[lo]) > min) {\n\t          queue[0] = d;\n\t          min = f(heap(queue, 0, k)[0]);\n\t        }\n\t      } while (++lo < hi);\n\t    }\n\t\n\t    return queue;\n\t  }\n\t\n\t  return heapselect;\n\t}\n\tvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\t\n\tinsertionsort.by = insertionsort_by;\n\t\n\tfunction insertionsort_by(f) {\n\t\n\t  function insertionsort(a, lo, hi) {\n\t    for (var i = lo + 1; i < hi; ++i) {\n\t      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n\t        a[j] = a[j - 1];\n\t      }\n\t      a[j] = t;\n\t    }\n\t    return a;\n\t  }\n\t\n\t  return insertionsort;\n\t}\n\t// Algorithm designed by Vladimir Yaroslavskiy.\n\t// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\t\n\tvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\t\n\tquicksort.by = quicksort_by;\n\t\n\tfunction quicksort_by(f) {\n\t  var insertionsort = insertionsort_by(f);\n\t\n\t  function sort(a, lo, hi) {\n\t    return (hi - lo < quicksort_sizeThreshold\n\t        ? insertionsort\n\t        : quicksort)(a, lo, hi);\n\t  }\n\t\n\t  function quicksort(a, lo, hi) {\n\t    // Compute the two pivots by looking at 5 elements.\n\t    var sixth = (hi - lo) / 6 | 0,\n\t        i1 = lo + sixth,\n\t        i5 = hi - 1 - sixth,\n\t        i3 = lo + hi - 1 >> 1,  // The midpoint.\n\t        i2 = i3 - sixth,\n\t        i4 = i3 + sixth;\n\t\n\t    var e1 = a[i1], x1 = f(e1),\n\t        e2 = a[i2], x2 = f(e2),\n\t        e3 = a[i3], x3 = f(e3),\n\t        e4 = a[i4], x4 = f(e4),\n\t        e5 = a[i5], x5 = f(e5);\n\t\n\t    var t;\n\t\n\t    // Sort the selected 5 elements using a sorting network.\n\t    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n\t    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n\t    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t\n\t    var pivot1 = e2, pivotValue1 = x2,\n\t        pivot2 = e4, pivotValue2 = x4;\n\t\n\t    // e2 and e4 have been saved in the pivot variables. They will be written\n\t    // back, once the partitioning is finished.\n\t    a[i1] = e1;\n\t    a[i2] = a[lo];\n\t    a[i3] = e3;\n\t    a[i4] = a[hi - 1];\n\t    a[i5] = e5;\n\t\n\t    var less = lo + 1,   // First element in the middle partition.\n\t        great = hi - 2;  // Last element in the middle partition.\n\t\n\t    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n\t    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n\t    // with natural order (such as for Date objects), we must do two compares.\n\t    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n\t    if (pivotsEqual) {\n\t\n\t      // Degenerated case where the partitioning becomes a dutch national flag\n\t      // problem.\n\t      //\n\t      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n\t      //  ^             ^          ^             ^            ^\n\t      // left         less         k           great         right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1) for x in ]left, less[ : x < pivot.\n\t      //   2) for x in [less, k[ : x == pivot.\n\t      //   3) for x in ]great, right[ : x > pivot.\n\t      for (var k = less; k <= great; ++k) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else if (xk > pivotValue1) {\n\t\n\t          // Find the first element <= pivot in the range [k - 1, great] and\n\t          // put [:ek:] there. We know that such an element must exist:\n\t          // When k == less, then el3 (which is equal to pivot) lies in the\n\t          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n\t          // Note that in the latter case invariant 2 will be violated for a\n\t          // short amount of time. The invariant will be restored when the\n\t          // pivots are put into their final positions.\n\t          while (true) {\n\t            var greatValue = f(a[great]);\n\t            if (greatValue > pivotValue1) {\n\t              great--;\n\t              // This is the only location in the while-loop where a new\n\t              // iteration is started.\n\t              continue;\n\t            } else if (greatValue < pivotValue1) {\n\t              // Triple exchange.\n\t              a[k] = a[less];\n\t              a[less++] = a[great];\n\t              a[great--] = ek;\n\t              break;\n\t            } else {\n\t              a[k] = a[great];\n\t              a[great--] = ek;\n\t              // Note: if great < k then we will exit the outer loop and fix\n\t              // invariant 2 (which we just violated).\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t\n\t      // We partition the list into three parts:\n\t      //  1. < pivot1\n\t      //  2. >= pivot1 && <= pivot2\n\t      //  3. > pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n\t      //  ^            ^                        ^              ^             ^\n\t      // left         less                     k              great        right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1. for x in ]left, less[ : x < pivot1\n\t      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n\t      //   3. for x in ]great, right[ : x > pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else {\n\t          if (xk > pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue > pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] <= pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] >= pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Move pivots into their final positions.\n\t    // We shrunk the list from both sides (a[left] and a[right] have\n\t    // meaningless values in them) and now we move elements from the first\n\t    // and third partition into these locations so that we can store the\n\t    // pivots.\n\t    a[lo] = a[less - 1];\n\t    a[less - 1] = pivot1;\n\t    a[hi - 1] = a[great + 1];\n\t    a[great + 1] = pivot2;\n\t\n\t    // The list is now partitioned into three partitions:\n\t    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n\t    //  ^            ^                        ^             ^\n\t    // left         less                     great        right\n\t\n\t    // Recursive descent. (Don't include the pivot values.)\n\t    sort(a, lo, less - 1);\n\t    sort(a, great + 2, hi);\n\t\n\t    if (pivotsEqual) {\n\t      // All elements in the second partition are equal to the pivot. No\n\t      // need to sort them.\n\t      return a;\n\t    }\n\t\n\t    // In theory it should be enough to call _doSort recursively on the second\n\t    // partition.\n\t    // The Android source however removes the pivot elements from the recursive\n\t    // call if the second partition is too large (more than 2/3 of the list).\n\t    if (less < i1 && great > i5) {\n\t      var lessValue, greatValue;\n\t      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n\t      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\t\n\t      // Copy paste of the previous 3-way partitioning with adaptions.\n\t      //\n\t      // We partition the list into three parts:\n\t      //  1. == pivot1\n\t      //  2. > pivot1 && < pivot2\n\t      //  3. == pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n\t      //              ^                      ^              ^\n\t      //            less                     k              great\n\t      //\n\t      // Invariants:\n\t      //   1. for x in [ *, less[ : x == pivot1\n\t      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n\t      //   3. for x in ]great, * ] : x == pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk <= pivotValue1 && xk >= pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          less++;\n\t        } else {\n\t          if (xk <= pivotValue2 && xk >= pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] < pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] == pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // The second partition has now been cleared of pivot elements and looks\n\t    // as follows:\n\t    // [  *  |  > pivot1 && < pivot2  | * ]\n\t    //        ^                      ^\n\t    //       less                  great\n\t    // Sort the second partition using recursive descent.\n\t\n\t    // The second partition looks as follows:\n\t    // [  *  |  >= pivot1 && <= pivot2  | * ]\n\t    //        ^                        ^\n\t    //       less                    great\n\t    // Simply sort it by recursive descent.\n\t\n\t    return sort(a, less, great + 1);\n\t  }\n\t\n\t  return sort;\n\t}\n\t\n\tvar quicksort_sizeThreshold = 32;\n\tvar crossfilter_array8 = crossfilter_arrayUntyped,\n\t    crossfilter_array16 = crossfilter_arrayUntyped,\n\t    crossfilter_array32 = crossfilter_arrayUntyped,\n\t    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n\t    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\t\n\tif (typeof Uint8Array !== \"undefined\") {\n\t  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n\t  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n\t  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\t\n\t  crossfilter_arrayLengthen = function(array, length) {\n\t    if (array.length >= length) return array;\n\t    var copy = new array.constructor(length);\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t\n\t  crossfilter_arrayWiden = function(array, width) {\n\t    var copy;\n\t    switch (width) {\n\t      case 16: copy = crossfilter_array16(array.length); break;\n\t      case 32: copy = crossfilter_array32(array.length); break;\n\t      default: throw new Error(\"invalid array width!\");\n\t    }\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t}\n\t\n\tfunction crossfilter_arrayUntyped(n) {\n\t  var array = new Array(n), i = -1;\n\t  while (++i < n) array[i] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayLengthenUntyped(array, length) {\n\t  var n = array.length;\n\t  while (n < length) array[n++] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayWidenUntyped(array, width) {\n\t  if (width > 32) throw new Error(\"invalid array width!\");\n\t  return array;\n\t}\n\tfunction crossfilter_filterExact(bisect, value) {\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterRange(bisect, range) {\n\t  var min = range[0],\n\t      max = range[1];\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterAll(values) {\n\t  return [0, values.length];\n\t}\n\tfunction crossfilter_null() {\n\t  return null;\n\t}\n\tfunction crossfilter_zero() {\n\t  return 0;\n\t}\n\tfunction crossfilter_reduceIncrement(p) {\n\t  return p + 1;\n\t}\n\t\n\tfunction crossfilter_reduceDecrement(p) {\n\t  return p - 1;\n\t}\n\t\n\tfunction crossfilter_reduceAdd(f) {\n\t  return function(p, v) {\n\t    return p + +f(v);\n\t  };\n\t}\n\t\n\tfunction crossfilter_reduceSubtract(f) {\n\t  return function(p, v) {\n\t    return p - f(v);\n\t  };\n\t}\n\texports.crossfilter = crossfilter;\n\t\n\tfunction crossfilter() {\n\t  var crossfilter = {\n\t    add: add,\n\t    remove: removeData,\n\t    dimension: dimension,\n\t    groupAll: groupAll,\n\t    size: size\n\t  };\n\t\n\t  var data = [], // the records\n\t      n = 0, // the number of records; data.length\n\t      m = 0, // a bit mask representing which dimensions are in use\n\t      M = 8, // number of dimensions that can fit in `filters`\n\t      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n\t      filterListeners = [], // when the filters change\n\t      dataListeners = [], // when data is added\n\t      removeDataListeners = []; // when data is removed\n\t\n\t  // Adds the specified new records to this crossfilter.\n\t  function add(newData) {\n\t    var n0 = n,\n\t        n1 = newData.length;\n\t\n\t    // If there's actually new data to add…\n\t    // Merge the new data into the existing data.\n\t    // Lengthen the filter bitset to handle the new records.\n\t    // Notify listeners (dimensions and groups) that new data is available.\n\t    if (n1) {\n\t      data = data.concat(newData);\n\t      filters = crossfilter_arrayLengthen(filters, n += n1);\n\t      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n\t    }\n\t\n\t    return crossfilter;\n\t  }\n\t\n\t  // Removes all records that match the current filters.\n\t  function removeData() {\n\t    var newIndex = crossfilter_index(n, n),\n\t        removed = [];\n\t    for (var i = 0, j = 0; i < n; ++i) {\n\t      if (filters[i]) newIndex[i] = j++;\n\t      else removed.push(i);\n\t    }\n\t\n\t    // Remove all matching records from groups.\n\t    filterListeners.forEach(function(l) { l(0, [], removed); });\n\t\n\t    // Update indexes.\n\t    removeDataListeners.forEach(function(l) { l(newIndex); });\n\t\n\t    // Remove old filters and data by overwriting.\n\t    for (var i = 0, j = 0, k; i < n; ++i) {\n\t      if (k = filters[i]) {\n\t        if (i !== j) filters[j] = k, data[j] = data[i];\n\t        ++j;\n\t      }\n\t    }\n\t    data.length = j;\n\t    while (n > j) filters[--n] = 0;\n\t  }\n\t\n\t  // Adds a new dimension with the specified value accessor function.\n\t  function dimension(value) {\n\t    var dimension = {\n\t      filter: filter,\n\t      filterExact: filterExact,\n\t      filterRange: filterRange,\n\t      filterFunction: filterFunction,\n\t      filterAll: filterAll,\n\t      top: top,\n\t      bottom: bottom,\n\t      group: group,\n\t      groupAll: groupAll,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n\t        zero = ~one, // inverted one, e.g., 11110111\n\t        values, // sorted, cached array\n\t        index, // value rank ↦ object id\n\t        newValues, // temporary array storing newly-added values\n\t        newIndex, // temporary array storing newly-added index\n\t        sort = quicksort_by(function(i) { return newValues[i]; }),\n\t        refilter = crossfilter_filterAll, // for recomputing filter\n\t        refilterFunction, // the custom filter function in use\n\t        indexListeners = [], // when data is added\n\t        dimensionGroups = [],\n\t        lo0 = 0,\n\t        hi0 = 0;\n\t\n\t    // Updating a dimension is a two-stage process. First, we must update the\n\t    // associated filters for the newly-added records. Once all dimensions have\n\t    // updated their filters, the groups are notified to update.\n\t    dataListeners.unshift(preAdd);\n\t    dataListeners.push(postAdd);\n\t\n\t    removeDataListeners.push(removeData);\n\t\n\t    // Incorporate any existing data into this dimension, and make sure that the\n\t    // filter bitset is wide enough to handle the new dimension.\n\t    m |= one;\n\t    if (M >= 32 ? !one : m & -(1 << M)) {\n\t      filters = crossfilter_arrayWiden(filters, M <<= 1);\n\t    }\n\t    preAdd(data, 0, n);\n\t    postAdd(data, 0, n);\n\t\n\t    // Incorporates the specified new records into this dimension.\n\t    // This function is responsible for updating filters, values, and index.\n\t    function preAdd(newData, n0, n1) {\n\t\n\t      // Permute new values into natural order using a sorted index.\n\t      newValues = newData.map(value);\n\t      newIndex = sort(crossfilter_range(n1), 0, n1);\n\t      newValues = permute(newValues, newIndex);\n\t\n\t      // Bisect newValues to determine which new records are selected.\n\t      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n\t      if (refilterFunction) {\n\t        for (i = 0; i < n1; ++i) {\n\t          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n\t        }\n\t      } else {\n\t        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n\t        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n\t      }\n\t\n\t      // If this dimension previously had no data, then we don't need to do the\n\t      // more expensive merge operation; use the new values and index as-is.\n\t      if (!n0) {\n\t        values = newValues;\n\t        index = newIndex;\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return;\n\t      }\n\t\n\t      var oldValues = values,\n\t          oldIndex = index,\n\t          i0 = 0,\n\t          i1 = 0;\n\t\n\t      // Otherwise, create new arrays into which to merge new and old.\n\t      values = new Array(n);\n\t      index = crossfilter_index(n, n);\n\t\n\t      // Merge the old and new sorted values, and old and new index.\n\t      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n\t        if (oldValues[i0] < newValues[i1]) {\n\t          values[i] = oldValues[i0];\n\t          index[i] = oldIndex[i0++];\n\t        } else {\n\t          values[i] = newValues[i1];\n\t          index[i] = newIndex[i1++] + n0;\n\t        }\n\t      }\n\t\n\t      // Add any remaining old values.\n\t      for (; i0 < n0; ++i0, ++i) {\n\t        values[i] = oldValues[i0];\n\t        index[i] = oldIndex[i0];\n\t      }\n\t\n\t      // Add any remaining new values.\n\t      for (; i1 < n1; ++i1, ++i) {\n\t        values[i] = newValues[i1];\n\t        index[i] = newIndex[i1] + n0;\n\t      }\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // When all filters have updated, notify index listeners of the new values.\n\t    function postAdd(newData, n0, n1) {\n\t      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n\t      newValues = newIndex = null;\n\t    }\n\t\n\t    function removeData(reIndex) {\n\t      for (var i = 0, j = 0, k; i < n; ++i) {\n\t        if (filters[k = index[i]]) {\n\t          if (i !== j) values[j] = values[i];\n\t          index[j] = reIndex[k];\n\t          ++j;\n\t        }\n\t      }\n\t      values.length = j;\n\t      while (j < n) index[j++] = 0;\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      var bounds = refilter(values);\n\t      lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // Updates the selected values based on the specified bounds [lo, hi].\n\t    // This implementation is used by all the public filter methods.\n\t    function filterIndexBounds(bounds) {\n\t      var lo1 = bounds[0],\n\t          hi1 = bounds[1];\n\t\n\t      if (refilterFunction) {\n\t        refilterFunction = null;\n\t        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return dimension;\n\t      }\n\t\n\t      var i,\n\t          j,\n\t          k,\n\t          added = [],\n\t          removed = [];\n\t\n\t      // Fast incremental update based on previous lo index.\n\t      if (lo1 < lo0) {\n\t        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (lo1 > lo0) {\n\t        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      // Fast incremental update based on previous hi index.\n\t      if (hi1 > hi0) {\n\t        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (hi1 < hi0) {\n\t        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      lo0 = lo1;\n\t      hi0 = hi1;\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t      return dimension;\n\t    }\n\t\n\t    // Filters this dimension using the specified range, value, or null.\n\t    // If the range is null, this is equivalent to filterAll.\n\t    // If the range is an array, this is equivalent to filterRange.\n\t    // Otherwise, this is equivalent to filterExact.\n\t    function filter(range) {\n\t      return range == null\n\t          ? filterAll() : Array.isArray(range)\n\t          ? filterRange(range) : typeof range === \"function\"\n\t          ? filterFunction(range)\n\t          : filterExact(range);\n\t    }\n\t\n\t    // Filters this dimension to select the exact value.\n\t    function filterExact(value) {\n\t      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n\t    }\n\t\n\t    // Filters this dimension to select the specified range [lo, hi].\n\t    // The lower bound is inclusive, and the upper bound is exclusive.\n\t    function filterRange(range) {\n\t      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n\t    }\n\t\n\t    // Clears any filters on this dimension.\n\t    function filterAll() {\n\t      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n\t    }\n\t\n\t    // Filters this dimension using an arbitrary function.\n\t    function filterFunction(f) {\n\t      refilter = crossfilter_filterAll;\n\t\n\t      filterIndexFunction(refilterFunction = f);\n\t\n\t      lo0 = 0;\n\t      hi0 = n;\n\t\n\t      return dimension;\n\t    }\n\t\n\t    function filterIndexFunction(f) {\n\t      var i,\n\t          k,\n\t          x,\n\t          added = [],\n\t          removed = [];\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n\t          if (x) filters[k] &= zero, added.push(k);\n\t          else filters[k] |= one, removed.push(k);\n\t        }\n\t      }\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t    }\n\t\n\t    // Returns the top K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function top(k) {\n\t      var array = [],\n\t          i = hi0,\n\t          j;\n\t\n\t      while (--i >= lo0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Returns the bottom K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function bottom(k) {\n\t      var array = [],\n\t          i = lo0,\n\t          j;\n\t\n\t      while (i < hi0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t        i++;\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Adds a new group to this dimension, using the specified key function.\n\t    function group(key) {\n\t      var group = {\n\t        top: top,\n\t        all: all,\n\t        reduce: reduce,\n\t        reduceCount: reduceCount,\n\t        reduceSum: reduceSum,\n\t        order: order,\n\t        orderNatural: orderNatural,\n\t        size: size,\n\t        dispose: dispose,\n\t        remove: dispose // for backwards-compatibility\n\t      };\n\t\n\t      // Ensure that this group will be removed when the dimension is removed.\n\t      dimensionGroups.push(group);\n\t\n\t      var groups, // array of {key, value}\n\t          groupIndex, // object id ↦ group id\n\t          groupWidth = 8,\n\t          groupCapacity = crossfilter_capacity(groupWidth),\n\t          k = 0, // cardinality\n\t          select,\n\t          heap,\n\t          reduceAdd,\n\t          reduceRemove,\n\t          reduceInitial,\n\t          update = crossfilter_null,\n\t          reset = crossfilter_null,\n\t          resetNeeded = true,\n\t          groupAll = key === crossfilter_null;\n\t\n\t      if (arguments.length < 1) key = crossfilter_identity;\n\t\n\t      // The group listens to the crossfilter for when any dimension changes, so\n\t      // that it can update the associated reduce values. It must also listen to\n\t      // the parent dimension for when data is added, and compute new keys.\n\t      filterListeners.push(update);\n\t      indexListeners.push(add);\n\t      removeDataListeners.push(removeData);\n\t\n\t      // Incorporate any existing data into the grouping.\n\t      add(values, index, 0, n);\n\t\n\t      // Incorporates the specified new values into this group.\n\t      // This function is responsible for updating groups and groupIndex.\n\t      function add(newValues, newIndex, n0, n1) {\n\t        var oldGroups = groups,\n\t            reIndex = crossfilter_index(k, groupCapacity),\n\t            add = reduceAdd,\n\t            initial = reduceInitial,\n\t            k0 = k, // old cardinality\n\t            i0 = 0, // index of old group\n\t            i1 = 0, // index of new record\n\t            j, // object id\n\t            g0, // old group\n\t            x0, // old key\n\t            x1, // new key\n\t            g, // group to add\n\t            x; // key of group to add\n\t\n\t        // If a reset is needed, we don't need to update the reduce values.\n\t        if (resetNeeded) add = initial = crossfilter_null;\n\t\n\t        // Reset the new groups (k is a lower bound).\n\t        // Also, make sure that groupIndex exists and is long enough.\n\t        groups = new Array(k), k = 0;\n\t        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\t\n\t        // Get the first old key (x0 of g0), if it exists.\n\t        if (k0) x0 = (g0 = oldGroups[0]).key;\n\t\n\t        // Find the first new key (x1), skipping NaN keys.\n\t        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\t\n\t        // While new keys remain…\n\t        while (i1 < n1) {\n\t\n\t          // Determine the lesser of the two current keys; new and old.\n\t          // If there are no old keys remaining, then always add the new key.\n\t          if (g0 && x0 <= x1) {\n\t            g = g0, x = x0;\n\t\n\t            // Record the new index of the old group.\n\t            reIndex[i0] = k;\n\t\n\t            // Retrieve the next old key.\n\t            if (g0 = oldGroups[++i0]) x0 = g0.key;\n\t          } else {\n\t            g = {key: x1, value: initial()}, x = x1;\n\t          }\n\t\n\t          // Add the lesser group.\n\t          groups[k] = g;\n\t\n\t          // Add any selected records belonging to the added group, while\n\t          // advancing the new key and populating the associated group index.\n\t          while (!(x1 > x)) {\n\t            groupIndex[j = newIndex[i1] + n0] = k;\n\t            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n\t            if (++i1 >= n1) break;\n\t            x1 = key(newValues[i1]);\n\t          }\n\t\n\t          groupIncrement();\n\t        }\n\t\n\t        // Add any remaining old groups that were greater than all new keys.\n\t        // No incremental reduce is needed; these groups have no new records.\n\t        // Also record the new index of the old group.\n\t        while (i0 < k0) {\n\t          groups[reIndex[i0] = k] = oldGroups[i0++];\n\t          groupIncrement();\n\t        }\n\t\n\t        // If we added any new groups before any old groups,\n\t        // update the group index of all the old records.\n\t        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n\t          groupIndex[i0] = reIndex[groupIndex[i0]];\n\t        }\n\t\n\t        // Modify the update and reset behavior based on the cardinality.\n\t        // If the cardinality is less than or equal to one, then the groupIndex\n\t        // is not needed. If the cardinality is zero, then there are no records\n\t        // and therefore no groups to update or reset. Note that we also must\n\t        // change the registered listener to point to the new method.\n\t        j = filterListeners.indexOf(update);\n\t        if (k > 1) {\n\t          update = updateMany;\n\t          reset = resetMany;\n\t        } else {\n\t          if (!k && groupAll) {\n\t            k = 1;\n\t            groups = [{key: null, value: initial()}];\n\t          }\n\t          if (k === 1) {\n\t            update = updateOne;\n\t            reset = resetOne;\n\t          } else {\n\t            update = crossfilter_null;\n\t            reset = crossfilter_null;\n\t          }\n\t          groupIndex = null;\n\t        }\n\t        filterListeners[j] = update;\n\t\n\t        // Count the number of added groups,\n\t        // and widen the group index as needed.\n\t        function groupIncrement() {\n\t          if (++k === groupCapacity) {\n\t            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n\t            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n\t            groupCapacity = crossfilter_capacity(groupWidth);\n\t          }\n\t        }\n\t      }\n\t\n\t      function removeData() {\n\t        if (k > 1) {\n\t          var oldK = k,\n\t              oldGroups = groups,\n\t              seenGroups = crossfilter_index(oldK, oldK);\n\t\n\t          // Filter out non-matches by copying matching group index entries to\n\t          // the beginning of the array.\n\t          for (var i = 0, j = 0; i < n; ++i) {\n\t            if (filters[i]) {\n\t              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n\t              ++j;\n\t            }\n\t          }\n\t\n\t          // Reassemble groups including only those groups that were referred\n\t          // to by matching group index entries.  Note the new group index in\n\t          // seenGroups.\n\t          groups = [], k = 0;\n\t          for (i = 0; i < oldK; ++i) {\n\t            if (seenGroups[i]) {\n\t              seenGroups[i] = k++;\n\t              groups.push(oldGroups[i]);\n\t            }\n\t          }\n\t\n\t          if (k > 1) {\n\t            // Reindex the group index using seenGroups to find the new index.\n\t            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n\t          } else {\n\t            groupIndex = null;\n\t          }\n\t          filterListeners[filterListeners.indexOf(update)] = k > 1\n\t              ? (reset = resetMany, update = updateMany)\n\t              : k === 1 ? (reset = resetOne, update = updateOne)\n\t              : reset = update = crossfilter_null;\n\t        } else if (k === 1) {\n\t          if (groupAll) return;\n\t          for (var i = 0; i < n; ++i) if (filters[i]) return;\n\t          groups = [], k = 0;\n\t          filterListeners[filterListeners.indexOf(update)] =\n\t          update = reset = crossfilter_null;\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function updateMany(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g;\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is 1.\n\t      function updateOne(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g = groups[0];\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function resetMany() {\n\t        var i,\n\t            g;\n\t\n\t        // Reset all group values.\n\t        for (i = 0; i < k; ++i) {\n\t          groups[i].value = reduceInitial();\n\t        }\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g = groups[groupIndex[i]];\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is 1.\n\t      function resetOne() {\n\t        var i,\n\t            g = groups[0];\n\t\n\t        // Reset the singleton group values.\n\t        g.value = reduceInitial();\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Returns the array of group values, in the dimension's natural order.\n\t      function all() {\n\t        if (resetNeeded) reset(), resetNeeded = false;\n\t        return groups;\n\t      }\n\t\n\t      // Returns a new array containing the top K group values, in reduce order.\n\t      function top(k) {\n\t        var top = select(all(), 0, groups.length, k);\n\t        return heap.sort(top, 0, top.length);\n\t      }\n\t\n\t      // Sets the reduce behavior for this group to use the specified functions.\n\t      // This method lazily recomputes the reduce values, waiting until needed.\n\t      function reduce(add, remove, initial) {\n\t        reduceAdd = add;\n\t        reduceRemove = remove;\n\t        reduceInitial = initial;\n\t        resetNeeded = true;\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for reducing by count.\n\t      function reduceCount() {\n\t        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t      }\n\t\n\t      // A convenience method for reducing by sum(value).\n\t      function reduceSum(value) {\n\t        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t      }\n\t\n\t      // Sets the reduce order, using the specified accessor.\n\t      function order(value) {\n\t        select = heapselect_by(valueOf);\n\t        heap = heap_by(valueOf);\n\t        function valueOf(d) { return value(d.value); }\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for natural ordering by reduce value.\n\t      function orderNatural() {\n\t        return order(crossfilter_identity);\n\t      }\n\t\n\t      // Returns the cardinality of this group, irrespective of any filters.\n\t      function size() {\n\t        return k;\n\t      }\n\t\n\t      // Removes this group and associated event listeners.\n\t      function dispose() {\n\t        var i = filterListeners.indexOf(update);\n\t        if (i >= 0) filterListeners.splice(i, 1);\n\t        i = indexListeners.indexOf(add);\n\t        if (i >= 0) indexListeners.splice(i, 1);\n\t        i = removeDataListeners.indexOf(removeData);\n\t        if (i >= 0) removeDataListeners.splice(i, 1);\n\t        return group;\n\t      }\n\t\n\t      return reduceCount().orderNatural();\n\t    }\n\t\n\t    // A convenience function for generating a singleton group.\n\t    function groupAll() {\n\t      var g = group(crossfilter_null), all = g.all;\n\t      delete g.all;\n\t      delete g.top;\n\t      delete g.order;\n\t      delete g.orderNatural;\n\t      delete g.size;\n\t      g.value = function() { return all()[0].value; };\n\t      return g;\n\t    }\n\t\n\t    // Removes this dimension and associated groups and event listeners.\n\t    function dispose() {\n\t      dimensionGroups.forEach(function(group) { group.dispose(); });\n\t      var i = dataListeners.indexOf(preAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = dataListeners.indexOf(postAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = removeDataListeners.indexOf(removeData);\n\t      if (i >= 0) removeDataListeners.splice(i, 1);\n\t      m &= zero;\n\t      return filterAll();\n\t    }\n\t\n\t    return dimension;\n\t  }\n\t\n\t  // A convenience method for groupAll on a dummy dimension.\n\t  // This implementation can be optimized since it always has cardinality 1.\n\t  function groupAll() {\n\t    var group = {\n\t      reduce: reduce,\n\t      reduceCount: reduceCount,\n\t      reduceSum: reduceSum,\n\t      value: value,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var reduceValue,\n\t        reduceAdd,\n\t        reduceRemove,\n\t        reduceInitial,\n\t        resetNeeded = true;\n\t\n\t    // The group listens to the crossfilter for when any dimension changes, so\n\t    // that it can update the reduce value. It must also listen to the parent\n\t    // dimension for when data is added.\n\t    filterListeners.push(update);\n\t    dataListeners.push(add);\n\t\n\t    // For consistency; actually a no-op since resetNeeded is true.\n\t    add(data, 0, n);\n\t\n\t    // Incorporates the specified new values into this group.\n\t    function add(newData, n0) {\n\t      var i;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = n0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Reduces the specified selected or deselected records.\n\t    function update(filterOne, added, removed) {\n\t      var i,\n\t          k,\n\t          n;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = 0, n = added.length; i < n; ++i) {\n\t        if (!filters[k = added[i]]) {\n\t          reduceValue = reduceAdd(reduceValue, data[k]);\n\t        }\n\t      }\n\t\n\t      // Remove the removed values.\n\t      for (i = 0, n = removed.length; i < n; ++i) {\n\t        if (filters[k = removed[i]] === filterOne) {\n\t          reduceValue = reduceRemove(reduceValue, data[k]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Recomputes the group reduce value from scratch.\n\t    function reset() {\n\t      var i;\n\t\n\t      reduceValue = reduceInitial();\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Sets the reduce behavior for this group to use the specified functions.\n\t    // This method lazily recomputes the reduce value, waiting until needed.\n\t    function reduce(add, remove, initial) {\n\t      reduceAdd = add;\n\t      reduceRemove = remove;\n\t      reduceInitial = initial;\n\t      resetNeeded = true;\n\t      return group;\n\t    }\n\t\n\t    // A convenience method for reducing by count.\n\t    function reduceCount() {\n\t      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t    }\n\t\n\t    // A convenience method for reducing by sum(value).\n\t    function reduceSum(value) {\n\t      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t    }\n\t\n\t    // Returns the computed reduce value.\n\t    function value() {\n\t      if (resetNeeded) reset(), resetNeeded = false;\n\t      return reduceValue;\n\t    }\n\t\n\t    // Removes this group and associated event listeners.\n\t    function dispose() {\n\t      var i = filterListeners.indexOf(update);\n\t      if (i >= 0) filterListeners.splice(i);\n\t      i = dataListeners.indexOf(add);\n\t      if (i >= 0) dataListeners.splice(i);\n\t      return group;\n\t    }\n\t\n\t    return reduceCount();\n\t  }\n\t\n\t  // Returns the number of records in this crossfilter, irrespective of any filters.\n\t  function size() {\n\t    return n;\n\t  }\n\t\n\t  return arguments.length\n\t      ? add(arguments[0])\n\t      : crossfilter;\n\t}\n\t\n\t// Returns an array of size n, big enough to store ids up to m.\n\tfunction crossfilter_index(n, m) {\n\t  return (m < 0x101\n\t      ? crossfilter_array8 : m < 0x10001\n\t      ? crossfilter_array16\n\t      : crossfilter_array32)(n);\n\t}\n\t\n\t// Constructs a new array of size n, with sequential values from 0 to n - 1.\n\tfunction crossfilter_range(n) {\n\t  var range = crossfilter_index(n, n);\n\t  for (var i = -1; ++i < n;) range[i] = i;\n\t  return range;\n\t}\n\t\n\tfunction crossfilter_capacity(w) {\n\t  return w === 8\n\t      ? 0x100 : w === 16\n\t      ? 0x10000\n\t      : 0x100000000;\n\t}\n\t})(typeof exports !== 'undefined' && exports || this);\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(14).crossfilter;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(17)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"._synteny-dotplot-builder{width:100%;height:100%}._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder #form-wrapper,._synteny-dotplot-builder #histogram-and-top-form,._synteny-dotplot-builder .dotplot{border:1px solid #191;border-radius:0;box-sizing:border-box}._synteny-dotplot-builder .dotplot{float:left;position:relative}._synteny-dotplot-builder .dotplot:not(#dotplot){float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:70%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder .histogram-button-wrapper{width:80%;margin-left:10%}._synteny-dotplot-builder .histogram-button{position:relative;float:left;width:10%;color:grey}._synteny-dotplot-builder #histogram-button-title{position:relative;float:left;width:80%;text-align:center}._synteny-dotplot-builder .hidden{display:none}._synteny-dotplot-builder .pressed{color:#000}._synteny-dotplot-builder #histogram-and-top-form{float:right;width:28.5%;height:65%}._synteny-dotplot-builder #histogram-wrapper{float:right;width:100%;height:90%}._synteny-dotplot-builder .histogram{position:relative;width:100%;height:100%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{margin-top:1.5%;float:right;width:28.5%;height:auto;font-size:14pt}._synteny-dotplot-builder #form-wrapper-top{float:right;width:100%;height:10%;font-size:14pt}._synteny-dotplot-builder form{display:inline}#histogram-button-left,#histogram-button-right,#histogram-button-title{margin-top:2%}#form-wrapper strong,#form-wrapper text,#gevo-link,#gevo-link-xname,#gevo-link-yname{margin-left:2%}#gevo-link{margin-bottom:2%}#form-top-label{margin-top:2%}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3_queue = global.d3_queue || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  var version = \"2.0.3\";\n\t\n\t  var slice = [].slice;\n\t\n\t  var noabort = {};\n\t\n\t  function Queue(size) {\n\t    if (!(size >= 1)) throw new Error;\n\t    this._size = size;\n\t    this._call =\n\t    this._error = null;\n\t    this._tasks = [];\n\t    this._data = [];\n\t    this._waiting =\n\t    this._active =\n\t    this._ended =\n\t    this._start = 0; // inside a synchronous task callback?\n\t  }\n\t\n\t  Queue.prototype = queue.prototype = {\n\t    constructor: Queue,\n\t    defer: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      if (this._error != null) return this;\n\t      var t = slice.call(arguments, 1);\n\t      t.push(callback);\n\t      ++this._waiting, this._tasks.push(t);\n\t      poke(this);\n\t      return this;\n\t    },\n\t    abort: function() {\n\t      if (this._error == null) abort(this, new Error(\"abort\"));\n\t      return this;\n\t    },\n\t    await: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t      maybeNotify(this);\n\t      return this;\n\t    },\n\t    awaitAll: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = callback;\n\t      maybeNotify(this);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function poke(q) {\n\t    if (!q._start) try { start(q); } // let the current task complete\n\t    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n\t  }\n\t\n\t  function start(q) {\n\t    while (q._start = q._waiting && q._active < q._size) {\n\t      var i = q._ended + q._active,\n\t          t = q._tasks[i],\n\t          j = t.length - 1,\n\t          c = t[j];\n\t      t[j] = end(q, i);\n\t      --q._waiting, ++q._active;\n\t      t = c.apply(null, t);\n\t      if (!q._tasks[i]) continue; // task finished synchronously\n\t      q._tasks[i] = t || noabort;\n\t    }\n\t  }\n\t\n\t  function end(q, i) {\n\t    return function(e, r) {\n\t      if (!q._tasks[i]) return; // ignore multiple callbacks\n\t      --q._active, ++q._ended;\n\t      q._tasks[i] = null;\n\t      if (q._error != null) return; // ignore secondary errors\n\t      if (e != null) {\n\t        abort(q, e);\n\t      } else {\n\t        q._data[i] = r;\n\t        if (q._waiting) poke(q);\n\t        else maybeNotify(q);\n\t      }\n\t    };\n\t  }\n\t\n\t  function abort(q, e) {\n\t    var i = q._tasks.length, t;\n\t    q._error = e; // ignore active callbacks\n\t    q._data = undefined; // allow gc\n\t    q._waiting = NaN; // prevent starting\n\t\n\t    while (--i >= 0) {\n\t      if (t = q._tasks[i]) {\n\t        q._tasks[i] = null;\n\t        if (t.abort) try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t\n\t    q._active = NaN; // allow notification\n\t    maybeNotify(q);\n\t  }\n\t\n\t  function maybeNotify(q) {\n\t    if (!q._active && q._call) q._call(q._error, q._data);\n\t  }\n\t\n\t  function queue(concurrency) {\n\t    return new Queue(arguments.length ? +concurrency : Infinity);\n\t  }\n\t\n\t  exports.version = version;\n\t  exports.queue = queue;\n\t\n\t}));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(16);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(19)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** synteny-dotplot-builder.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1ec555c25c187707ec3b\n **/","'use strict';\n\n// Expose our API, but not anywhere close to anything that might need to be\n// tested in node land.\nwindow.makeSyntenyDotPlot = require('./main').makeSyntenyDotPlot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/hook.js\n **/","/**\n * @license\n * lodash <https://lodash.com/>\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.13.1';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256,\n      FLIP_FLAG = 512;\n\n  /** Used to compose bitmasks for comparison styles. */\n  var UNORDERED_COMPARE_FLAG = 1,\n      PARTIAL_COMPARE_FLAG = 2;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(\\.|\\[\\])(?:\\4|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match non-compound words composed of alphanumeric characters. */\n  var reBasicWord = /[a-zA-Z0-9]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0x/i;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0',\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsLowerMisc = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsUpperMisc = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptLowerContr = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptUpperContr = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reComplexSymbol = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reComplexWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptLowerContr + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsUpperMisc + '+' + rsOptUpperContr + '(?=' + [rsBreak, rsUpper + rsLowerMisc, '$'].join('|') + ')',\n    rsUpper + '?' + rsLowerMisc + '+' + rsOptLowerContr,\n    rsUpper + '+' + rsOptUpperContr,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasComplexSymbol = RegExp('[' + rsZWJ + rsAstralRange  + rsComboMarksRange + rsComboSymbolsRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasComplexWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'Reflect', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError',\n    'Uint8Array', 'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = checkGlobal(typeof global == 'object' && global);\n\n  /** Detect free variable `self`. */\n  var freeSelf = checkGlobal(typeof self == 'object' && self);\n\n  /** Detect `this` as the global object. */\n  var thisGlobal = checkGlobal(typeof this == 'object' && this);\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || thisGlobal || Function('return this')();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `Map#set` because it doesn't return the map instance in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    var length = args.length;\n    switch (length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array ? array.length : 0;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array ? array.length : 0;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to search.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array ? array.length : 0,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array ? array.length : 0;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array ? array.length : 0;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array ? array.length : 0;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing wrapper metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a cache value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Checks if `value` is a global object.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {null|Object} Returns `value` if it's a global object, else `null`.\n   */\n  function checkGlobal(value) {\n    return (value && value.Object === Object) ? value : null;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        result++;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is a host object in IE < 9.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n   */\n  function isHostObject(value) {\n    // Many host objects are `Object` objects that can coerce to strings\n    // despite having improperly defined `toString` methods.\n    var result = false;\n    if (value != null && typeof value.toString != 'function') {\n      try {\n        result = !!(value + '');\n      } catch (e) {}\n    }\n    return result;\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    if (!(string && reHasComplexSymbol.test(string))) {\n      return string.length;\n    }\n    var result = reComplexSymbol.lastIndex = 0;\n    while (reComplexSymbol.test(string)) {\n      result++;\n    }\n    return result;\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return string.match(reComplexSymbol);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Use `context` to stub `Date#getTime` use in `_.now`.\n   * var stubbed = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': stubGetTime };\n   *   }\n   * });\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    context = context ? _.defaults({}, context, _.pick(root, contextProps)) : root;\n\n    /** Built-in constructor references. */\n    var Date = context.Date,\n        Error = context.Error,\n        Math = context.Math,\n        RegExp = context.RegExp,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = context.Array.prototype,\n        objectProto = context.Object.prototype,\n        stringProto = context.String.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = context.Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objectToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Reflect = context.Reflect,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        enumerate = Reflect ? Reflect.enumerate : undefined,\n        getOwnPropertySymbols = Object.getOwnPropertySymbols,\n        iteratorSymbol = typeof (iteratorSymbol = Symbol && Symbol.iterator) == 'symbol' ? iteratorSymbol : undefined,\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice;\n\n    /** Built-in method references that are mockable. */\n    var setTimeout = function(func, wait) { return context.setTimeout.call(root, func, wait); };\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetPrototype = Object.getPrototypeOf,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = Object.keys,\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReplace = stringProto.replace,\n        nativeReverse = arrayProto.reverse,\n        nativeSplit = stringProto.split;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\n    var nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array of at least `200` elements\n     * and any iteratees accept only one argument. The heuristic for whether a\n     * section qualifies for shortcut fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `deburr`, `divide`, `each`,\n     * `eachRight`, `endsWith`, `eq`, `escape`, `escapeRegExp`, `every`, `find`,\n     * `findIndex`, `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `first`,\n     * `floor`, `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`,\n     * `forOwnRight`, `get`, `gt`, `gte`, `has`, `hasIn`, `head`, `identity`,\n     * `includes`, `indexOf`, `inRange`, `invoke`, `isArguments`, `isArray`,\n     * `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`, `isBoolean`,\n     * `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isEqualWith`,\n     * `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`, `isMap`,\n     * `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE ||\n          (arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries ? entries.length : 0;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      return getMapData(this, key)['delete'](key);\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      getMapData(this, key).set(key, value);\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values ? values.length : 0;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      this.__data__ = new ListCache(entries);\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      return this.__data__['delete'](key);\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var cache = this.__data__;\n      if (cache instanceof ListCache && cache.__data__.length == LARGE_ARRAY_SIZE) {\n        cache = this.__data__ = new MapCache(cache.__data__);\n      }\n      cache.set(key, value);\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function assignInDefaults(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (typeof key == 'number' && value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to search.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths of elements to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          isNil = object == null,\n          length = paths.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = isNil ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {boolean} [isFull] Specify a clone including symbols.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, isFull, customizer, key, object, stack) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          if (isHostObject(value)) {\n            return object ? value : {};\n          }\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (!isArr) {\n        var props = isFull ? getAllKeys(value) : keys(value);\n      }\n      // Recursively populate clone (susceptible to call stack limits).\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        assignValue(result, key, baseClone(subValue, isDeep, isFull, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source),\n          length = props.length;\n\n      return function(object) {\n        if (object == null) {\n          return !length;\n        }\n        var index = length;\n        while (index--) {\n          var key = props[index],\n              predicate = source[key],\n              value = object[key];\n\n          if ((value === undefined &&\n              !(key in Object(object))) || !predicate(value)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    function baseCreate(proto) {\n      return isObject(proto) ? objectCreate(proto) : {};\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an array\n     * of `func` arguments.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments to provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      // Avoid a bug in IE 10-11 where objects with a [[Prototype]] of `null`,\n      // that are composed entirely of index properties, return `false` for\n      // `hasOwnProperty` checks of them.\n      return object != null &&\n        (hasOwnProperty.call(object, key) ||\n          (typeof object == 'object' && key in object && getPrototype(object) === null));\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      if (!isKey(path, object)) {\n        path = castPath(path);\n        object = parent(object, path);\n        path = last(path);\n      }\n      var func = object == null ? object : object[toKey(path)];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {boolean} [bitmask] The bitmask of comparison flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - Unordered comparison\n     *     2 - Partial comparison\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, bitmask, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {number} [bitmask] The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, bitmask, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = getTag(object);\n        objTag = objTag == argsTag ? objectTag : objTag;\n      }\n      if (!othIsArr) {\n        othTag = getTag(other);\n        othTag = othTag == argsTag ? objectTag : othTag;\n      }\n      var objIsObj = objTag == objectTag && !isHostObject(object),\n          othIsObj = othTag == objectTag && !isHostObject(other),\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, equalFunc, customizer, bitmask, stack)\n          : equalByTag(object, other, objTag, equalFunc, customizer, bitmask, stack);\n      }\n      if (!(bitmask & PARTIAL_COMPARE_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, equalFunc, customizer, bitmask, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      return nativeKeys(Object(object));\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't skip the constructor\n     * property of prototypes or treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      object = object == null ? object : Object(object);\n\n      var result = [];\n      for (var key in object) {\n        result.push(key);\n      }\n      return result;\n    }\n\n    // Fallback for IE < 9 with es6-shim.\n    if (enumerate && !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf')) {\n      baseKeysIn = function(object) {\n        return iteratorToArray(enumerate(object));\n      };\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments to numbers.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, undefined, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      if (!(isArray(source) || isTypedArray(source))) {\n        var props = keysIn(source);\n      }\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      });\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        newValue = srcValue;\n        if (isArray(srcValue) || isTypedArray(srcValue)) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            isCommon = false;\n            newValue = baseClone(srcValue, true);\n          }\n          else {\n            newValue = objValue;\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      stack.set(srcValue, newValue);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n      }\n      stack['delete'](srcValue);\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce `n` to an integer.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, props) {\n      object = Object(object);\n      return arrayReduce(props, function(result, key) {\n        if (key in object) {\n          result[key] = object[key];\n        }\n        return result;\n      }, {});\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, predicate) {\n      var index = -1,\n          props = getAllKeysIn(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (predicate(value, key)) {\n          result[key] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          }\n          else if (!isKey(index, array)) {\n            var path = castPath(index),\n                object = parent(array, path);\n\n            if (object != null) {\n              delete object[toKey(last(path))];\n            }\n          }\n          else {\n            delete array[toKey(index)];\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments to numbers.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]);\n        if (isObject(nested)) {\n          var newValue = value;\n          if (index != lastIndex) {\n            var objValue = nested[key];\n            newValue = customizer ? customizer(objValue, key, nested) : undefined;\n            if (newValue === undefined) {\n              newValue = objValue == null\n                ? (isIndex(path[index + 1]) ? [] : {})\n                : objValue;\n            }\n          }\n          assignValue(nested, key, newValue);\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = isKey(path, object) ? [path] : castPath(path);\n      object = parent(object, path);\n\n      var key = toKey(last(path));\n      return !(object != null && baseHas(object, key)) || delete object[key];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var index = -1,\n          length = arrays.length;\n\n      while (++index < length) {\n        var result = result\n          ? arrayPush(\n              baseDifference(result, arrays[index], iteratee, comparator),\n              baseDifference(arrays[index], result, iteratee, comparator)\n            )\n          : arrays[index];\n      }\n      return (result && result.length) ? baseUniq(result, iteratee, comparator) : [];\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value) {\n      return isArray(value) ? value : stringToPath(value);\n    }\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var result = new buffer.constructor(buffer.length);\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), true) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), true) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : source[key];\n\n        assignValue(object, key, newValue);\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbol properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return rest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBaseWrapper(func, bitmask, thisArg) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = reHasComplexSymbol.test(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurryWrapper(func, bitmask, arity) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        predicate = getIteratee(predicate, 3);\n        if (!isArrayLike(collection)) {\n          var props = keys(collection);\n        }\n        var index = findIndexFunc(props || collection, function(value, key) {\n          if (props) {\n            key = value;\n            value = iterable[key];\n          }\n          return predicate(value, key, iterable);\n        }, fromIndex);\n        return index > -1 ? collection[props ? props[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return rest(function(funcs) {\n        funcs = baseFlatten(funcs, 1);\n\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 &&\n              isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurried = bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG),\n          isFlip = bitmask & FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurryWrapper(\n            func, bitmask, createHybridWrapper, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return 0;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return rest(function(iteratees) {\n        iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n          ? arrayMap(iteratees[0], baseUnary(getIteratee()))\n          : arrayMap(baseFlatten(iteratees, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n        return rest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return reHasComplexSymbol.test(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toNumber(start);\n        start = start === start ? start : 0;\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toNumber(end) || 0;\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : (toNumber(step) || 0);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags. See `createWrapper`\n     *  for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurryWrapper(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n      if (!(bitmask & CURRY_BOUND_FLAG)) {\n        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask of wrapper flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     *   512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] == null\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (CURRY_FLAG | CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(CURRY_FLAG | CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == BIND_FLAG) {\n        var result = createBaseWrapper(func, bitmask, thisArg);\n      } else if (bitmask == CURRY_FLAG || bitmask == CURRY_RIGHT_FLAG) {\n        result = createCurryWrapper(func, bitmask, arity);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !holders.length) {\n        result = createPartialWrapper(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & UNORDERED_COMPARE_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!seen.has(othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {\n                  return seen.add(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, customizer, bitmask, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, equalFunc, customizer, bitmask, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and\n          // booleans to `1` or `0` treating invalid dates coerced to `NaN` as\n          // not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object) ? other != +other : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/6.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & PARTIAL_COMPARE_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= UNORDERED_COMPARE_FLAG;\n          stack.set(object, other);\n\n          // Recursively compare objects (susceptible to call stack limits).\n          return equalArrays(convert(object), convert(other), equalFunc, customizer, bitmask, stack);\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {number} bitmask The bitmask of comparison flags. See `baseIsEqual`\n     *  for more details.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, bitmask, stack) {\n      var isPartial = bitmask & PARTIAL_COMPARE_FLAG,\n          objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : baseHas(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      return result;\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a\n     * [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792) that affects\n     * Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the `[[Prototype]]` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {null|Object} Returns the `[[Prototype]]`.\n     */\n    function getPrototype(value) {\n      return nativeGetPrototype(Object(value));\n    }\n\n    /**\n     * Creates an array of the own enumerable symbol properties of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    function getSymbols(object) {\n      // Coerce `object` to an object to avoid non-object errors in V8.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3443 for more details.\n      return getOwnPropertySymbols(Object(object));\n    }\n\n    // Fallback for IE < 11.\n    if (!getOwnPropertySymbols) {\n      getSymbols = stubArray;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable symbol properties\n     * of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !getOwnPropertySymbols ? getSymbols : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function getTag(value) {\n      return objectToString.call(value);\n    }\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11,\n    // for data views in Edge, and promises in Node.js.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = objectToString.call(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : undefined;\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var result,\n          index = -1,\n          length = path.length;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result) {\n        return result;\n      }\n      var length = object ? object.length : 0;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isString(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Creates an array of index keys for `object` values of arrays,\n     * `arguments` objects, and strings, otherwise `null` is returned.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array|null} Returns index keys, else `null`.\n     */\n    function indexKeys(object) {\n      var length = object ? object.length : undefined;\n      if (isLength(length) &&\n          (isArray(object) || isString(object) || isArguments(object))) {\n        return baseTimes(length, String);\n      }\n      return null;\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value);\n    }\n\n    /**\n     * Checks if `value` is a flattenable array and not a `_.matchesProperty`\n     * iteratee shorthand.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenableIteratee(value) {\n      return isArray(value) && !(value.length == 2 && !isFunction(value[0]));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (BIND_FLAG | BIND_KEY_FLAG | ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == ARY_FLAG) && (bitmask == CURRY_FLAG)) ||\n        ((srcBitmask == ARY_FLAG) && (bitmask == REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (ARY_FLAG | REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & BIND_FLAG ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function mergeDefaults(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        baseMerge(objValue, srcValue, undefined, mergeDefaults, stack.set(srcValue, objValue));\n      }\n      return objValue;\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoize(function(string) {\n      var result = [];\n      toString(string).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to process.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array ? array.length : 0;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length,\n          args = Array(length ? length - 1 : 0),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return length\n        ? arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other given\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = rest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. Result values\n     * are chosen from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = rest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs ? pairs.length : 0,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. The order of result values is determined by the\n     * order they occur in the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = rest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. Result values are chosen from the first array.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = rest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. Result values are chosen\n     * from the first array. The comparator is invoked with two arguments:\n     * (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = rest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (comparator === last(mapped)) {\n        comparator = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array ? nativeJoin.call(array, separator) : '';\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = (\n          index < 0\n            ? nativeMax(length + index, 0)\n            : nativeMin(index, length - 1)\n        ) + 1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index - 1, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = rest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = rest(function(array, indexes) {\n      indexes = baseFlatten(indexes, 1);\n\n      var length = array ? array.length : 0,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array ? nativeReverse.call(array) : array;\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array ? array.length : 0;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = rest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each\n     * element is kept.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length)\n        ? baseUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseUniq(array, getIteratee(iteratee))\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      return (array && array.length)\n        ? baseUniq(array, undefined, comparator)\n        : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = rest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = rest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = rest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The comparator is invoked with\n     * two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = rest(function(arrays) {\n      var comparator = last(arrays);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = rest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = rest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = rest(function(paths) {\n      paths = baseFlatten(paths, 1);\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _([1, 2]).forEach(function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function, it's\n     * invoked for and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = rest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? apply(func, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getIteratee(predicate, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var array = isArrayLike(collection) ? collection : values(collection),\n          length = array.length;\n\n      return length > 0 ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = baseClamp(toInteger(n), 0, length);\n      }\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sampleSize(collection, MAX_ARRAY_LENGTH);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        var result = collection.length;\n        return (result && isString(collection)) ? stringSize(collection) : result;\n      }\n      if (isObjectLike(collection)) {\n        var tag = getTag(collection);\n        if (tag == mapTag || tag == setTag) {\n          return collection.size;\n        }\n      }\n      return keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, function(o) { return o.user; });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     *\n     * _.sortBy(users, 'user', function(o) {\n     *   return Math.floor(o.age / 10);\n     * });\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    var sortBy = rest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      iteratees = (iteratees.length == 1 && isArray(iteratees[0]))\n        ? iteratees[0]\n        : baseFlatten(iteratees, 1, isFlattenableIteratee);\n\n      return baseOrderBy(collection, iteratees, []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    function now() {\n      return Date.now();\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = rest(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = rest(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrapper(func, CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide an options object to indicate whether `func` should be invoked on\n     * the leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent calls\n     * to the debounced function return the result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one or more milliseconds.\n     */\n    var defer = rest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = rest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrapper(func, FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with arguments transformed by\n     * corresponding `transforms`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [transforms[_.identity]] The functions to transform.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = rest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1, isFlattenableIteratee), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return rest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrapper(func, PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = rest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrapper(func, PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = rest(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes, 1));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : toInteger(start), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, array);\n          case 1: return func.call(this, args[0], array);\n          case 2: return func.call(this, args[0], args[1], array);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = array;\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/6.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? 0 : nativeMax(toInteger(start), 0);\n      return rest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide an options object to indicate whether\n     * `func` should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return partial(wrapper, value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, false, true);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      return baseClone(value, false, true, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, true, true);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      return baseClone(value, true, true, customizer);\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      // Safari 8.1 incorrectly makes `arguments.callee` enumerable in strict mode.\n      return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') &&\n        (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @type {Function}\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    function isArrayBuffer(value) {\n      return isObjectLike(value) && objectToString.call(value) == arrayBufferTag;\n    }\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value)) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && objectToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = !Buffer ? stubFalse : function(value) {\n      return value instanceof Buffer;\n    };\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objectToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element,\n     *  else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (isArrayLike(value) &&\n          (isArray(value) || isString(value) || isFunction(value.splice) ||\n            isArguments(value) || isBuffer(value))) {\n        return !value.length;\n      }\n      if (isObjectLike(value)) {\n        var tag = getTag(value);\n        if (tag == mapTag || tag == setTag) {\n          return !value.size;\n        }\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return !(nonEnumShadows && keys(value).length);\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are **not** supported.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent,\n     *  else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object,\n     *  else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      return (objectToString.call(value) == errorTag) ||\n        (typeof value.message == 'string' && typeof value.name == 'string');\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number,\n     *  else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 8 which returns 'object' for typed array and weak map constructors,\n      // and PhantomJS 1.9 which returns 'function' for `NodeList` instances.\n      var tag = isObject(value) ? objectToString.call(value) : '';\n      return tag == funcTag || tag == genTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length,\n     *  else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/6.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return !!value && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    function isMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values. This method is\n     * equivalent to a `_.matches` function when `source` is partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the\n     * presence of the `core-js` package because `core-js` circumvents this kind\n     * of detection. Despite multiple requests, the `core-js` maintainer has made\n     * it clear: any attempt to fix the detection will be obstructed. As a result,\n     * we're left with little choice but to throw an error. Unfortunately, this\n     * also affects packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on `core-js`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error('This method is not supported with `core-js`. Try https://github.com/es-shims.');\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && objectToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object,\n     *  else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) ||\n          objectToString.call(value) != objectTag || isHostObject(value)) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return (typeof Ctor == 'function' &&\n        Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objectToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer,\n     *  else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    function isSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[objectToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified,\n     *  else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && objectToString.call(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (iteratorSymbol && value[iteratorSymbol]) {\n        return iteratorToArray(value[iteratorSymbol]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = isFunction(value.valueOf) ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.c = 3;\n     * }\n     *\n     * function Bar() {\n     *   this.e = 5;\n     * }\n     *\n     * Foo.prototype.d = 4;\n     * Bar.prototype.f = 6;\n     *\n     * _.assign({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3, 'e': 5 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * function Bar() {\n     *   this.d = 4;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     * Bar.prototype.e = 5;\n     *\n     * _.assignIn({ 'a': 1 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4, 'e': 5 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      if (nonEnumShadows || isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keysIn(source), object);\n        return;\n      }\n      for (var key in source) {\n        assignValue(object, key, source[key]);\n      }\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths of elements to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = rest(function(object, paths) {\n      return baseAt(object, baseFlatten(paths, 1));\n    });\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = rest(function(args) {\n      args.push(undefined, assignInDefaults);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = rest(function(args) {\n      args.push(undefined, mergeDefaults);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = rest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      var isProto = isPrototype(object);\n      if (!(isProto || isArrayLike(object))) {\n        return baseKeys(object);\n      }\n      var indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      for (var key in object) {\n        if (baseHas(object, key) &&\n            !(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(isProto && key == 'constructor')) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      var index = -1,\n          isProto = isPrototype(object),\n          props = baseKeysIn(object),\n          propsLength = props.length,\n          indexes = indexKeys(object),\n          skipIndexes = !!indexes,\n          result = indexes || [],\n          length = result.length;\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if (!(skipIndexes && (key == 'length' || isIndex(key, length))) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[iteratee(value, key, object)] = value;\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        result[key] = iteratee(value, key, object);\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with seven arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable string keyed properties of `object` that are\n     * not omitted.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = rest(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      props = arrayMap(baseFlatten(props, 1), toKey);\n      return basePick(object, baseDifference(getAllKeysIn(object), props));\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      predicate = getIteratee(predicate);\n      return basePickBy(object, function(value, key) {\n        return !predicate(value, key);\n      });\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [props] The property identifiers to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = rest(function(object, props) {\n      return object == null ? {} : basePick(object, arrayMap(baseFlatten(props, 1), toKey));\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Array|Function|Object|string} [predicate=_.identity]\n     *  The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      return object == null ? {} : basePickBy(object, getIteratee(predicate));\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = isKey(path, object) ? [path] : castPath(path);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        object = undefined;\n        length = 1;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getIteratee(iteratee, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object ? baseValues(object, keys(object)) : [];\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toNumber(start) || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toNumber(end) || 0;\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toNumber(lower) || 0;\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toNumber(upper) || 0;\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\" in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in IE < 9, they can break out of\n     * attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the\n     * [HTML5 Security Cheatsheet](https://html5sec.org/) for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=3109 for more details.\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = toString(string).replace(reTrim, '');\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : nativeReplace.call(string, args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (separator == '' && reHasComplexSymbol.test(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return nativeSplit.call(string, separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = baseClamp(toInteger(position), 0, string.length);\n      return string.lastIndexOf(baseToString(target), position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES delimiter as an alternative to the default \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, assignInDefaults);\n\n      var imports = assignInWith({}, options.imports, settings.imports, assignInDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (reHasComplexSymbol.test(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        pattern = reHasComplexWord.test(string) ? reComplexWord : reBasicWord;\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = rest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['onClick']);\n     * jQuery(element).on('click', view.onClick);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = rest(function(object, methodNames) {\n      arrayEach(baseFlatten(methodNames, 1), function(key) {\n        key = toKey(key);\n        object[key] = bind(object[key], object);\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.constant(true),                _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs ? pairs.length : 0,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return rest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.filter(users, _.conforms({ 'age': function(n) { return n > 38; } }));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument given to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`. The created function is equivalent to\n     * `_.isMatch` with a `source` partially applied.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** This method supports comparing the same values as `_.isEqual`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = rest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = rest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * A method that returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return rest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [iteratees=[_.identity]] The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Array|Array[]|Function|Function[]|Object|Object[]|string|string[])}\n     *  [predicates=[_.identity]] The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * A method that returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * A method that returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * A method that returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * A method that returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * A method that returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(value));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    });\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    });\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    });\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    });\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Array|Function|Object|string} [iteratee=_.identity]\n     *  The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.deburr = deburr;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = rest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      predicate = getIteratee(predicate, 3);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    if (iteratorSymbol) {\n      lodash.prototype[iteratorSymbol] = wrapperToIterator;\n    }\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Expose Lodash on the free variable `window` or `self` when available so it's\n  // globally accessible, even when bundled with Browserify, Webpack, etc. This\n  // also prevents errors in cases where Lodash is loaded by a script tag in the\n  // presence of an AMD loader. See http://requirejs.org/docs/errors.html#mismatch\n  // for more details. Use `_.noConflict` to remove Lodash from the global object.\n  (freeSelf || {})._ = _;\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nexports.ROUNDING_FACTOR = 10;\n\nexports.RUN_BENCHMARKS = false;\n\nexports.SHOW_MAXIMA_AND_MINIMA = false;\n\nexports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\nexports.SYNTENY_MARGIN = 50;\nexports.CIRCLE_RADIUS = 2;\nexports.UNSELECTED_DOT_FILL = '#D0D0D0';\nexports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nexports.DOTPLOT_COLOR_TRANS_LEN = 500;\nexports.MAXIMIZE_WIDTH = true;\nexports.MIN_TEXT_GAP = 12;\nexports.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS = 50;\n\nexports.HISTOGRAM_MARGIN = 50;\nexports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\nexports.NUM_HISTOGRAM_TICKS = 75;\nexports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\nexports.COLOR_RANGES = {\n  rg: {\n    range: ['red', 'green'],\n    quantized: false\n  },\n  rg_quantized: { /* From colorbrewer */\n    range: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf',\n      '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    quantized: true\n  },\n  rainbow: {\n    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n    quantized: false\n  },\n  rainbow_quantized: {\n    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n    quantized: true\n  },\n  unselected: {\n    range: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n    quantized: false\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","'use strict';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\n\nexports.getComputedAttr = function getComputedAttr(element, attr) {\n  const computed = getComputedStyle(element)[attr];\n  return parseInt(computed, 10);\n};\n\nexports.samplePointsInRange = function(extent, n) {\n  return _.map(_.range(n), d3.scale.linear().domain([0, n - 1]).range(extent));\n};\n\nexports.timeIt = function(f, name) {\n  return function(...args) {\n    const start = Date.now();\n    const x = f.call(null, ...args);\n    console.log(name, Date.now() - start);\n    return x;\n  };\n};\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","'use strict';\n\nconst _ = require('lodash');\n\nexports.simplify = function simplify(dirtyPoints, persistence) {\n  const points = removeNonExtrema(dirtyPoints);\n  const index = indexOfSmallestPointDifference(points);\n\n  if (points.length < 3 || gapBetweenPoints(points, index) > persistence)\n    return points;\n\n  const toRemove = index === 0 ? 1 : index;\n  points.splice(toRemove, 1);\n\n  return simplify(points, persistence);\n};\n\nfunction removeNonExtrema(A) {\n  return _.filter(A, function(element, index) {\n    if (index === 0 || index === A.length - 1)\n      return true;\n\n    const before = A[index - 1].y;\n    const here = element.y;\n    const after = A[index + 1].y;\n    return here > Math.max(before, after) || here < Math.min(before, after);\n  });\n}\n\nfunction gapBetweenPoints(A, i) {\n  return Math.abs(A[i].y - A[i + 1].y);\n}\n\nfunction indexOfSmallestPointDifference(A) {\n  return _(A.length - 1).range().minBy(i => gapBetweenPoints(A, i));\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nmodule.exports = function transform(props) {\n  var transform = [];\n  if (Array.isArray(props)) {\n    props.forEach(function forEachAccessor(prop) {\n      var key = Object.keys(prop)[0];\n      transform.push(key + '(' + prop[key] + ')');\n    });\n  }\n  return transform.join(' ');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svg-transform/index.js\n ** module id = 6\n ** module chunks = 0\n **/","const _ = require('lodash');\n\n/*\n * I want to run a benchmark, but I don't want to block UI updates \n * in between iterations.\n *\n * My guess is that this isn't super accurate for fast functions.\n */\nexports.benchmark = function(testArgs, f, done) {\n\n  const results = [];\n  const runOne = function(tests) {\n    if (!tests.length)\n      return done(stats(results));\n\n    results.push(timeIt(f, tests[0]));\n    setTimeout(runOne, 0, tests.slice(1));\n  };\n  setTimeout(runOne, 0, testArgs);\n\n  const timeIt = function(f, arg) {\n    const start = Date.now();\n    f(arg);\n    return Date.now() - start;\n  };\n\n  const stats = times => ({\n    totalTime: _.sum(times),\n    count: times.length,\n    max: _.max(times),\n    average: _.sum(times) / times.length\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/async-benchmark.js\n **/","'use strict';\n\nconst persistenceFuncs = require('./persistence');\nconst d3 = require('d3');\nconst _ = require('lodash');\n\nconst {\n  AUTO_SCALE_VALLEY_FILL\n} = require('constants');\n\nexports.generateAutoScale = function(points, persistence) {\n  const extrema = persistenceFuncs.simplify(points, persistence);\n  return generateColorScaleFromExtrema(extrema);\n};\n\nconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\nconst shouldBeMarked = (x, i, A) => {\n  // This is bad, but we are special casing the first maximum if it is \"big.\"\n  // This gives the ks == 0 spike color. The\n  if(i == 0 && A[i].y >= _.max(_.map(A, x => x.y))) {\n    return true;\n  }\n  // common case: normal maxima\n  return i > 0 && i < A.length - 1 && isMaxima(A, i);\n};\n\nconst generateColorScaleFromExtrema = function(extrema) {\n  const colors = d3.scale.category10();\n\n  const colored = _.map(extrema, function(x, i, A) {\n    const color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n    return Object.assign({}, x, {color});\n  });\n\n  const domain = _.map(colored, d => d.x + d.dx / 2);\n  const range = _.map(colored, d => d.color);\n\n  return d3.scale.linear().domain(domain).range(range);\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/auto-colorscale.js\n **/","const d3 = require('d3');\nconst _ = require('lodash');\nconst utils = require('./utils');\n\nconst {\n  COLOR_RANGES\n} = require('constants');\n\nexports.onData = function(data) {\n  const generateScale = function(field, name) {\n    const extent = d3.extent(data, point => point[field]);\n\n    const colorScale = COLOR_RANGES[name];\n    const range = colorScale.range;\n    const domain = utils.samplePointsInRange(extent, range.length);\n\n    if (colorScale.quantized) {\n      return d3.scale.quantize().domain(domain).range(range);\n    } else {\n      return d3.scale.linear().domain(domain).range(range);\n    }\n  };\n\n  /* _.memoize acts only on the first arg unless we tell it otherwise */\n  return _.memoize(generateScale, (field, name) => field + '.' + name);\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/colorscales.js\n **/","'use strict';\n\nconst utils = require('./utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nconst {\n  SYNTENY_MARGIN,\n  CIRCLE_RADIUS,\n  UNSELECTED_DOT_FILL,\n  NUM_COLOR_SCALE_INTERPOLATION_SAMPLES,\n  GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS,\n  DOTPLOT_COLOR_TRANS_LEN,\n  MAXIMIZE_WIDTH,\n  MIN_TEXT_GAP,\n  ROUNDING_FACTOR\n} = require('constants');\n\nfunction synteny(id, dataObj, field, initialColorScale, meta) {\n  var xExtent = d3.extent(dataObj.getXLineOffsets());\n  var yExtent = d3.extent(dataObj.getYLineOffsets());\n  var dataAspectRatio = yExtent[1] / xExtent[1];\n\n  const baseID = id.substring(1);\n  const svgElement = document.getElementById(baseID);\n\n  const getComputedWidth = () => {\n    return utils.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n  };\n  const getComputedHeight = () => {\n    return utils.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n  };\n\n  const getWidth = () => {\n    const screenRatio = getComputedHeight() / getComputedWidth();\n    if(screenRatio > dataAspectRatio) {\n      // We are too tall. Use the entire width.\n      return getComputedWidth();\n    } else {\n      // We are too wide. Only use as much width as we have height for.\n      return getComputedHeight() / dataAspectRatio;\n    }\n  };\n\n  const getHeight = () => {\n    const screenRatio = getComputedHeight() / getComputedWidth();\n    if(screenRatio > dataAspectRatio) {\n      // We are too tall. Only use as much height as we have width for.\n      return getComputedWidth() * dataAspectRatio;\n    } else {\n      // We are too wide. Use the entire height.\n      return getComputedHeight();\n    }\n  };\n\n  var xScale = d3.scale.linear().domain(xExtent).range([0, getWidth()]);\n  var yScale = d3.scale.linear().domain(yExtent).range([getHeight(), 0]);\n\n  const darknessOfTextGaps = function(values, scale) {\n    return _.zipWith(values, _.tail(values), function(a, b) {\n      return b ? Math.abs(scale(b) - scale(a)) : 10000;\n    })\n      .map(v => v > MIN_TEXT_GAP ? 1 : v / MIN_TEXT_GAP)\n      .map(v => 255 - Math.floor(v * 256))\n      .map(v => Math.min(v, 245));\n  };\n\n  const filterTextGaps = function(values, scale) {\n    return values.reduce(function(out, next) {\n      const first = out.length === 0;\n      const gap = Math.abs(scale(next) - scale(_.last(out)));\n      const gap_has_elapsed = gap > MIN_TEXT_GAP;\n      if (first || gap_has_elapsed)\n        out.push(next);\n      return out;\n    }, []);\n  };\n\n  const genGeVOLink = (aDbId, bDbId) =>\n    'http://geco.iplantcollaborative.org/asherkhb/coge/GEvo.pl?' +\n    `fid1=${aDbId};fid2=${bDbId};apply_all=${50000};num_seqs=${2}`;\n\n  const getSingleGeVoDescription = id =>\n  fetch(`https://genomevolution.org/coge/api/v1/features/${id}`)\n    .then(r => r.json());\n\n  const getGeVODescription = (aDbId, bDbId) => Promise.all([\n    getSingleGeVoDescription(aDbId),\n    getSingleGeVoDescription(bDbId)\n  ])\n    .then(([x, y]) => {\n      return {x_name: x.names.join(', '), y_name: y.names.join(', ')};\n    });\n\n  let highlighted;\n  const updateGeVOLink = function(x, y) {\n    const distance = d => {\n      const x_component = Math.pow(d.x_relative_offset - x, 2);\n      const y_component = Math.pow(d.y_relative_offset - y, 2);\n      return Math.sqrt(x_component + y_component);\n    };\n    const point = _.minBy(dataObj.currentData().raw, distance);\n    highlighted = point;\n\n    const ratio = (xScale.range()[1] - xScale.range()[0]) /\n      (xScale.domain()[1] - xScale.domain()[0]);\n    if (distance(point) * ratio < GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS) {\n      d3.select('#gevo-link')\n        .text('Compare in GEvo >>>')\n        .attr('onclick', () => {\n          const link = genGeVOLink(point.x_feature_id, point.y_feature_id);\n          return `window.open('${link}')`;\n        });\n      getGeVODescription(point.x_feature_id, point.y_feature_id)\n        .then(({x_name, y_name}) => {\n          d3.select('#gevo-link-xname')\n            .text(`${meta.x_name}: ${x_name}`);\n          d3.select('#gevo-link-yname')\n            .text(`${meta.y_name}: ${y_name}`);\n        });\n    }\n\n    setSyntenyData();\n  };\n\n  const makeLabels = function() {\n\n    const xFilter = x => (0 <= xScale(x) && xScale(x) <= getWidth());\n    const yFilter = y => (0 <= yScale(y) && yScale(y) <= getHeight());\n\n    const tempXOffsets = _.filter(xOffsets, xFilter);\n    const tempYOffsets = _.filter(yOffsets, yFilter);\n    const tempXGaps = filterTextGaps(_.filter(xMidpoints, xFilter), xScale);\n    const tempYGaps = filterTextGaps(_.filter(yMidpoints, yFilter), yScale);\n\n    xGridLines.tickValues(tempXOffsets);\n    xLabels.tickValues(tempXGaps);\n    yGridLines.tickValues(tempYOffsets);\n    yLabels.tickValues(tempYGaps);\n\n    xAxisGapsGroup.call(xLabels);\n    yAxisGapsGroup.call(yLabels);\n    xAxisLineGroup.call(xGridLines);\n    yAxisLineGroup.call(yGridLines);\n\n    const tempXOffsetDarknesses = darknessOfTextGaps(tempXOffsets, xScale);\n    const tempYOffsetDarknesses = darknessOfTextGaps(tempYOffsets, yScale);\n\n    xAxisLineGroup.selectAll('line')\n      .data(tempXOffsetDarknesses)\n      .style('stroke', d => d3.rgb(d, d, d));\n\n    yAxisLineGroup.selectAll('line')\n      .data(tempYOffsetDarknesses)\n      .style('stroke', d => d3.rgb(d, d, d));\n\n  };\n\n  var zoom = d3.behavior.zoom()\n    .x(xScale).y(yScale)\n    .scaleExtent([1, 100])\n    .on('zoom', function() {\n      var t = d3.event.translate;\n      var s = d3.event.scale;\n      t[0] = Math.min(0, Math.max(-getWidth() * s + getWidth(), t[0]));\n      t[1] = Math.min(0, Math.max(-getHeight() * s + getHeight(), t[1]));\n      // prevents the translate from growing large. This way, you don't \n      // have to \"scroll back\" onto the canvas if you pan past the edge.\n      zoom.translate(t);\n\n      brushGroup.attr('transform', transform([{translate: t}, {scale: s}]));\n\n      resizeBrushBoundary();\n      makeLabels();\n      drawBG();\n      setSyntenyData();\n    });\n\n  function resizeBrushBoundary() {\n    var scaling = zoom.scale();\n    var corners = ['.nw', '.ne', '.se', '.sw'];\n    var vertical = ['.e', '.w'];\n    var horizontal = ['.n', '.s'];\n    var horizontalRescale = corners.concat(vertical);\n    var verticalRescale = corners.concat(horizontal);\n\n    _.map(horizontalRescale, function(name) {\n      d3.select('.resize' + name).select('rect')\n        .attr('width', 6 / scaling).attr('x', -3 / scaling);\n    });\n\n    _.map(verticalRescale, function(name) {\n      d3.select('.resize' + name).select('rect')\n        .attr('height', 6 / scaling).attr('y', -3 / scaling);\n    });\n  }\n\n  /* We are copying the scale here because brushes do not play nice with\n   * zooming. All sorts of nasty things happen when the scales get changed\n   * underneath a brush. */\n  const originalXScale = xScale.copy();\n  const originalYScale = yScale.copy();\n  var brush = d3.svg.brush()\n    .x(xScale.copy())\n    .y(yScale.copy())\n    .on('brush', function() {\n      if (!brush.empty()) {\n        dataObj.addSpatialFilter(brush.extent(), 'spatial');\n        resizeBrushBoundary();\n      }\n    })\n    .on('brushend', function() {\n      if (brush.empty()) {\n        dataObj.removeSpatialFilter('spatial-stop');\n        const mouse = d3.mouse(this);\n        const x = originalXScale.invert(mouse[0]);\n        const y = originalYScale.invert(mouse[1]);\n        updateGeVOLink(x, y);\n      } else {\n        dataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n        resizeBrushBoundary();\n      }\n    });\n\n  const canvas = d3.select(id + '-canvas')\n    .attr('width', getWidth())\n    .attr('height', getHeight())\n    .style('left', SYNTENY_MARGIN)\n    .style('top', SYNTENY_MARGIN);\n\n  const backCanvas = d3.select(id + '-canvas-background')\n    .attr('width', getWidth())\n    .attr('height', getHeight())\n    .style('left', SYNTENY_MARGIN)\n    .style('top', SYNTENY_MARGIN);\n\n  const context = canvas.node().getContext('2d');\n  const background = backCanvas.node().getContext('2d');\n\n  var svg = d3.select(id);\n\n  var TEXT_OFFSET = 35;\n  var TEXT_BOX_HEIGHT = 25;\n  svg.append('text')\n    .attr('x', (getWidth() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('width', (getWidth() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('y', SYNTENY_MARGIN + getHeight() + TEXT_OFFSET)\n    .attr('height', TEXT_BOX_HEIGHT)\n    .classed('plot-title', true)\n    .text(meta.x_name);\n\n  svg.append('text')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -2 * (getHeight() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('width', (getHeight() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n    .attr('height', TEXT_BOX_HEIGHT)\n    .classed('plot-title', true)\n    .text(meta.y_name);\n\n  svg\n    .append('defs')\n    .append('clipPath')\n    .attr('id', 'plot-clip-box')\n    .append('rect')\n    .attr('x', 0)\n    .attr('width', getWidth())\n    .attr('y', 0)\n    .attr('height', getHeight())\n    .attr('fill', 'black');\n\n  const midpoints = function(points) {\n    return _.zipWith(_.initial(points), _.tail(points), (a, b) => (a + b) / 2);\n  };\n\n  var xOffsets = dataObj.getXLineOffsets();\n  var xMidpoints = midpoints(xOffsets);\n\n  const xOffsetToName = _.fromPairs(_.zip(xMidpoints, dataObj.getXLineNames()));\n  const xAxisBase = () => d3.svg.axis().scale(xScale).orient('bottom');\n\n  var xGridLines = xAxisBase()\n    .tickFormat('')\n    .tickSize(-getHeight());\n\n  var xLabels = xAxisBase()\n    .tickFormat(x => xOffsetToName[x])\n    .tickSize(0);\n\n  const transformer = transform([\n    {translate: [SYNTENY_MARGIN, getHeight() + SYNTENY_MARGIN]}\n  ]);\n  var xAxisWrapper = svg.append('g').attr('transform', transformer);\n  var xAxisGapsGroup = xAxisWrapper.append('g');\n  var xAxisLineGroup = xAxisWrapper.append('g');\n\n  var yOffsets = dataObj.getYLineOffsets();\n  var yMidpoints = midpoints(yOffsets);\n\n  const yOffsetToName = _.fromPairs(_.zip(yMidpoints, dataObj.getYLineNames()));\n  const yAxisBase = () => d3.svg.axis().scale(yScale).orient('left');\n\n  var yGridLines = yAxisBase()\n    .tickFormat('')\n    .tickSize(-getWidth());\n\n  var yLabels = yAxisBase()\n    .tickFormat(x => yOffsetToName[x])\n    .tickSize(0);\n\n  var yAxisWrapper = svg.append('g')\n    .attr('transform',\n      transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]));\n  var yAxisGapsGroup = yAxisWrapper.append('g');\n  var yAxisLineGroup = yAxisWrapper.append('g');\n\n  makeLabels();\n\n  svg = svg\n    .append('g')\n    .attr('transform',\n      transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]))\n    .append('g').attr('id', 'zoom-group')\n    .call(zoom).on('mousedown.zoom', null); //disable panning\n\n  var brushGroup = svg\n    .append('g').attr('clip-path', 'url(#plot-clip-box)')\n    .append('g').attr('id', 'brush-group')\n    .call(brush);\n\n  var colorScale = initialColorScale;\n\n  function drawBG() {\n    const allDots = dataObj.currentData().raw;\n    const width = getWidth();\n    const height = getHeight();\n    background.clearRect(0, 0, width, height);\n    background.fillStyle = UNSELECTED_DOT_FILL;\n    _.each(allDots, function(d) {\n      const cx = xScale(d.x_relative_offset);\n      const cy = yScale(d.y_relative_offset);\n\n      if (cx < 0 || cx > width || cy < 0 || cy > height)\n        return;\n\n      background.fillRect(cx - CIRCLE_RADIUS,\n        cy - CIRCLE_RADIUS,\n        CIRCLE_RADIUS,\n        CIRCLE_RADIUS);\n    });\n  }\n\n  function draw(elapsedMS, initialColorScale, finalColorScale) {\n    var start = Date.now();\n\n    var intermediateColorScale;\n    var t = Math.min(\n      (DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n    intermediateColorScale = interpolateScales(initialColorScale,\n      finalColorScale,\n      t);\n\n    var allData = dataObj.currentData();\n    var activeDots = allData.active;\n\n    //console.log('Time after collecting data', Date.now() - start);\n    start = Date.now();\n\n    const width = getWidth();\n    const height = getHeight();\n\n    context.clearRect(0, 0, width, height);\n\n    /* On top, active dots */\n    var groups = [];\n    var index = 0;\n\n    const rounded = x => {\n      return Math.floor(x[field] * ROUNDING_FACTOR) / ROUNDING_FACTOR;\n    };\n    while (index < activeDots.length) {\n      var low = index;\n      var val = rounded(activeDots[index]);\n      index = _.sortedLastIndexBy(activeDots, {\n        [field]: val\n      }, x => -rounded(x));\n      groups.push([low, index]);\n    }\n\n    _.each(groups, function([loIndex, hiIndex]) {\n      context.fillStyle = intermediateColorScale(rounded(activeDots[loIndex]));\n      for (var i = loIndex; i < hiIndex; i++) {\n        const d = activeDots[i];\n        const cx = xScale(d.x_relative_offset);\n        const cy = yScale(d.y_relative_offset);\n\n        if (cx < 0 || cx > width || cy < 0 || cy > height)\n          continue;\n\n        context.fillRect(cx - CIRCLE_RADIUS,\n          cy - CIRCLE_RADIUS,\n          CIRCLE_RADIUS,\n          CIRCLE_RADIUS);\n      }\n    });\n\n    if (highlighted) {\n      context.beginPath();\n      context.strokeStyle = 'red';\n      context.arc(xScale(highlighted.x_relative_offset),\n        yScale(highlighted.y_relative_offset), 10, 0, 2 * Math.PI);\n      context.stroke();\n    }\n\n    const diff = Date.now() - start;\n    //console.log('Start of call to end of draw call:', diff);\n    if (elapsedMS > 0) {\n      setTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n    }\n  }\n\n  function interpolateScales(a, b, t) {\n    const aDomain = a.domain();\n    const bDomain = b.domain();\n    const min = Math.min(aDomain[0], bDomain[0]);\n    const max = Math.max(aDomain[aDomain.length - 1],\n      bDomain[bDomain.length - 1]);\n    const step = (max - min) / NUM_COLOR_SCALE_INTERPOLATION_SAMPLES;\n    const domain = _.range(min, max + 1, step);\n    const range = _.map(domain, function(input) {\n      return d3.interpolateRgb(a(input), b(input))(t);\n    });\n    return d3.scale.linear().domain(domain).range(range);\n  }\n\n  function setSyntenyData() {\n    draw(0, colorScale, colorScale);\n  }\n  dataObj.addListener(setSyntenyData);\n  drawBG();\n  setSyntenyData();\n\n  function setNavigationMode(mode) {\n    if (mode === 'pan') {\n      d3.select(id).select('#brush-group').on('mousedown.brush', null);\n      d3.select(id).select('#zoom-group').call(zoom);\n      d3.select(id).select('#brush-group').style('pointer-events', null);\n      d3.select(id).select('#zoom-group').style('pointer-events', 'all');\n      d3.select(id).select('#brush-group').on('click', function() {\n        const mouse = d3.mouse(this);\n        const x = originalXScale.invert(mouse[0]);\n        const y = originalYScale.invert(mouse[1]);\n        updateGeVOLink(x, y);\n      });\n    } else if (mode === 'brush') {\n      d3.select(id).select('#brush-group').call(brush);\n      d3.select(id).select('#brush-group').style('pointer-events', 'all');\n      d3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n    }\n  }\n\n  function setColorScale(newColorScale) {\n    draw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n    colorScale = newColorScale;\n  }\n\n  function setField(f) {\n    field = f;\n    setSyntenyData();\n  }\n\n  return {\n    setNavMode: setNavigationMode,\n    setColorScale: setColorScale,\n    setField: setField\n  };\n}\n\nexports.synteny = synteny;\n\n// Local Variables:\n// mode: js2\n// js2-basic-offset: 8\n// End:\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","'use strict';\n\nconst {\n  HISTOGRAM_MARGIN,\n  HISTOGRAM_Y_SCALE_TRANS_LEN,\n  NUM_HISTOGRAM_TICKS,\n  UNSELECTED_BAR_FILL\n} = require('./constants');\n\nconst persistenceFuncs = require('./persistence');\nconst utils = require('./utils');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst transform = require('svg-transform');\n\nfunction histogram(id, dataObj, field, colorScale) {\n  const dataExtent = d3.extent(_.map(dataObj.currentData().raw, field));\n\n  const plot = d3.select(id);\n  const plotWidth = () => \n    utils.getComputedAttr(document.getElementById(id.substring(1)), 'width');\n  const plotHeight = () => \n    utils.getComputedAttr(document.getElementById(id.substring(1)), 'height');\n\n  function plotBrushBrush() {\n    if (!plotBrush.empty()) {\n      dataObj.addDataFilter(plotBrush.extent(), field);\n    }\n  }\n\n  function plotBrushEnd() {\n    if (plotBrush.empty()) {\n      dataObj.removeDataFilter(field);\n    }\n    dataObj.notifyListeners('histogram-stop');\n    updateColors(dataBarSel); // Cancel color animation -- just brushing\n  }\n\n  const xPlotScale = d3.scale.linear()\n    .domain(dataExtent)\n    .range([HISTOGRAM_MARGIN, plotWidth() - HISTOGRAM_MARGIN]);\n\n  const bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n  const summaryF = dataObj.currentDataSummary(bins, field);\n  const getYExtent = (summary) => [0, 3 / 2 * _.max(_.map(summary, 'y'))];\n\n  const yPlotScale = d3.scale.linear()\n    .domain(getYExtent(summaryF()))\n    .range([plotHeight() - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n  function updateMinMaxMarkers(persistence) {\n    const summary = summaryF();\n    const extrema = persistenceFuncs.simplify(summary, persistence);\n\n    const isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n    const shouldBeMarked = (x, i, A) =>\n      i > 0 && i < A.length - 1 && isMaxima(A, i);\n    const markers = _.map(extrema, function(d, i, A) {\n      return {\n        color: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n        x: d.x + d.dx / 2,\n        y: d.y\n      };\n    });\n\n    const tempSelA = plot.selectAll('.maxMark').data(markers);\n    tempSelA.exit().remove();\n    tempSelA.enter().append('circle').classed('maxMark', 1);\n    tempSelA\n      .attr('cx', d => xPlotScale(d.x))\n      .attr('cy', d => yPlotScale(d.y) - 5)\n      .attr('r', 3)\n      .attr('fill', d => d.color);\n  }\n\n  const plotBrush = d3.svg.brush()\n    .x(xPlotScale)\n    .on('brush', plotBrushBrush)\n    .on('brushend', plotBrushEnd);\n\n  const dataBarSel = plot.selectAll('.dataBars')\n    .data(summaryF())\n    .enter()\n    .append('rect').classed('dataBars', true)\n    .attr('x', d => xPlotScale(d.x))\n    .attr('width', d => xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\n  const brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n    .attr('transform', transform([{translate: [0, HISTOGRAM_MARGIN]}]))\n    .call(plotBrush);\n  brushSelectForBM.selectAll('rect')\n    .attr('height', plotHeight() - 2 * HISTOGRAM_MARGIN);\n\n  const xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n  const yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n  plot.append('g')\n    .attr('transform',\n      transform([{translate: [0, plotHeight() - HISTOGRAM_MARGIN]}]))\n    .classed('xAxis', true).call(xAxis);\n  const yAxisSel = plot.append('g')\n    .attr('transform', transform([{translate: [HISTOGRAM_MARGIN, 0]}]))\n    .classed('yAxis', true).call(yAxis);\n\n  const updateHeights = function(selection) {\n    selection.transition(); // cancel transition\n    selection.attr('y', d => yPlotScale(d.y));\n  };\n  const updateColors = function(selection) {\n    selection.transition(); // cancel transition\n    const extent =\n    plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n    const active = bin => bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\n    const orZero = x => Math.max(x, 0);\n    const height = plotHeight();\n    selection\n      .attr('height', d => orZero(height - HISTOGRAM_MARGIN - yPlotScale(d.y)))\n      .attr('fill', d => {\n        return active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL;\n      });\n  };\n\n  const updatePlotAttrs = function(selection) {\n    updateHeights(selection);\n    updateColors(selection);\n  };\n\n  function updatePlot(typeHint) {\n    dataBarSel.transition(); /* cancel previous transition */\n\n    typeHint = typeHint || '';\n\n    const summary = summaryF();\n    let tempSel = dataBarSel.data(summary);\n\n    if (typeHint.indexOf('stop') > -1) {\n      yPlotScale.domain(getYExtent(summary));\n      yAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n      tempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n    }\n\n    tempSel.call(updatePlotAttrs);\n  }\n\n  dataObj.addListener(updatePlot);\n\n  function setColorScale(newColorScale) {\n    colorScale = newColorScale;\n    updatePlot('stop'); /* trigger animation -- FIXME */\n  }\n\n  function getColorScale() {\n    return colorScale;\n  }\n\n  return {\n    setColorScale: setColorScale,\n    getColorScale: getColorScale,\n    brush: plotBrush,\n    sendBrushEvent: plotBrushBrush,\n    selection: brushSelectForBM,\n    updateMinMaxMarkers: updateMinMaxMarkers,\n    bins: summaryF\n  };\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","'use strict';\n\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst queue = require('d3-queue');\nconst sv = require('./synteny-vis');\nconst crossfilter = require('crossfilter');\n\nexports.makeSyntenyDotPlot = function({\n    data_url,\n    element_id,\n    genome_x,\n    genome_y\n  }) {\n  queue.queue()\n    .defer(d3.text, data_url)\n    .await(function(err, ks) {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      // Dirty hacks to make files with no ks work:\n      const have_ks = data_url.endsWith('.ks');\n      if (!have_ks) {\n        const random = () => Math.random() * 3 + 2;\n        ks = ks.split('\\n')\n          .map(x => x[0] === '#' ? x : `${random()},${random()},` + x)\n          .join('\\n');\n      }\n\n      const x_name = genome_x.name;\n      const y_name = genome_y.name;\n\n      const ksData = ksTextToObjects(ks);\n      const xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n      const yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n      const inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n      const ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n      console.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n      sv.controller(ksDataObject, element_id, {x_name, y_name, have_ks});\n    });\n};\n\nfunction ksTextToObjects(text) {\n  /* .ks files are delimited with a combination of tabs and double bars. */\n  const csvLines = text\n    .replace(/\\|\\|/g, ',')\n    .replace(/\\t/g, ',')\n    .replace(' ', '')\n    .split('\\n');\n\n  const dots = _.chain(csvLines)\n    .filter(line => line && line[0] !== '#')\n    .map(ksLineToSyntenyDot)\n    .filter(x => x)\n    .value();\n\n  const min_logks = _(dots)\n    .filter(line => isFinite(line.logks))\n    .map(line => line.logks)\n    .min();\n  const min_logkn = _(dots)\n    .filter(line => isFinite(line.logkn))\n    .map(line => line.logkn)\n    .min();\n\n  return _.map(dots, x => {\n    x.logks = isFinite(x.logks) ? x.logks : min_logks;\n    x.logkn = isFinite(x.logkn) ? x.logkn : min_logkn;\n    x.logknks = x.logkn - x.logks;\n    return x;\n  });\n}\n\nfunction ksLineToSyntenyDot(line) {\n  const fields = line.split(',');\n\n  if(fields[0] === 'NA' || fields[1] === 'NA') {\n    return undefined;\n  }\n\n  const ks = Number(fields[0]);\n  const kn = Number(fields[1]);\n  const log10 = n => Math.log(n) / Math.log(10);\n\n  return {\n    ks,\n    logks: log10(ks),\n    kn,\n    logkn: log10(kn),\n    logknks: log10(kn) - log10(ks),\n    x_chromosome_id: fields[3],\n    y_chromosome_id: fields[15],\n    x_feature_id: fields[9],\n    y_feature_id: fields[21],\n    x_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n    y_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n  };\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n  const ntLenList = _.chain(len_list)\n    .sortBy('length')\n    .reverse()\n    .reduce(function(map, kv) {\n      map[kv.name] = map.total;\n      map.total += kv.length;\n      return map;\n    }, {\n      total: 0\n    })\n    .value();\n\n  const nameLenList = _.chain(len_list)\n    .sortBy('name')\n    .reduce(function(map, kv) {\n      map[kv.name] = map.total;\n      map.total += kv.gene_count;\n      return map;\n    }, {\n      total: 0\n    })\n    .value();\n\n  const geneCounts = _.fromPairs(_.zip(\n    _.map(len_list, x => x.name),\n    _.map(len_list, x => x.gene_count)\n  ));\n\n  return {\n    nt: ntLenList,\n    name: nameLenList,\n    gene_counts: geneCounts\n  };\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n  _.each(ks, function(ksObj) {\n    var xShift = xmap.nt[ksObj.x_chromosome_id];\n    var yShift = ymap.nt[ksObj.y_chromosome_id];\n    ksObj.x_relative_offset += xShift;\n    ksObj.y_relative_offset += yShift;\n  });\n  return ks;\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n  const xmap = xmapPair.nt;\n  const ymap = ymapPair.nt;\n  const ret = {};\n\n  const cross = crossfilter(syntenyDots);\n  const cross_all = cross.dimension(x => x.logks);\n  const cross_x = cross.dimension(x => x.x_relative_offset);\n  const cross_y = cross.dimension(x => x.y_relative_offset);\n  const filters = _(['logks', 'logkn', 'logknks'])\n    .map(field => [field, cross.dimension(x => x[field])])\n    .fromPairs().value();\n\n  ret.getXLineOffsets = function() {\n    return _.chain(xmap).values().sortBy().value();\n  };\n\n  ret.getYLineOffsets = function() {\n    return _.chain(ymap).values().sortBy().value();\n  };\n\n  ret.getXLineNames = function() {\n    return filterMapForNames(xmap);\n  };\n\n  ret.getYLineNames = function() {\n    return filterMapForNames(ymap);\n  };\n\n  function filterMapForNames(map) {\n    return _.chain(map)\n      .toPairs()\n      .sortBy('1')\n      .map('0')\n      .reject(x => x === 'total')\n      .value();\n  }\n\n  ret.currentData = function currentData() {\n    return {\n      raw: syntenyDots,\n      active: cross_all.top(Infinity)\n    };\n  };\n\n  ret.currentDataSummary = function currentDataSummary(ticks, field) {\n    const group = filters[field].group(x => ticks[_.sortedIndex(ticks, x)]);\n    const dx = ticks[1] - ticks[0];\n\n    return function() {\n      const groups = group.top(Infinity);\n      const result = _.fromPairs(groups.map(x => [x.key, x.value]));\n      const zeros = _.fromPairs(ticks.map(x => [x, 0]));\n\n      return _(zeros).merge(result)\n        .toPairs().map(x => x.map(Number))\n        .map(([x, y]) => ({x, y, dx}))\n        .sortBy('x')\n        .value();\n    };\n  };\n\n  ret.addSpatialFilter = function(extents, typeHint) {\n    cross_x.filter([extents[0][0], extents[1][0]]);\n    cross_y.filter([extents[0][1], extents[1][1]]);\n    ret.notifyListeners(typeHint);\n  };\n\n  ret.removeSpatialFilter = function(typeHint) {\n    cross_x.filterAll();\n    cross_y.filterAll();\n    ret.notifyListeners(typeHint);\n  };\n\n  ret.addDataFilter = function(extent, field, typeHint) {\n    filters[field].filter(extent);\n    ret.notifyListeners(typeHint || 'data');\n  };\n\n  ret.removeDataFilter = function(field) {\n    filters[field].filterAll();\n    ret.notifyListeners('data-stop');\n  };\n\n  const listeners = [];\n  ret.addListener = function(x) {\n    listeners.push(x);\n  };\n  ret.clearListeners = function() {\n    while(listeners.length > 0) listeners.pop();\n  };\n\n  ret.notifyListeners = function(typeOfChange) {\n    _.each(listeners, function(x) {\n      x(typeOfChange);\n    });\n  };\n\n  return ret;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","'use strict';\n\nconst histogram = require('./histogram');\nconst dotplot = require('./dotplot');\nconst _ = require('lodash');\nconst d3 = require('d3');\nconst autoscale = require('./auto-colorscale');\n\nrequire('./style.css');\n\nconst {\n  RUN_BENCHMARKS,\n  SHOW_MAXIMA_AND_MINIMA\n} = require('constants');\n\nfunction buildDiv(element_id, show_histograms) {\n  const div = d3.select(element_id)\n    .append('div')\n    .classed('_synteny-dotplot-builder', true);\n\n  div.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\n  const subdiv = div.append('div').classed('dotplot', true);\n  /* pointer-events = none stops the canvas from intercepting brush events\n   * before they get to the svg element below. */\n  subdiv.append('canvas')\n    .attr('id', 'dotplot-canvas-background').classed('dotplot', true)\n    .style('pointer-events', 'none');\n  subdiv.append('canvas')\n    .attr('id', 'dotplot-canvas').classed('dotplot', true)\n    .style('pointer-events', 'none');\n\n  const histogramAndTopForm = div.append('div')\n      .attr('id', 'histogram-and-top-form', true);\n\n  const formWrapperTop = histogramAndTopForm\n      .append('div').attr('id', 'form-wrapper-top');\n  if (show_histograms) {\n    const buttonWrapper = formWrapperTop\n      .append('div')\n      .classed('histogram-button-wrapper', true);\n    buttonWrapper.append('button')\n      .classed('histogram-button', true)\n      .attr('id', 'histogram-button-left')\n      .text('<');\n    buttonWrapper.append('div')\n      .attr('id', 'histogram-button-title')\n      .append('text')\n      .attr('id', 'histogram-button-title-text');\n    buttonWrapper.append('button')\n      .classed('histogram-button', true)\n      .attr('id', 'histogram-button-right')\n      .text('>');\n  }\n\n  const histogramWrapper = histogramAndTopForm\n      .append('div').attr('id', 'histogram-wrapper');\n  histogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n  histogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n  histogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\n  const formWrapper = div.append('div').attr('id', 'form-wrapper');\n  function makeForm(title, optionId, elements, checkIndex) {\n    const navOptions = formWrapper\n      .append('div')\n      .classed('radio-button-box', true);\n    if(title) {\n      navOptions.append('text').text(title + ': ');\n    }\n\n    const navForm = navOptions.append('form').attr('id', optionId);\n    const options = navForm.selectAll('input')\n      .data(elements).enter().append('input')\n      .attr('type', 'radio').attr('name', optionId)\n      .attr('value', d => d[0]);\n\n    options.forEach(function(selection) {\n      selection.forEach(function(element, i) {\n        const label = document.createElement('label');\n        label.textContent = elements[i][1];\n        navForm.node().insertBefore(label, element);\n      });\n    });\n    options[0][checkIndex].checked = true;\n  }\n\n  if (show_histograms) {\n    const option = (value, text) => [value, text];\n\n    formWrapper.append('div')\n    .attr('id', 'form-top-label')\n    .append('strong').text('Controls');\n    makeForm('Navigation', 'mouse-options', [\n      option('brush', 'Brushing'),\n      option('pan', 'Panning')\n    ], 0);\n    formWrapper.append('div').style('height', '10');\n\n    formWrapper.append('strong').text('Color Options');\n    makeForm('Color Scale', 'color-options', [\n      option('auto', 'auto'),\n      option('rainbow_quantized', 'rainbow_quantized')\n    ], 0);\n\n    const persistenceOptions = formWrapper\n      .append('div')\n      .classed('radio-button-box', true);\n    persistenceOptions.append('text').text('Auto-scale peak threshold: ');\n\n    const initialPersistence = 50;\n    persistenceOptions\n      .append('input')\n      .attr('id', 'persistence')\n      .attr('type', 'range')\n      .attr('min', 0)\n      .attr('max', 100)\n      .attr('value', initialPersistence)\n      .attr('step', 1);\n\n    persistenceOptions\n      .append('label')\n      .attr('id', 'persistence-text')\n      .text(initialPersistence);\n  }\n\n  formWrapper.append('div').style('height', '10');\n  formWrapper.append('strong').text('Point Selection');\n  const gevoLink = formWrapper.append('div');\n  gevoLink.append('div').attr('id', 'gevo-link-xname');\n  gevoLink.append('div').attr('id', 'gevo-link-yname');\n  gevoLink\n    .append('button')\n    .attr('id', 'gevo-link')\n    .text('No Point Selected');\n}\n\nfunction controller(dataObj, element_id, meta) {\n\n  buildDiv('#' + element_id, meta.have_ks);\n\n  const refreshPlot = _.debounce(function(colorScale) {\n    syntenyPlot.setField(activeField);\n    syntenyPlot.setColorScale(colorScale);\n  }, 100);\n\n  const refreshAutoScale = _.throttle(function(persistence) {\n    const radio = document.getElementById('color-options');\n    const auto = _.find(radio.children, {value: 'auto'});\n    auto.checked = true;\n\n    const bins = histograms[activeField].bins();\n    const newAutoScale = autoscale.generateAutoScale(bins, persistence);\n\n    histograms[activeField].setColorScale(newAutoScale);\n    refreshPlot(newAutoScale);\n\n    if (SHOW_MAXIMA_AND_MINIMA)\n      _.each(histograms, h => h.updateMinMaxMarkers(persistence));\n  }, 50);\n\n  const getPersistence = () => d3.select('#persistence').node().value;\n\n  d3.select('#persistence')\n    .on('input', function() {\n      const p = getPersistence();\n      refreshAutoScale(p);\n      d3.select('#persistence-text').node().innerText = p;\n    });\n\n  /* zoom/pan switching */\n  d3.selectAll('#mouse-options input[name=mouse-options]')\n    .on('change', function() {\n      syntenyPlot.setNavMode(this.value);\n    });\n\n  /* color mode switching */\n  var activeField = 'logks';\n\n  /* Don't be cute and use fat arrow functions here. Fat arrow functions\n   * have a lexically bound \"this\" and we really really need the old \"this\"\n   * scoping, since we are getting value from a form. */\n  d3.selectAll('#color-options input[name=color-options]')\n    .on('change', function() {\n      var newCS;\n      if (this.value === 'auto') {\n        newCS = autoscale.generateAutoScale(\n          histograms[activeField].bins(), getPersistence());\n      } else {\n        newCS = colorScale(activeField, this.value);\n      }\n      histograms[activeField].setColorScale(newCS);\n      syntenyPlot.setColorScale(newCS);\n    });\n\n  const colorScale = require('colorscales').onData(dataObj.currentData().raw);\n\n  const initial = colorScale(activeField, 'rg');\n\n  if (!meta.have_ks) {\n    const scale = colorScale(activeField, 'unselected');\n    const synteny = dotplot.synteny;\n    const syntenyPlot = synteny('#dotplot', dataObj, 'logks', scale, meta);\n    return;\n  }\n\n  function getInitialColorScale(histograms) {\n    const activePlot = histograms[activeField];\n    return autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n  }\n\n  function setUpHistograms(initialCS) {\n    d3.selectAll('.histogram').classed('hidden', false);\n    const histograms = {\n      'logks': histogram.histogram('#plot', dataObj, 'logks', initialCS),\n      'logkn': histogram.histogram('#plot2', dataObj, 'logkn', initialCS),\n      'logknks': histogram.histogram('#plot3', dataObj, 'logknks', initialCS)\n    };\n    const activePlot = histograms[activeField];\n\n    const initialAutoScale = autoscale.generateAutoScale(activePlot.bins(),\n      getPersistence());\n    activePlot.setColorScale(initialAutoScale);\n\n    _(histograms)\n      .toPairs()\n      .filter(([name]) => name !== activeField)\n      .forEach(([name, plot]) => plot.setColorScale(\n        colorScale(name, 'unselected')));\n  \n    //FIXME\n    const name_map = {\n      'logks': 'plot',\n      'logkn': 'plot2',\n      'logknks': 'plot3'\n    };\n\n    var which = 0;\n    const other_smh = ['logks', 'logkn', 'logknks'];\n    const names_smh = ['plot', 'plot2', 'plot3'];\n    const scientific_names = [\n      'Synonomous - ks',\n      'Non-Synonomous - kn',\n      'Non-Synonomous / Synonomous ratio - kn/ks'\n    ];\n\n    const common = () => {\n      d3.selectAll('.histogram').classed('hidden', true);\n      d3.select('#' + names_smh[which]).classed('hidden', false);\n      activeField = other_smh[which];\n      d3.select('#histogram-button-title-text').text(scientific_names[which]);\n      refreshAutoScale(getPersistence());\n    };\n    d3.select('#histogram-button-left')\n      .on('click', () => {\n        which = (which + 2) % 3;\n        common();\n      });\n    d3.select('#histogram-button-right')\n      .on('click', () => {\n        which = (which + 1) % 3;\n        common();\n      });\n  \n    d3.selectAll('.histogram').classed('hidden', true);\n    d3.select('#' + name_map[activeField]).classed('hidden', false);\n    d3.select('#histogram-button-title-text').text(scientific_names[which]);\n  \n    // Since the histograms aren't controlling their own color scale policy \n    // now (a good thing), we need to manually fire of their update methods. \n    // Eventually, we should fix this up.\n    dataObj.addListener(function(typeHint) {\n      if (typeHint.indexOf('stop') > -1 && SHOW_MAXIMA_AND_MINIMA)\n        _.each(histograms, h => h.updateMinMaxMarkers(getPersistence()));\n    });\n    return histograms;\n  }\n\n  var histograms = setUpHistograms(initial);\n  var syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks',\n    getInitialColorScale(histograms), meta);\n  \n  dataObj.notifyListeners('initial');\n\n  // Resize the window? Tear everything out and rebuild it.\n  window.onresize = () => {\n    ['dotplot', 'plot', 'plot2', 'plot3'].forEach(id => {\n      const el = document.getElementById(id);\n      while(el.firstChild) el.removeChild(el.firstChild);\n    });\n    dataObj.clearListeners();\n    const cs = histograms[activeField].getColorScale();\n    histograms = setUpHistograms(cs);\n    syntenyPlot = dotplot.synteny('#dotplot', dataObj, activeField, cs, meta);\n  };\n\n  /* Benchmark */\n  if (RUN_BENCHMARKS) {\n    const [minLogKs, maxLogKs] = d3.extent(\n      dataObj.currentData().raw, x => x.logks);\n    const points = _.range(minLogKs, maxLogKs, (maxLogKs - minLogKs) / 10);\n\n    const rangeList = _.chain(points)\n      .map(lo => _.map(points, hi => [lo, hi]))\n      .flatten()\n      .filter(([lo, hi]) => lo < hi)\n      .value();\n\n    const asyncBenchmark = require('async-benchmark');\n    asyncBenchmark.benchmark(rangeList, function(range) {\n      histograms.logks.brush.extent(range);\n      histograms.logks.brush.event(histograms.logks.selection);\n    }, function({average, max}) {\n      alert('Average: ' + average + ', max: ' + max);\n    });\n  }\n}\n\nexports.controller = controller;\n\n// Local Variables:\n// mode: js2\n// js2-basic-offset: 8\n// End:\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/crossfilter.js\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"./crossfilter\").crossfilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/index.js\n ** module id = 15\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"._synteny-dotplot-builder{width:100%;height:100%}._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder #form-wrapper,._synteny-dotplot-builder #histogram-and-top-form,._synteny-dotplot-builder .dotplot{border:1px solid #191;border-radius:0;box-sizing:border-box}._synteny-dotplot-builder .dotplot{float:left;position:relative}._synteny-dotplot-builder .dotplot:not(#dotplot){float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:70%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder .histogram-button-wrapper{width:80%;margin-left:10%}._synteny-dotplot-builder .histogram-button{position:relative;float:left;width:10%;color:grey}._synteny-dotplot-builder #histogram-button-title{position:relative;float:left;width:80%;text-align:center}._synteny-dotplot-builder .hidden{display:none}._synteny-dotplot-builder .pressed{color:#000}._synteny-dotplot-builder #histogram-and-top-form{float:right;width:28.5%;height:65%}._synteny-dotplot-builder #histogram-wrapper{float:right;width:100%;height:90%}._synteny-dotplot-builder .histogram{position:relative;width:100%;height:100%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{margin-top:1.5%;float:right;width:28.5%;height:auto;font-size:14pt}._synteny-dotplot-builder #form-wrapper-top{float:right;width:100%;height:10%;font-size:14pt}._synteny-dotplot-builder form{display:inline}#histogram-button-left,#histogram-button-right,#histogram-button-title{margin-top:2%}#form-wrapper strong,#form-wrapper text,#gevo-link,#gevo-link-xname,#gevo-link-yname{margin-left:2%}#gevo-link{margin-bottom:2%}#form-top-label{margin-top:2%}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./src/style.css\n ** module id = 16\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 17\n ** module chunks = 0\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_queue = global.d3_queue || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"2.0.3\";\n\n  var slice = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  exports.version = version;\n  exports.queue = queue;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-queue/build/d3-queue.js\n ** module id = 18\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 19\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.css\n ** module id = 20\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 21\n ** module chunks = 0\n **/"],"sourceRoot":""}