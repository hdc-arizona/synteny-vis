{"version":3,"sources":["webpack:///synteny-dotplot-builder.js","webpack:///webpack/bootstrap ea7d0c02d13c6bfdb81d","webpack:///./src/hook.js","webpack:///./~/lodash/fp.js","webpack:///./~/d3/d3.js","webpack:///./src/constants.js","webpack:///./src/utils.js","webpack:///./src/persistence.js","webpack:///./~/svg-transform/index.js","webpack:///./src/async-benchmark.js","webpack:///./src/auto-colorscale.js","webpack:///./src/colorscales.js","webpack:///./src/dotplot.js","webpack:///./src/histogram.js","webpack:///./src/main.js","webpack:///./src/synteny-vis.js","webpack:///./~/crossfilter/crossfilter.js","webpack:///./~/crossfilter/index.js","webpack:///./src/style.css","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/d3-queue/build/d3-queue.js","webpack:///./~/lodash/fp/_baseConvert.js","webpack:///./~/lodash/fp/_mapping.js","webpack:///./~/lodash/fp/placeholder.js","webpack:///./~/lodash/lodash.min.js","webpack:///./~/style-loader/addStyles.js","webpack:///./src/style.css?2ad8","webpack:///(webpack)/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_main","window","makeSyntenyDotPlot","_","runInContext","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_zipLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","Object","defineProperty","prototype","value","enumerable","d3_Map","this","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","i","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","createElementNS","createElement","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","toLowerCase","color","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","now","d3_timer_mark","delay","d3_timer_sweep","isFinite","clearTimeout","d3_timer_timeout","d3_timer_interval","d3_timer_frame","Date","d3_timer_active","d3_timer_queueHead","t","t0","t1","time","Infinity","d3_timer_queueTail","d3_format_precision","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","transform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","count","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","transition","duration","ease","timer","elapsed","tweened","tick","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","origin","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","then","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","ROUNDING_FACTOR","RUN_BENCHMARKS","SHOW_MAXIMA_AND_MINIMA","AUTO_SCALE_VALLEY_FILL","SYNTENY_MARGIN","CIRCLE_RADIUS","UNSELECTED_DOT_FILL","NUM_COLOR_SCALE_INTERPOLATION_SAMPLES","DOTPLOT_COLOR_TRANS_LEN","MAXIMIZE_WIDTH","MIN_TEXT_GAP","GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS","HISTOGRAM_MARGIN","HISTOGRAM_Y_SCALE_TRANS_LEN","NUM_HISTOGRAM_TICKS","UNSELECTED_BAR_FILL","COLOR_RANGES","rg","quantized","rg_quantized","rainbow","rainbow_quantized","unselected","_interopRequireDefault","obj","__esModule","_fp","_fp2","_d","_d2","getComputedAttr","element","computed","samplePointsInRange","timeIt","console","simplify","dirtyPoints","persistence","removeNonExtrema","indexOfSmallestDifference","gapBetweenPoints","toRemove","here","minBy","partial","props","prop","_toConsumableArray","arr","arr2","_toArray","benchmark","testArgs","done","runOne","_ref","results","_ref2","rest","stats","arg","totalTime","average","_extends","assign","_persistence","_persistence2","_constants","generateAutoScale","extrema","generateColorScaleFromExtrema","isMaxima","shouldBeMarked","colors","colored","_utils","_utils2","onData","generateScale","colorScale","memoize","_defineProperty","configurable","writable","synteny","dataObj","initialColorScale","meta","resizeBrushBoundary","scaling","corners","vertical","horizontal","horizontalRescale","verticalRescale","_d3","drawBG","allDots","currentData","getWidth","height","getHeight","clearRect","fillStyle","xScale","x_relative_offset","yScale","y_relative_offset","fillRect","draw","elapsedMS","finalColorScale","intermediateColorScale","interpolateScales","allData","activeDots","rounded","low","val","sortedLastIndexBy","_ref4","_ref5","_slicedToArray","loIndex","hiIndex","highlighted","beginPath","strokeStyle","stroke","diff","aDomain","bDomain","setSyntenyData","setNavigationMode","originalXScale","originalYScale","updateGeVOLink","setColorScale","newColorScale","setField","getXLineOffsets","getYLineOffsets","dataAspectRatio","baseID","svgElement","getElementById","getComputedWidth","getComputedHeight","screenRatio","darknessOfTextGaps","zipWith","tail","filterTextGaps","gap","last","gap_has_elapsed","genGeVOLink","aDbId","bDbId","getSingleGeVoDescription","fetch","getGeVODescription","Promise","all","x_name","y_name","x_component","y_component","x_feature_id","y_feature_id","_ref3","makeLabels","xFilter","yFilter","tempXOffsets","xOffsets","tempYOffsets","yOffsets","tempXGaps","xMidpoints","tempYGaps","yMidpoints","xGridLines","xLabels","yGridLines","yLabels","xAxisGapsGroup","yAxisGapsGroup","xAxisLineGroup","yAxisLineGroup","tempXOffsetDarknesses","tempYOffsetDarknesses","brushGroup","_svgTransform2","addSpatialFilter","removeSpatialFilter","canvas","backCanvas","getContext","TEXT_OFFSET","TEXT_BOX_HEIGHT","midpoints","initial","xOffsetToName","zipObject","getXLineNames","xAxisBase","transformer","xAxisWrapper","yOffsetToName","getYLineNames","yAxisBase","yAxisWrapper","addListener","setNavMode","sliceIterator","_arr","_n","_e","_s","_i","Symbol","iterator","TypeError","_svgTransform","plotBrushBrush","plotBrush","addDataFilter","plotBrushEnd","removeDataFilter","notifyListeners","updateColors","dataBarSel","updateMinMaxMarkers","summary","summaryF","markers","tempSelA","plot","xPlotScale","yPlotScale","updatePlot","typeHint","tempSel","getYExtent","yAxisSel","yAxis","updatePlotAttrs","getColorScale","dataExtent","plotWidth","plotHeight","currentDataSummary","brushSelectForBM","xAxis","updateHeights","orZero","sendBrushEvent","ksTextToObjects","csvLines","dots","ksLineToSyntenyDot","min_logks","logks","min_logkn","logkn","logknks","ks","kn","log10","x_chromosome_id","y_chromosome_id","lengthsToCumulativeBPCounts","len_list","ntLenList","sortBy","kv","total","nameLenList","gene_count","geneCounts","nt","gene_counts","inlineKSData","xmap","ymap","xShift","yShift","createDataObj","syntenyDots","xmapPair","ymapPair","filterMapForNames","chain","toPairs","reject","ret","_crossfilter2","cross_all","cross_x","cross_y","filters","sortedIndex","groupList","getOr","extents","filterAll","clearListeners","typeOfChange","_d3Queue","_d3Queue2","_syntenyVis","_syntenyVis2","_crossfilter","data_url","element_id","genome_x","genome_y","defer","await","have_ks","endsWith","ksData","xCumLenMap","chromosomes","yCumLenMap","inlinedKSData","ksDataObject","controller","buildDiv","show_histograms","makeForm","title","optionId","elements","checkIndex","navOptions","formWrapper","navForm","options","label","checked","div","subdiv","histogramAndTopForm","formWrapperTop","buttonWrapper","histogramWrapper","option","persistenceOptions","initialPersistence","gevoLink","getInitialColorScale","histograms","activePlot","activeField","_autoColorscale2","getPersistence","setUpHistograms","initialCS","_histogram2","initialAutoScale","name_map","which","other_smh","names_smh","scientific_names","common","refreshAutoScale","refreshPlot","debounce","syntenyPlot","throttle","radio","auto","newAutoScale","innerText","newCS","_colorscales","_dotplot2","onresize","el","firstChild","cs","_d3$extent","_d3$extent2","minLogKs","maxLogKs","rangeList","flatMap","_ref6","_asyncBenchmark2","_ref7","alert","_histogram","_dotplot","_autoColorscale","_asyncBenchmark","crossfilter_identity","bisect_by","heap_by","heap","sift","heapselect_by","heapselect","insertionsort_by","insertionsort","quicksort_by","quicksort_sizeThreshold","quicksort","sixth","i5","i3","i2","i4","e2","e3","e4","x4","e5","x5","pivot1","pivotValue1","pivot2","pivotValue2","less","great","pivotsEqual","ek","xk","greatValue","lessValue","crossfilter_arrayUntyped","crossfilter_arrayLengthenUntyped","crossfilter_arrayWidenUntyped","crossfilter_filterExact","crossfilter_filterRange","crossfilter_filterAll","crossfilter_null","crossfilter_zero","crossfilter_reduceIncrement","crossfilter_reduceDecrement","crossfilter_reduceAdd","crossfilter_reduceSubtract","crossfilter","newData","crossfilter_arrayLengthen","dataListeners","removeData","newIndex","crossfilter_index","removed","filterListeners","removeDataListeners","preAdd","newValues","crossfilter_range","refilter","lo1","hi1","refilterFunction","one","lo0","hi0","oldValues","oldIndex","postAdd","indexListeners","reIndex","filterIndexBounds","filterIndexFunction","added","filterRange","filterFunction","filterExact","groupIncrement","groupCapacity","crossfilter_arrayWiden","groupWidth","crossfilter_capacity","g0","oldGroups","reduceAdd","reduceInitial","k0","resetNeeded","updateMany","resetMany","groupAll","updateOne","resetOne","oldK","seenGroups","filterOne","reduceRemove","reduceCount","reduceSum","orderNatural","dispose","dimensionGroups","reduceValue","crossfilter_array8","crossfilter_array16","crossfilter_array32","Uint8Array","Uint16Array","Uint32Array","constructor","item","mediaQuery","alreadyImportedModules","global","factory","Queue","_size","_call","_error","_tasks","_data","_waiting","_active","_ended","_start","poke","noabort","maybeNotify","concurrency","awaitAll","baseArity","func","baseAry","cloneArray","createCloner","wrapImmutable","cloner","baseConvert","util","castCap","config","cap","mapping","iterateeRearg","isLib","iterateeAry","castCurry","forceCurry","curry","castFixed","forceFixed","skipFixed","methodSpread","ary","spread","castRearg","rearg","forceRearg","skipRearg","methodRearg","aryRearg","cloneByPath","toPath","clone","nested","convertLib","convert","createConverter","oldOptions","newUtil","pristine","helpers","newFunc","newOptions","overArg","aliasToReal","wrapped","wrapper","wrappers","immutable","mutateMap","aryMethodKeys","aryKey","aryMethod","otherName","spreadData","afterRearg","placeholder","setPlaceholder","isObj","fallbackHolder","isFunction","iteratee","toInteger","castArray","arity","mixin","pair","nthArg","remap","realToAlias","alias","mutate","eachRight","entriesIn","extend","extendAll","extendAllWith","extendWith","conforms","__","T","allPass","always","any","anyPass","assoc","assocPath","complement","dissoc","dissocPath","dropLast","dropLastWhile","identical","indexBy","init","invertObj","juxt","omitAll","nAry","pathEq","pathOr","pickAll","pipe","pluck","propEq","propOr","symmetricDifference","symmetricDifferenceBy","symmetricDifferenceWith","takeLast","takeLastWhile","unapply","unnest","useWith","where","whereEq","zipObj","1","2","3","4","dropRightWhile","dropWhile","every","findFrom","findIndex","findIndexFrom","findKey","findLast","findLastFrom","findLastIndex","findLastIndexFrom","findLastKey","flatMapDeep","flatMapDepth","forEachRight","forIn","forInRight","forOwn","forOwnRight","mapKeys","mapValues","reduceRight","some","takeRightWhile","takeWhile","assignInAllWith","assignInWith","assignAllWith","assignWith","differenceBy","differenceWith","intersectionBy","intersectionWith","isEqualWith","isMatchWith","mergeAllWith","mergeWith","padChars","padCharsEnd","padCharsStart","pullAllBy","pullAllWith","setWith","sortedIndexBy","unionBy","unionWith","updateWith","xorBy","xorWith","assignAll","assignInAll","defaultsAll","defaultsDeepAll","invokeArgs","invokeArgsMap","mergeAll","partialRight","without","zipAll","pull","pullAll","pullAt","assignIn","defaults","defaultsDeep","unset","bindKey","curryRight","curryN","curryRightN","includesFrom","indexOfFrom","lastIndexOfFrom","propertyOf","restFrom","spreadFrom","trimChars","trimCharsEnd","trimCharsStart","flow","flowRight","difference","divide","eq","gt","gte","isEqual","lt","lte","matchesProperty","multiply","overArgs","rangeRight","subtract","zipObjectDeep","E","O","Ft","Ut","Lt","en","St","Hu","It","ou","Fi","$t","Gu","Oe","Rt","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Zt","qt","Kt","Gt","Yt","He","Fu","ge","Ye","Zu","an","ln","sn","hn","Po","pn","Br","bu","Cu","du","vn","gn","he","Wr","Pi","Er","pe","Lr","Tt","Rn","Ho","yn","Tu","bn","oo","xn","Nu","ni","jn","mn","au","An","ve","En","qo","On","Vo","Sn","nu","In","ye","Ar","Ae","Wn","Bn","Ln","Cn","jo","Un","Mn","me","We","zn","Dn","Tn","Gi","ee","ue","$n","Fn","Nn","Vu","Xu","wt","ke","Pn","Zn","qn","eu","Dt","Vn","Ou","Qn","Hn","Wu","Kn","xe","bo","Gn","Jn","Yn","Qe","ae","je","yu","Xn","Xe","fu","vu","tr","nr","fe","Sr","rr","er","ur","or","fo","ir","fr","po","mo","xo","lr","hr","pr","_r","vr","gr","No","yr","Jo","xr","thisArg","jr","wr","mr","ei","kr","Or","byteLength","ro","Ir","Rr","Cr","Ur","de","Mr","zr","Dr","Vt","Fr","Tr","gu","$r","ku","Au","Wt","Nr","ie","Xr","qr","Pr","Zr","thru","oe","Yo","be","plant","Vr","Kr","Gr","Jr","ho","Yr","Hr","su","Qr","_u","ti","ri","te","Du","hu","Ko","byteOffset","message","Fo","Co","Su","ce","le","eo","yt","co","At","ut","et","we","Ku","Ee","V","Se","Ie","Re","Be","Le","Ao","Ce","Ue","Me","ze","De","Te","$e","Zo","Fe","Ne","lu","Pe","Ze","qe","Ve","Ke","Ri","leading","maxWait","trailing","cancel","Go","Ge","cache","Cache","Je","io","tu","ru","iu","Yu","cu","uo","wu","pu","at","jt","mt","Pt","xt","xu","ju","Qo","mu","jf","kt","un","Bt","Mt","Ct","vt","Eu","Iu","Ru","Bu","Lu","cn","pick","zt","Uu","Mu","zu","$u","Pu","qu","IE_PROTO","Ju","Qu","ft","Jt","Buffer","no","getPrototypeOf","propertyIsEnumerable","isConcatSpreadable","ao","so","_o","getOwnPropertySymbols","vo","isBuffer","go","yo","wo","ko","Eo","Oo","So","Io","Ro","Wo","Bo","Lo","Uo","Mo","zo","Do","To","$o","templateSettings","escape","tt","evaluate","rt","variable","imports","hash","ArrayBuffer","resolve","Xo","pt","_t","ht","ot","it","ui","oi","ii","fi","ci","ai","li","si","vi","gi","ji","wi","mi","Ai","ki","Ei","Oi","Si","Ii","Wi","Bi","Li","Ci","Ui","Mi","zi","Di","Ti","$i","Ni","Ht","Zi","Qt","qi","Xt","Vi","tn","Ki","nn","rn","Ji","Yi","Hi","Qi","Xi","tf","nf","rf","ef","af","uf","ff","cf","lf","sf","hf","pf","_f","vf","gf","df","yf","bf","xf","wf","mf","Af","kf","Ef","Of","Sf","If","Rf","Wf","Bf","Lf","Cf","Uf","Mf","zf","Df","Tf","bindAll","chunk","compact","cond","constant","countBy","drop","dropRight","flatten","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","groupBy","invertBy","invokeMap","keyBy","keysIn","methodOf","negate","omit","omitBy","once","orderBy","over","overEvery","overSome","pickBy","sampleSize","sortedUniq","sortedUniqBy","take","takeRight","tap","toArray","toPairsIn","toPlainObject","unary","union","uniq","uniqBy","uniqWith","unzip","unzipWith","valuesIn","words","xor","attempt","camelCase","capitalize","cloneDeep","cloneDeepWith","cloneWith","conformsTo","deburr","defaultTo","escapeRegExp","ct","hasIn","head","includes","inRange","invoke","isArguments","isArrayBuffer","isArrayLike","isArrayLikeObject","isBoolean","isDate","isElement","isEmpty","isError","isInteger","isLength","isMap","isMatch","isNative","isNil","isNull","isNumber","isObject","isObjectLike","isPlainObject","isRegExp","isSafeInteger","isSet","isString","isSymbol","isTypedArray","isUndefined","isWeakMap","isWeakSet","kebabCase","lowerCase","lowerFirst","maxBy","meanBy","stubArray","stubFalse","stubObject","stubString","stubTrue","nth","noConflict","noop","padEnd","padStart","bt","Nt","repeat","sample","snakeCase","sortedIndexOf","sortedLastIndex","sortedLastIndexOf","startCase","startsWith","sumBy","Et","sourceURL","Ot","K","J","toFinite","toLength","toLower","toNumber","toSafeInteger","toUpper","trimEnd","st","trimStart","truncate","separator","omission","search","unescape","Q","fn","uniqueId","upperCase","upperFirst","VERSION","commit","toJSON","\\","'","\n","\r"," "," ","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","&","<",">","\"","`","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","addStylesToDom","styles","domStyle","stylesInDom","refs","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","insertStyleElement","styleElement","getHeadElement","lastStyleElementInsertedAtTop","styleElementsInsertedAtTop","insertAt","removeStyleElement","idx","createStyleElement","createLinkElement","linkElement","rel","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","href","applyToTag","newObj","styleSheet","cssText","replaceText","cssNode","createTextNode","encodeURIComponent","blob","oldSrc","memo","isOldIE","getElementsByTagName","newList","mayRemove","textStore","replacement","Boolean","content","locals","webpackPolyfill","deprecate"],"mappings":"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AA,aACAt0C,QAAA,UACAJ,SAAA,MAGA20C,GAAA,cACAr2D,EAAA,YACAs2D,EAAA,WACA9b,IAAA,QACA+b,QAAA,YACAC,OAAA,WACAC,IAAA,OACAC,QAAA,WACAloF,MAAA,SACAmoF,MAAA,MACAC,UAAA,MACAC,WAAA,SACAhnE,QAAA,YACAgzB,SAAA,WACAi0C,OAAA,QACAC,WAAA,QACAC,SAAA,YACAC,cAAA,iBACAxtB,OAAA,UACAytB,UAAA,KACAC,QAAA,QACAC,KAAA,UACAC,UAAA,SACAC,KAAA,OACAC,QAAA,OACAC,KAAA,MACAx+C,KAAA,MACAy+C,OAAA,kBACAC,OAAA,QACAv3B,MAAA,KACAw3B,QAAA,OACAC,KAAA,OACAC,MAAA,MACA1kB,KAAA,MACA2kB,OAAA,kBACAC,OAAA,QACA7kB,MAAA,KACA8kB,oBAAA,MACAC,sBAAA,QACAC,wBAAA,UACAC,SAAA,YACAC,cAAA,iBACAC,QAAA,OACAC,OAAA,UACAC,QAAA,WACAC,MAAA,aACAC,QAAA,UACAC,OAAA,aAIA5uF,EAAA4qF,WACAiE,GACA,gEACA,oEACA,0EACA,2EACA,wEACA,6BAEAC,GACA,0EACA,iEACA,mEACA,sEACA,yEACA,yEACA,+DACA,iEACA,uEACA,mEACA,uEACA,wEACA,mEACA,yEACA,iEACA,wEACA,qEACA,wEACA,yEACA,uEACA,6DACA,iBAEAC,GACA,oEACA,sEACA,2EACA,wEACA,iEACA,2EACA,wEACA,kDAEAC,GACA,gCAKAhvF,EAAAqpF,UACAyF,GAAA,KACAC,GAAA,OACAC,GAAA,UAIAhvF,EAAAsoF,aACA2G,eAAA,EACAC,UAAA,EACAC,MAAA,EACAjiF,OAAA,EACAqxB,KAAA,EACA6wD,SAAA,EACAC,UAAA,EACAC,cAAA,EACAC,QAAA,EACAC,SAAA,EACAC,aAAA,EACAC,cAAA,EACAC,kBAAA,EACAC,YAAA,EACAhR,QAAA,EACAiR,YAAA,EACAC,aAAA,EACAn6E,QAAA,EACAo6E,aAAA,EACAC,MAAA,EACAC,WAAA,EACAC,OAAA,EACAC,YAAA,EACA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","file":"synteny-dotplot-builder.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _main = __webpack_require__(12);\n\t\n\twindow.makeSyntenyDotPlot = _main.makeSyntenyDotPlot; // Expose our API, but not anywhere close to anything that might need to be\n\t// tested in node land.\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _ = __webpack_require__(22).runInContext();\n\tmodule.exports = __webpack_require__(19)(_, _);\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.6\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      }), center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n\t      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    format = format.toLowerCase();\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format)) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\texports.ROUNDING_FACTOR = 10;\n\t\n\texports.RUN_BENCHMARKS = false;\n\t\n\texports.SHOW_MAXIMA_AND_MINIMA = false;\n\t\n\texports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\t\n\texports.SYNTENY_MARGIN = 50;\n\texports.CIRCLE_RADIUS = 3;\n\texports.UNSELECTED_DOT_FILL = '#D0D0D0';\n\texports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\n\texports.DOTPLOT_COLOR_TRANS_LEN = 500;\n\texports.MAXIMIZE_WIDTH = true;\n\texports.MIN_TEXT_GAP = 12;\n\texports.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS = 50;\n\t\n\texports.HISTOGRAM_MARGIN = 50;\n\texports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\n\texports.NUM_HISTOGRAM_TICKS = 75;\n\texports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\t\n\texports.COLOR_RANGES = {\n\t  rg: {\n\t    range: ['red', 'green'],\n\t    quantized: false\n\t  },\n\t  rg_quantized: { /* From colorbrewer */\n\t    range: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n\t    quantized: true\n\t  },\n\t  rainbow: {\n\t    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t    quantized: false\n\t  },\n\t  rainbow_quantized: {\n\t    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n\t    quantized: true\n\t  },\n\t  unselected: {\n\t    range: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n\t    quantized: false\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.getComputedAttr = function getComputedAttr(element, attr) {\n\t  var computed = getComputedStyle(element)[attr];\n\t  return parseInt(computed, 10);\n\t};\n\t\n\texports.samplePointsInRange = function (extent, n) {\n\t  var scale = _d2.default.scale.linear().domain([0, n - 1]).range(extent);\n\t  return _fp2.default.map(scale, _fp2.default.range(0, n));\n\t};\n\t\n\texports.timeIt = function (f, name) {\n\t  return function () {\n\t    var start = Date.now();\n\t    var x = f.apply(undefined, arguments);\n\t    console.log(name, Date.now() - start);\n\t    return x;\n\t  };\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar simplify = function simplify(dirtyPoints, persistence) {\n\t  var points = removeNonExtrema(dirtyPoints);\n\t  var index = indexOfSmallestDifference(points);\n\t\n\t  if (points.length < 3 || gapBetweenPoints(points, index) > persistence) return points;\n\t\n\t  var toRemove = index === 0 ? 1 : index;\n\t  points.splice(toRemove, 1);\n\t\n\t  return simplify(points, persistence);\n\t};\n\texports.simplify = simplify;\n\t\n\tvar removeNonExtrema = function removeNonExtrema(A) {\n\t  return A.filter(function (element, index) {\n\t    if (index === 0 || index === A.length - 1) return true;\n\t\n\t    var before = A[index - 1].y;\n\t    var here = element.y;\n\t    var after = A[index + 1].y;\n\t    return here > Math.max(before, after) || here < Math.min(before, after);\n\t  });\n\t};\n\t\n\tvar gapBetweenPoints = function gapBetweenPoints(A, i) {\n\t  return Math.abs(A[i].y - A[i + 1].y);\n\t};\n\t\n\tvar indexOfSmallestDifference = function indexOfSmallestDifference(A) {\n\t  return _fp2.default.minBy(_fp2.default.partial(gapBetweenPoints, [A]), _fp2.default.range(0, A.length - 1));\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function transform(props) {\n\t  var transform = [];\n\t  if (Array.isArray(props)) {\n\t    props.forEach(function forEachAccessor(prop) {\n\t      var key = Object.keys(prop)[0];\n\t      transform.push(key + '(' + prop[key] + ')');\n\t    });\n\t  }\n\t  return transform.join(' ');\n\t};\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\t\n\t/*\n\t * I want to run a benchmark, but I don't want to block UI updates\n\t * in between iterations.\n\t *\n\t * My guess is that this isn't super accurate for fast functions.\n\t */\n\texports.benchmark = function (testArgs, f, done) {\n\t\n\t  var runOne = function runOne(_ref, results) {\n\t    var _ref2 = _toArray(_ref);\n\t\n\t    var test = _ref2[0];\n\t\n\t    var rest = _ref2.slice(1);\n\t\n\t    if (!test) {\n\t      return done(stats(results));\n\t    }\n\t\n\t    var result = timeIt(f, test);\n\t    setTimeout(runOne, 0, rest, [].concat(_toConsumableArray(results), [result]));\n\t  };\n\t  setTimeout(runOne, 0, testArgs, []);\n\t\n\t  var timeIt = function timeIt(f, arg) {\n\t    var start = Date.now();\n\t    f(arg);\n\t    return Date.now() - start;\n\t  };\n\t\n\t  var stats = function stats(times) {\n\t    return {\n\t      totalTime: _fp2.default.sum(times),\n\t      count: times.length,\n\t      max: _fp2.default.max(times),\n\t      average: _fp2.default.sum(times) / times.length\n\t    };\n\t  };\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _persistence = __webpack_require__(5);\n\t\n\tvar _persistence2 = _interopRequireDefault(_persistence);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _constants = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.generateAutoScale = function (points, persistence) {\n\t  var extrema = _persistence2.default.simplify(points, persistence);\n\t  return generateColorScaleFromExtrema(extrema);\n\t};\n\t\n\tvar isMaxima = function isMaxima(A, i) {\n\t  return A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t};\n\tvar shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t  // This is bad, but we are special casing the first maximum if it is \"big.\"\n\t  // This gives the ks == 0 spike color.\n\t  if (i == 0 && A[i].y >= _fp2.default.max(_fp2.default.map(function (x) {\n\t    return x.y;\n\t  }, A))) {\n\t    return true;\n\t  }\n\t  // common case: normal maxima\n\t  return i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t};\n\t\n\tvar generateColorScaleFromExtrema = function generateColorScaleFromExtrema(extrema) {\n\t  var colors = _d2.default.scale.category10();\n\t\n\t  var colored = extrema.map(function (x, i, A) {\n\t    var color = shouldBeMarked(x, i, A) ? colors(i) : _constants.AUTO_SCALE_VALLEY_FILL;\n\t    return _extends({}, x, { color: color });\n\t  });\n\t\n\t  var domain = _fp2.default.map(function (d) {\n\t    return d.x + d.dx / 2;\n\t  }, colored);\n\t  var range = _fp2.default.map(_fp2.default.get('color'), colored);\n\t\n\t  return _d2.default.scale.linear().domain(domain).range(range);\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _constants = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.onData = function (data) {\n\t  var generateScale = function generateScale(_ref) {\n\t    var field = _ref.field;\n\t    var name = _ref.name;\n\t\n\t    var extent = _d2.default.extent(data, function (point) {\n\t      return point[field];\n\t    });\n\t\n\t    var colorScale = _constants.COLOR_RANGES[name];\n\t    var range = colorScale.range;\n\t    var domain = _utils2.default.samplePointsInRange(extent, range.length);\n\t\n\t    if (colorScale.quantized) {\n\t      return _d2.default.scale.quantize().domain(domain).range(range);\n\t    } else {\n\t      return _d2.default.scale.linear().domain(domain).range(range);\n\t    }\n\t  };\n\t\n\t  /* _.memoize acts only on the first arg */\n\t  var m = _fp2.default.memoize(generateScale);\n\t  return function (field, name) {\n\t    return m({ field: field, name: name });\n\t  };\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _d2 = __webpack_require__(2);\n\t\n\tvar _d3 = _interopRequireDefault(_d2);\n\t\n\tvar _svgTransform = __webpack_require__(6);\n\t\n\tvar _svgTransform2 = _interopRequireDefault(_svgTransform);\n\t\n\tvar _constants = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\t\n\tfunction synteny(id, dataObj, field, initialColorScale, meta) {\n\t  var xExtent = _d3.default.extent(dataObj.getXLineOffsets());\n\t  var yExtent = _d3.default.extent(dataObj.getYLineOffsets());\n\t  var dataAspectRatio = yExtent[1] / xExtent[1];\n\t\n\t  var baseID = id.substring(1);\n\t  var svgElement = document.getElementById(baseID);\n\t\n\t  var getComputedWidth = function getComputedWidth() {\n\t    return _utils2.default.getComputedAttr(svgElement, 'width') - 2 * _constants.SYNTENY_MARGIN;\n\t  };\n\t  var getComputedHeight = function getComputedHeight() {\n\t    return _utils2.default.getComputedAttr(svgElement, 'height') - 2 * _constants.SYNTENY_MARGIN;\n\t  };\n\t\n\t  var getWidth = function getWidth() {\n\t    var screenRatio = getComputedHeight() / getComputedWidth();\n\t    if (screenRatio > dataAspectRatio) {\n\t      // We are too tall. Use the entire width.\n\t      return getComputedWidth();\n\t    } else {\n\t      // We are too wide. Only use as much width as we have height for.\n\t      return getComputedHeight() / dataAspectRatio;\n\t    }\n\t  };\n\t\n\t  var getHeight = function getHeight() {\n\t    var screenRatio = getComputedHeight() / getComputedWidth();\n\t    if (screenRatio > dataAspectRatio) {\n\t      // We are too tall. Only use as much height as we have width for.\n\t      return getComputedWidth() * dataAspectRatio;\n\t    } else {\n\t      // We are too wide. Use the entire height.\n\t      return getComputedHeight();\n\t    }\n\t  };\n\t\n\t  var xScale = _d3.default.scale.linear().domain(xExtent).range([0, getWidth()]);\n\t  var yScale = _d3.default.scale.linear().domain(yExtent).range([getHeight(), 0]);\n\t\n\t  var darknessOfTextGaps = function darknessOfTextGaps(values, scale) {\n\t    return _fp2.default.zipWith(function (a, b) {\n\t      return b ? Math.abs(scale(b) - scale(a)) : 10000;\n\t    }, values, _fp2.default.tail(values)).map(function (v) {\n\t      return v > _constants.MIN_TEXT_GAP ? 1 : v / _constants.MIN_TEXT_GAP;\n\t    }).map(function (v) {\n\t      return 255 - Math.floor(v * 256);\n\t    }).map(function (v) {\n\t      return Math.min(v, 245);\n\t    });\n\t  };\n\t\n\t  var filterTextGaps = function filterTextGaps(values, scale) {\n\t    return values.reduce(function (out, next) {\n\t      var first = out.length === 0;\n\t      var gap = Math.abs(scale(next) - scale(_fp2.default.last(out)));\n\t      var gap_has_elapsed = gap > _constants.MIN_TEXT_GAP;\n\t      if (first || gap_has_elapsed) out.push(next);\n\t      return out;\n\t    }, []);\n\t  };\n\t\n\t  var genGeVOLink = function genGeVOLink(aDbId, bDbId) {\n\t    return 'http://geco.iplantcollaborative.org/asherkhb/coge/GEvo.pl?' + ('fid1=' + aDbId + ';fid2=' + bDbId + ';apply_all=' + 50000 + ';num_seqs=' + 2);\n\t  };\n\t\n\t  var getSingleGeVoDescription = function getSingleGeVoDescription(id) {\n\t    return fetch('https://genomevolution.org/coge/api/v1/features/' + id).then(function (r) {\n\t      return r.json();\n\t    });\n\t  };\n\t\n\t  var getGeVODescription = function getGeVODescription(aDbId, bDbId) {\n\t    return Promise.all([getSingleGeVoDescription(aDbId), getSingleGeVoDescription(bDbId)]).then(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 2);\n\t\n\t      var x = _ref2[0];\n\t      var y = _ref2[1];\n\t\n\t      return { x_name: x.names.join(', '), y_name: y.names.join(', ') };\n\t    });\n\t  };\n\t\n\t  var highlighted = void 0;\n\t  var updateGeVOLink = function updateGeVOLink(x, y) {\n\t    var distance = function distance(d) {\n\t      var x_component = Math.pow(d.x_relative_offset - x, 2);\n\t      var y_component = Math.pow(d.y_relative_offset - y, 2);\n\t      return Math.sqrt(x_component + y_component);\n\t    };\n\t    var point = _fp2.default.minBy(distance, dataObj.currentData().raw);\n\t    highlighted = point;\n\t\n\t    var ratio = (xScale.range()[1] - xScale.range()[0]) / (xScale.domain()[1] - xScale.domain()[0]);\n\t    if (distance(point) * ratio < _constants.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS) {\n\t      _d3.default.select('#gevo-link').text('Compare in GEvo >>>').attr('onclick', function () {\n\t        var link = genGeVOLink(point.x_feature_id, point.y_feature_id);\n\t        return 'window.open(\\'' + link + '\\')';\n\t      });\n\t      getGeVODescription(point.x_feature_id, point.y_feature_id).then(function (_ref3) {\n\t        var x_name = _ref3.x_name;\n\t        var y_name = _ref3.y_name;\n\t\n\t        _d3.default.select('#gevo-link-xname').text(meta.x_name + ': ' + x_name);\n\t        _d3.default.select('#gevo-link-yname').text(meta.y_name + ': ' + y_name);\n\t      });\n\t    }\n\t\n\t    setSyntenyData();\n\t  };\n\t\n\t  var makeLabels = function makeLabels() {\n\t\n\t    var xFilter = function xFilter(x) {\n\t      return 0 <= xScale(x) && xScale(x) <= getWidth();\n\t    };\n\t    var yFilter = function yFilter(y) {\n\t      return 0 <= yScale(y) && yScale(y) <= getHeight();\n\t    };\n\t\n\t    var tempXOffsets = _fp2.default.filter(xFilter, xOffsets);\n\t    var tempYOffsets = _fp2.default.filter(yFilter, yOffsets);\n\t    var tempXGaps = filterTextGaps(_fp2.default.filter(xFilter, xMidpoints), xScale);\n\t    var tempYGaps = filterTextGaps(_fp2.default.filter(yFilter, yMidpoints), yScale);\n\t\n\t    xGridLines.tickValues(tempXOffsets);\n\t    xLabels.tickValues(tempXGaps);\n\t    yGridLines.tickValues(tempYOffsets);\n\t    yLabels.tickValues(tempYGaps);\n\t\n\t    xAxisGapsGroup.call(xLabels);\n\t    yAxisGapsGroup.call(yLabels);\n\t    xAxisLineGroup.call(xGridLines);\n\t    yAxisLineGroup.call(yGridLines);\n\t\n\t    var tempXOffsetDarknesses = darknessOfTextGaps(tempXOffsets, xScale);\n\t    var tempYOffsetDarknesses = darknessOfTextGaps(tempYOffsets, yScale);\n\t\n\t    xAxisLineGroup.selectAll('line').data(tempXOffsetDarknesses).style('stroke', function (d) {\n\t      return _d3.default.rgb(d, d, d);\n\t    });\n\t\n\t    yAxisLineGroup.selectAll('line').data(tempYOffsetDarknesses).style('stroke', function (d) {\n\t      return _d3.default.rgb(d, d, d);\n\t    });\n\t  };\n\t\n\t  var zoom = _d3.default.behavior.zoom().x(xScale).y(yScale).scaleExtent([1, 100]).on('zoom', function () {\n\t    var t = _d3.default.event.translate;\n\t    var s = _d3.default.event.scale;\n\t    t[0] = Math.min(0, Math.max(-getWidth() * s + getWidth(), t[0]));\n\t    t[1] = Math.min(0, Math.max(-getHeight() * s + getHeight(), t[1]));\n\t    // prevents the translate from growing large. This way, you don't \n\t    // have to \"scroll back\" onto the canvas if you pan past the edge.\n\t    zoom.translate(t);\n\t\n\t    brushGroup.attr('transform', (0, _svgTransform2.default)([{ translate: t }, { scale: s }]));\n\t\n\t    resizeBrushBoundary();\n\t    makeLabels();\n\t    drawBG();\n\t    setSyntenyData();\n\t  });\n\t\n\t  function resizeBrushBoundary() {\n\t    var scaling = zoom.scale();\n\t    var corners = ['.nw', '.ne', '.se', '.sw'];\n\t    var vertical = ['.e', '.w'];\n\t    var horizontal = ['.n', '.s'];\n\t    var horizontalRescale = corners.concat(vertical);\n\t    var verticalRescale = corners.concat(horizontal);\n\t\n\t    _fp2.default.map(function (name) {\n\t      _d3.default.select('.resize' + name).select('rect').attr('width', 6 / scaling).attr('x', -3 / scaling);\n\t    }, horizontalRescale);\n\t\n\t    _fp2.default.map(function (name) {\n\t      _d3.default.select('.resize' + name).select('rect').attr('height', 6 / scaling).attr('y', -3 / scaling);\n\t    }, verticalRescale);\n\t  }\n\t\n\t  /* We are copying the scale here because brushes do not play nice with\n\t   * zooming. All sorts of nasty things happen when the scales get changed\n\t   * underneath a brush. */\n\t  var originalXScale = xScale.copy();\n\t  var originalYScale = yScale.copy();\n\t  var brush = _d3.default.svg.brush().x(xScale.copy()).y(yScale.copy()).on('brush', function () {\n\t    if (!brush.empty()) {\n\t      dataObj.addSpatialFilter(brush.extent(), 'spatial');\n\t      resizeBrushBoundary();\n\t    }\n\t  }).on('brushend', function () {\n\t    if (brush.empty()) {\n\t      dataObj.removeSpatialFilter('spatial-stop');\n\t      var mouse = _d3.default.mouse(this);\n\t      var x = originalXScale.invert(mouse[0]);\n\t      var y = originalYScale.invert(mouse[1]);\n\t      updateGeVOLink(x, y);\n\t    } else {\n\t      dataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n\t      resizeBrushBoundary();\n\t    }\n\t  });\n\t\n\t  var canvas = _d3.default.select(id + '-canvas').attr('width', getWidth()).attr('height', getHeight()).style('left', _constants.SYNTENY_MARGIN).style('top', _constants.SYNTENY_MARGIN);\n\t\n\t  var backCanvas = _d3.default.select(id + '-canvas-background').attr('width', getWidth()).attr('height', getHeight()).style('left', _constants.SYNTENY_MARGIN).style('top', _constants.SYNTENY_MARGIN);\n\t\n\t  var context = canvas.node().getContext('2d');\n\t  var background = backCanvas.node().getContext('2d');\n\t\n\t  var svg = _d3.default.select(id);\n\t\n\t  var TEXT_OFFSET = 35;\n\t  var TEXT_BOX_HEIGHT = 25;\n\t  svg.append('text').attr('x', (getWidth() + 2 * _constants.SYNTENY_MARGIN) / 3).attr('width', (getWidth() + 2 * _constants.SYNTENY_MARGIN) / 3).attr('y', _constants.SYNTENY_MARGIN + getHeight() + TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.x_name);\n\t\n\t  svg.append('text').attr('transform', 'rotate(-90)').attr('x', -2 * (getHeight() + 2 * _constants.SYNTENY_MARGIN) / 3).attr('width', (getHeight() + 2 * _constants.SYNTENY_MARGIN) / 3).attr('y', _constants.SYNTENY_MARGIN - TEXT_OFFSET).attr('height', TEXT_BOX_HEIGHT).classed('plot-title', true).text(meta.y_name);\n\t\n\t  svg.append('defs').append('clipPath').attr('id', 'plot-clip-box').append('rect').attr('x', 0).attr('width', getWidth()).attr('y', 0).attr('height', getHeight()).attr('fill', 'black');\n\t\n\t  var midpoints = function midpoints(points) {\n\t    return _fp2.default.zipWith(function (a, b) {\n\t      return (a + b) / 2;\n\t    }, _fp2.default.initial(points), _fp2.default.tail(points));\n\t  };\n\t\n\t  var xOffsets = dataObj.getXLineOffsets();\n\t  var xMidpoints = midpoints(xOffsets);\n\t\n\t  var xOffsetToName = _fp2.default.zipObject(xMidpoints, dataObj.getXLineNames());\n\t  var xAxisBase = function xAxisBase() {\n\t    return _d3.default.svg.axis().scale(xScale).orient('bottom');\n\t  };\n\t\n\t  var xGridLines = xAxisBase().tickFormat('').tickSize(-getHeight());\n\t\n\t  var xLabels = xAxisBase().tickFormat(function (x) {\n\t    return xOffsetToName[x];\n\t  }).tickSize(0);\n\t\n\t  var transformer = (0, _svgTransform2.default)([{ translate: [_constants.SYNTENY_MARGIN, getHeight() + _constants.SYNTENY_MARGIN] }]);\n\t  var xAxisWrapper = svg.append('g').attr('transform', transformer);\n\t  var xAxisGapsGroup = xAxisWrapper.append('g');\n\t  var xAxisLineGroup = xAxisWrapper.append('g');\n\t\n\t  var yOffsets = dataObj.getYLineOffsets();\n\t  var yMidpoints = midpoints(yOffsets);\n\t\n\t  var yOffsetToName = _fp2.default.zipObject(yMidpoints, dataObj.getYLineNames());\n\t  var yAxisBase = function yAxisBase() {\n\t    return _d3.default.svg.axis().scale(yScale).orient('left');\n\t  };\n\t\n\t  var yGridLines = yAxisBase().tickFormat('').tickSize(-getWidth());\n\t\n\t  var yLabels = yAxisBase().tickFormat(function (x) {\n\t    return yOffsetToName[x];\n\t  }).tickSize(0);\n\t\n\t  var yAxisWrapper = svg.append('g').attr('transform', (0, _svgTransform2.default)([{ translate: [_constants.SYNTENY_MARGIN, _constants.SYNTENY_MARGIN] }]));\n\t  var yAxisGapsGroup = yAxisWrapper.append('g');\n\t  var yAxisLineGroup = yAxisWrapper.append('g');\n\t\n\t  makeLabels();\n\t\n\t  svg = svg.append('g').attr('transform', (0, _svgTransform2.default)([{ translate: [_constants.SYNTENY_MARGIN, _constants.SYNTENY_MARGIN] }])).append('g').attr('id', 'zoom-group').call(zoom).on('mousedown.zoom', null); //disable panning\n\t\n\t  var brushGroup = svg.append('g').attr('clip-path', 'url(#plot-clip-box)').append('g').attr('id', 'brush-group').call(brush);\n\t\n\t  var colorScale = initialColorScale;\n\t\n\t  function drawBG() {\n\t    var allDots = dataObj.currentData().raw;\n\t    var width = getWidth();\n\t    var height = getHeight();\n\t    background.clearRect(0, 0, width, height);\n\t    background.fillStyle = _constants.UNSELECTED_DOT_FILL;\n\t    _fp2.default.each(function (d) {\n\t      var cx = xScale(d.x_relative_offset);\n\t      var cy = yScale(d.y_relative_offset);\n\t\n\t      if (cx < 0 || cx > width || cy < 0 || cy > height) return;\n\t\n\t      background.fillRect(cx - _constants.CIRCLE_RADIUS, cy - _constants.CIRCLE_RADIUS, _constants.CIRCLE_RADIUS, _constants.CIRCLE_RADIUS);\n\t    }, allDots);\n\t  }\n\t\n\t  function draw(elapsedMS, initialColorScale, finalColorScale) {\n\t    var start = Date.now();\n\t\n\t    var intermediateColorScale;\n\t    var t = Math.min((_constants.DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / _constants.DOTPLOT_COLOR_TRANS_LEN, 1);\n\t    intermediateColorScale = interpolateScales(initialColorScale, finalColorScale, t);\n\t\n\t    var allData = dataObj.currentData();\n\t    var activeDots = allData.active;\n\t\n\t    //console.log('Time after collecting data', Date.now() - start);\n\t    start = Date.now();\n\t\n\t    var width = getWidth();\n\t    var height = getHeight();\n\t\n\t    context.clearRect(0, 0, width, height);\n\t\n\t    /* On top, active dots */\n\t    var groups = [];\n\t    var index = 0;\n\t\n\t    activeDots.sort(function (a, b) {\n\t      return b[field] - a[field];\n\t    });\n\t    var rounded = function rounded(x) {\n\t      return Math.floor(x[field] * _constants.ROUNDING_FACTOR) / _constants.ROUNDING_FACTOR;\n\t    };\n\t    while (index < activeDots.length) {\n\t      var low = index;\n\t      var val = rounded(activeDots[index]);\n\t      index = _fp2.default.sortedLastIndexBy(function (x) {\n\t        return -rounded(x);\n\t      }, _defineProperty({}, field, val), activeDots);\n\t      groups.push([low, index]);\n\t    }\n\t\n\t    _fp2.default.each(function (_ref4) {\n\t      var _ref5 = _slicedToArray(_ref4, 2);\n\t\n\t      var loIndex = _ref5[0];\n\t      var hiIndex = _ref5[1];\n\t\n\t      context.fillStyle = intermediateColorScale(rounded(activeDots[loIndex]));\n\t      for (var i = loIndex; i < hiIndex; i++) {\n\t        var d = activeDots[i];\n\t        var cx = xScale(d.x_relative_offset);\n\t        var cy = yScale(d.y_relative_offset);\n\t\n\t        if (cx < 0 || cx > width || cy < 0 || cy > height) continue;\n\t\n\t        context.fillRect(cx - _constants.CIRCLE_RADIUS, cy - _constants.CIRCLE_RADIUS, _constants.CIRCLE_RADIUS, _constants.CIRCLE_RADIUS);\n\t      }\n\t    }, groups);\n\t\n\t    if (highlighted) {\n\t      context.beginPath();\n\t      context.strokeStyle = 'red';\n\t      context.arc(xScale(highlighted.x_relative_offset), yScale(highlighted.y_relative_offset), 10, 0, 2 * Math.PI);\n\t      context.stroke();\n\t    }\n\t\n\t    var diff = Date.now() - start;\n\t    //console.log('Start of call to end of draw call:', diff);\n\t    if (elapsedMS > 0) {\n\t      setTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n\t    }\n\t  }\n\t\n\t  function interpolateScales(a, b, t) {\n\t    var aDomain = a.domain();\n\t    var bDomain = b.domain();\n\t    var min = Math.min(aDomain[0], bDomain[0]);\n\t    var max = Math.max(aDomain[aDomain.length - 1], bDomain[bDomain.length - 1]);\n\t    var domain = _utils2.default.samplePointsInRange([min, max + 1], _constants.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES);\n\t    var range = _fp2.default.map(function (input) {\n\t      return _d3.default.interpolateRgb(a(input), b(input))(t);\n\t    }, domain);\n\t    return _d3.default.scale.linear().domain(domain).range(range);\n\t  }\n\t\n\t  function setSyntenyData() {\n\t    draw(0, colorScale, colorScale);\n\t  }\n\t  dataObj.addListener(setSyntenyData);\n\t  drawBG();\n\t  setSyntenyData();\n\t\n\t  function setNavigationMode(mode) {\n\t    if (mode === 'pan') {\n\t      _d3.default.select(id).select('#brush-group').on('mousedown.brush', null);\n\t      _d3.default.select(id).select('#zoom-group').call(zoom);\n\t      _d3.default.select(id).select('#brush-group').style('pointer-events', null);\n\t      _d3.default.select(id).select('#zoom-group').style('pointer-events', 'all');\n\t      _d3.default.select(id).select('#brush-group').on('click', function () {\n\t        var mouse = _d3.default.mouse(this);\n\t        var x = originalXScale.invert(mouse[0]);\n\t        var y = originalYScale.invert(mouse[1]);\n\t        updateGeVOLink(x, y);\n\t      });\n\t    } else if (mode === 'brush') {\n\t      _d3.default.select(id).select('#brush-group').call(brush);\n\t      _d3.default.select(id).select('#brush-group').style('pointer-events', 'all');\n\t      _d3.default.select(id).select('#zoom-group').on('mousedown.zoom', null);\n\t    }\n\t  }\n\t\n\t  function setColorScale(newColorScale) {\n\t    draw(_constants.DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n\t    colorScale = newColorScale;\n\t  }\n\t\n\t  function setField(f) {\n\t    field = f;\n\t    setSyntenyData();\n\t  }\n\t\n\t  return {\n\t    setNavMode: setNavigationMode,\n\t    setColorScale: setColorScale,\n\t    setField: setField\n\t  };\n\t}\n\t\n\texports.synteny = synteny;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _constants = __webpack_require__(3);\n\t\n\tvar _persistence = __webpack_require__(5);\n\t\n\tvar _persistence2 = _interopRequireDefault(_persistence);\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _svgTransform = __webpack_require__(6);\n\t\n\tvar _svgTransform2 = _interopRequireDefault(_svgTransform);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction histogram(id, dataObj, field, colorScale) {\n\t  var dataExtent = _d2.default.extent(_fp2.default.map(field, dataObj.currentData().raw));\n\t\n\t  var plot = _d2.default.select(id);\n\t  var plotWidth = function plotWidth() {\n\t    return _utils2.default.getComputedAttr(document.getElementById(id.substring(1)), 'width');\n\t  };\n\t  var plotHeight = function plotHeight() {\n\t    return _utils2.default.getComputedAttr(document.getElementById(id.substring(1)), 'height');\n\t  };\n\t\n\t  function plotBrushBrush() {\n\t    if (!plotBrush.empty()) {\n\t      dataObj.addDataFilter(plotBrush.extent(), field);\n\t    }\n\t  }\n\t\n\t  function plotBrushEnd() {\n\t    if (plotBrush.empty()) {\n\t      dataObj.removeDataFilter(field);\n\t    }\n\t    dataObj.notifyListeners('histogram-stop');\n\t    updateColors(dataBarSel); // Cancel color animation -- just brushing\n\t  }\n\t\n\t  var xPlotScale = _d2.default.scale.linear().domain(dataExtent).range([_constants.HISTOGRAM_MARGIN, plotWidth() - _constants.HISTOGRAM_MARGIN]);\n\t\n\t  var bins = _utils2.default.samplePointsInRange(dataExtent, _constants.NUM_HISTOGRAM_TICKS);\n\t  var summaryF = dataObj.currentDataSummary(bins, field);\n\t  var getYExtent = function getYExtent(summary) {\n\t    return [0, 3 / 2 * _fp2.default.max(_fp2.default.map('y', summary))];\n\t  };\n\t\n\t  var yPlotScale = _d2.default.scale.linear().domain(getYExtent(summaryF())).range([plotHeight() - _constants.HISTOGRAM_MARGIN, _constants.HISTOGRAM_MARGIN]);\n\t\n\t  function updateMinMaxMarkers(persistence) {\n\t    var summary = summaryF();\n\t    var extrema = _persistence2.default.simplify(summary, persistence);\n\t\n\t    var isMaxima = function isMaxima(A, i) {\n\t      return A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n\t    };\n\t    var shouldBeMarked = function shouldBeMarked(x, i, A) {\n\t      return i > 0 && i < A.length - 1 && isMaxima(A, i);\n\t    };\n\t    var markers = _fp2.default.map(function (d, i, A) {\n\t      return {\n\t        color: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n\t        x: d.x + d.dx / 2,\n\t        y: d.y\n\t      };\n\t    }, extrema);\n\t\n\t    var tempSelA = plot.selectAll('.maxMark').data(markers);\n\t    tempSelA.exit().remove();\n\t    tempSelA.enter().append('circle').classed('maxMark', 1);\n\t    tempSelA.attr('cx', function (d) {\n\t      return xPlotScale(d.x);\n\t    }).attr('cy', function (d) {\n\t      return yPlotScale(d.y) - 5;\n\t    }).attr('r', 3).attr('fill', function (d) {\n\t      return d.color;\n\t    });\n\t  }\n\t\n\t  var plotBrush = _d2.default.svg.brush().x(xPlotScale).on('brush', plotBrushBrush).on('brushend', plotBrushEnd);\n\t\n\t  var dataBarSel = plot.selectAll('.dataBars').data(summaryF()).enter().append('rect').classed('dataBars', true).attr('x', function (d) {\n\t    return xPlotScale(d.x);\n\t  }).attr('width', function (d) {\n\t    return xPlotScale(d.x + d.dx) - xPlotScale(d.x);\n\t  });\n\t\n\t  var brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group').attr('transform', (0, _svgTransform2.default)([{ translate: [0, _constants.HISTOGRAM_MARGIN] }])).call(plotBrush);\n\t  brushSelectForBM.selectAll('rect').attr('height', plotHeight() - 2 * _constants.HISTOGRAM_MARGIN);\n\t\n\t  var xAxis = _d2.default.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n\t  var yAxis = _d2.default.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\t\n\t  plot.append('g').attr('transform', (0, _svgTransform2.default)([{ translate: [0, plotHeight() - _constants.HISTOGRAM_MARGIN] }])).classed('xAxis', true).call(xAxis);\n\t  var yAxisSel = plot.append('g').attr('transform', (0, _svgTransform2.default)([{ translate: [_constants.HISTOGRAM_MARGIN, 0] }])).classed('yAxis', true).call(yAxis);\n\t\n\t  var updateHeights = function updateHeights(selection) {\n\t    selection.transition(); // cancel transition\n\t    selection.attr('y', function (d) {\n\t      return yPlotScale(d.y);\n\t    });\n\t  };\n\t  var updateColors = function updateColors(selection) {\n\t    selection.transition(); // cancel transition\n\t    var extent = plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n\t    var active = function active(bin) {\n\t      return bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\t    };\n\t\n\t    var orZero = function orZero(x) {\n\t      return Math.max(x, 0);\n\t    };\n\t    var height = plotHeight();\n\t    selection.attr('height', function (d) {\n\t      return orZero(height - _constants.HISTOGRAM_MARGIN - yPlotScale(d.y));\n\t    }).attr('fill', function (d) {\n\t      return active(d) ? colorScale(d.x + d.dx / 2) : _constants.UNSELECTED_BAR_FILL;\n\t    });\n\t  };\n\t\n\t  var updatePlotAttrs = function updatePlotAttrs(selection) {\n\t    updateHeights(selection);\n\t    updateColors(selection);\n\t  };\n\t\n\t  function updatePlot(typeHint) {\n\t    dataBarSel.transition(); /* cancel previous transition */\n\t\n\t    typeHint = typeHint || '';\n\t\n\t    var summary = summaryF();\n\t    var tempSel = dataBarSel.data(summary);\n\t\n\t    if (typeHint.indexOf('stop') > -1) {\n\t      yPlotScale.domain(getYExtent(summary));\n\t      yAxisSel.transition().duration(_constants.HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n\t      tempSel = tempSel.transition().duration(_constants.HISTOGRAM_Y_SCALE_TRANS_LEN);\n\t    }\n\t\n\t    tempSel.call(updatePlotAttrs);\n\t  }\n\t\n\t  dataObj.addListener(updatePlot);\n\t\n\t  function setColorScale(newColorScale) {\n\t    colorScale = newColorScale;\n\t    updatePlot('stop'); /* trigger animation -- FIXME */\n\t  }\n\t\n\t  function getColorScale() {\n\t    return colorScale;\n\t  }\n\t\n\t  return {\n\t    setColorScale: setColorScale,\n\t    getColorScale: getColorScale,\n\t    brush: plotBrush,\n\t    sendBrushEvent: plotBrushBrush,\n\t    selection: brushSelectForBM,\n\t    updateMinMaxMarkers: updateMinMaxMarkers,\n\t    bins: summaryF\n\t  };\n\t}\n\t\n\texports.histogram = histogram;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _d = __webpack_require__(2);\n\t\n\tvar _d2 = _interopRequireDefault(_d);\n\t\n\tvar _d3Queue = __webpack_require__(18);\n\t\n\tvar _d3Queue2 = _interopRequireDefault(_d3Queue);\n\t\n\tvar _syntenyVis = __webpack_require__(13);\n\t\n\tvar _syntenyVis2 = _interopRequireDefault(_syntenyVis);\n\t\n\tvar _crossfilter = __webpack_require__(15);\n\t\n\tvar _crossfilter2 = _interopRequireDefault(_crossfilter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.makeSyntenyDotPlot = function (_ref) {\n\t  var data_url = _ref.data_url;\n\t  var element_id = _ref.element_id;\n\t  var genome_x = _ref.genome_x;\n\t  var genome_y = _ref.genome_y;\n\t\n\t  _d3Queue2.default.queue().defer(_d2.default.text, data_url).await(function (err, ks) {\n\t    if (err) {\n\t      console.log(err);\n\t      return;\n\t    }\n\t\n\t    // Dirty hacks to make files with no ks work:\n\t    var have_ks = data_url.endsWith('.ks');\n\t    if (!have_ks) {\n\t      (function () {\n\t        var random = function random() {\n\t          return Math.random() * 3 + 2;\n\t        };\n\t        ks = ks.split('\\n').map(function (x) {\n\t          return x[0] === '#' ? x : random() + ',' + random() + ',' + x;\n\t        }).join('\\n');\n\t      })();\n\t    }\n\t\n\t    var x_name = genome_x.name;\n\t    var y_name = genome_y.name;\n\t\n\t    var ksData = ksTextToObjects(ks);\n\t    var xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n\t    var yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n\t    var inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\t\n\t    var ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n\t    console.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n\t    _syntenyVis2.default.controller(ksDataObject, element_id, { x_name: x_name, y_name: y_name, have_ks: have_ks });\n\t  });\n\t};\n\t\n\tfunction ksTextToObjects(text) {\n\t  /* .ks files are delimited with a combination of tabs and double bars. */\n\t  var csvLines = text.replace(/\\|\\|/g, ',').replace(/\\t/g, ',').replace(' ', '').split('\\n');\n\t\n\t  var dots = (0, _fp2.default)(csvLines).filter(function (line) {\n\t    return line && line[0] !== '#';\n\t  }).map(ksLineToSyntenyDot).filter(function (x) {\n\t    return x;\n\t  }).value();\n\t\n\t  var min_logks = (0, _fp2.default)(dots).filter(function (line) {\n\t    return isFinite(line.logks);\n\t  }).map(function (line) {\n\t    return line.logks;\n\t  }).min();\n\t  var min_logkn = (0, _fp2.default)(dots).filter(function (line) {\n\t    return isFinite(line.logkn);\n\t  }).map(function (line) {\n\t    return line.logkn;\n\t  }).min();\n\t\n\t  return _fp2.default.map(function (x) {\n\t    x.logks = isFinite(x.logks) ? x.logks : min_logks;\n\t    x.logkn = isFinite(x.logkn) ? x.logkn : min_logkn;\n\t    x.logknks = x.logkn - x.logks;\n\t    return x;\n\t  }, dots);\n\t}\n\t\n\tfunction ksLineToSyntenyDot(line) {\n\t  var fields = line.split(',');\n\t\n\t  if (fields[0] === 'NA' || fields[1] === 'NA') {\n\t    return undefined;\n\t  }\n\t\n\t  var ks = Number(fields[0]);\n\t  var kn = Number(fields[1]);\n\t  var log10 = function log10(n) {\n\t    return Math.log(n) / Math.log(10);\n\t  };\n\t\n\t  return {\n\t    ks: ks,\n\t    logks: log10(ks),\n\t    kn: kn,\n\t    logkn: log10(kn),\n\t    logknks: log10(kn) - log10(ks),\n\t    x_chromosome_id: fields[3],\n\t    y_chromosome_id: fields[15],\n\t    x_feature_id: fields[9],\n\t    y_feature_id: fields[21],\n\t    x_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n\t    y_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n\t  };\n\t}\n\t\n\tfunction lengthsToCumulativeBPCounts(len_list) {\n\t  var ntLenList = (0, _fp2.default)(len_list).sortBy('length').reverse().reduce(function (map, kv) {\n\t    map[kv.name] = map.total;\n\t    map.total += kv.length;\n\t    return map;\n\t  }, {\n\t    total: 0\n\t  });\n\t\n\t  var nameLenList = (0, _fp2.default)(len_list).sortBy('name').reduce(function (map, kv) {\n\t    map[kv.name] = map.total;\n\t    map.total += kv.gene_count;\n\t    return map;\n\t  }, {\n\t    total: 0\n\t  });\n\t\n\t  var geneCounts = _fp2.default.zipObject(_fp2.default.map(_fp2.default.get('name'), len_list), _fp2.default.map(_fp2.default.get('gene_count'), len_list));\n\t\n\t  return {\n\t    nt: ntLenList,\n\t    name: nameLenList,\n\t    gene_counts: geneCounts\n\t  };\n\t}\n\t\n\t// Compute absolute BP offset from chromosome and relative offset\n\tfunction inlineKSData(ks, xmap, ymap) {\n\t  return _fp2.default.map(function (o) {\n\t    var xShift = xmap.nt[o.x_chromosome_id];\n\t    var yShift = ymap.nt[o.y_chromosome_id];\n\t    return _extends({}, o, {\n\t      x_relative_offset: o.x_relative_offset + xShift,\n\t      y_relative_offset: o.y_relative_offset + yShift\n\t    });\n\t  }, ks);\n\t}\n\t\n\tfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n\t  var xmap = xmapPair.nt;\n\t  var ymap = ymapPair.nt;\n\t  var ret = {};\n\t\n\t  var cross = (0, _crossfilter2.default)(syntenyDots);\n\t  var cross_all = cross.dimension(function (x) {\n\t    return x.logks;\n\t  });\n\t  var cross_x = cross.dimension(function (x) {\n\t    return x.x_relative_offset;\n\t  });\n\t  var cross_y = cross.dimension(function (x) {\n\t    return x.y_relative_offset;\n\t  });\n\t  var fields = ['logks', 'logkn', 'logknks'];\n\t  var filters = _fp2.default.zipObject(fields, _fp2.default.map(function (field) {\n\t    return cross.dimension(function (x) {\n\t      return x[field];\n\t    });\n\t  }, fields));\n\t\n\t  ret.getXLineOffsets = function () {\n\t    return _fp2.default.chain(xmap).values().sortBy().value();\n\t  };\n\t\n\t  ret.getYLineOffsets = function () {\n\t    return _fp2.default.chain(ymap).values().sortBy().value();\n\t  };\n\t\n\t  ret.getXLineNames = function () {\n\t    return filterMapForNames(xmap);\n\t  };\n\t\n\t  ret.getYLineNames = function () {\n\t    return filterMapForNames(ymap);\n\t  };\n\t\n\t  function filterMapForNames(map) {\n\t    return _fp2.default.chain(map).toPairs().sortBy('1').map('0').reject(function (x) {\n\t      return x === 'total';\n\t    }).value();\n\t  }\n\t\n\t  ret.currentData = function currentData() {\n\t    return {\n\t      raw: syntenyDots,\n\t      active: cross_all.top(Infinity)\n\t    };\n\t  };\n\t\n\t  ret.currentDataSummary = function currentDataSummary(ticks, field) {\n\t    var group = filters[field].group(function (x) {\n\t      return ticks[_fp2.default.sortedIndex(x, ticks)];\n\t    });\n\t    var dx = ticks[1] - ticks[0];\n\t\n\t    return function () {\n\t      var groupList = group.top(Infinity);\n\t      var groups = _fp2.default.zipObject(_fp2.default.map(_fp2.default.get('key'), groupList), _fp2.default.map(_fp2.default.get('value'), groupList));\n\t\n\t      return _fp2.default.map(function (tick) {\n\t        return {\n\t          x: Number(tick),\n\t          y: Number(_fp2.default.getOr(0, tick, groups)),\n\t          dx: dx\n\t        };\n\t      }, ticks);\n\t    };\n\t  };\n\t\n\t  ret.addSpatialFilter = function (extents, typeHint) {\n\t    cross_x.filter([extents[0][0], extents[1][0]]);\n\t    cross_y.filter([extents[0][1], extents[1][1]]);\n\t    ret.notifyListeners(typeHint);\n\t  };\n\t\n\t  ret.removeSpatialFilter = function (typeHint) {\n\t    cross_x.filterAll();\n\t    cross_y.filterAll();\n\t    ret.notifyListeners(typeHint);\n\t  };\n\t\n\t  ret.addDataFilter = function (extent, field, typeHint) {\n\t    filters[field].filter(extent);\n\t    ret.notifyListeners(typeHint || 'data');\n\t  };\n\t\n\t  ret.removeDataFilter = function (field) {\n\t    filters[field].filterAll();\n\t    ret.notifyListeners('data-stop');\n\t  };\n\t\n\t  var listeners = [];\n\t  ret.addListener = function (x) {\n\t    listeners.push(x);\n\t  };\n\t  ret.clearListeners = function () {\n\t    while (listeners.length > 0) {\n\t      listeners.pop();\n\t    }\n\t  };\n\t\n\t  ret.notifyListeners = function (typeOfChange) {\n\t    _fp2.default.each(function (f) {\n\t      return f(typeOfChange);\n\t    }, listeners);\n\t  };\n\t\n\t  return ret;\n\t}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\t\n\tvar _histogram = __webpack_require__(11);\n\t\n\tvar _histogram2 = _interopRequireDefault(_histogram);\n\t\n\tvar _dotplot = __webpack_require__(10);\n\t\n\tvar _dotplot2 = _interopRequireDefault(_dotplot);\n\t\n\tvar _fp = __webpack_require__(1);\n\t\n\tvar _fp2 = _interopRequireDefault(_fp);\n\t\n\tvar _d2 = __webpack_require__(2);\n\t\n\tvar _d3 = _interopRequireDefault(_d2);\n\t\n\tvar _autoColorscale = __webpack_require__(8);\n\t\n\tvar _autoColorscale2 = _interopRequireDefault(_autoColorscale);\n\t\n\tvar _utils = __webpack_require__(4);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _asyncBenchmark = __webpack_require__(7);\n\t\n\tvar _asyncBenchmark2 = _interopRequireDefault(_asyncBenchmark);\n\t\n\tvar _colorscales = __webpack_require__(9);\n\t\n\t__webpack_require__(24);\n\t\n\tvar _constants = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction buildDiv(element_id, show_histograms) {\n\t  var div = _d3.default.select(element_id).append('div').classed('_synteny-dotplot-builder', true);\n\t\n\t  div.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\t\n\t  var subdiv = div.append('div').classed('dotplot', true);\n\t  /* pointer-events = none stops the canvas from intercepting brush events\n\t   * before they get to the svg element below. */\n\t  subdiv.append('canvas').attr('id', 'dotplot-canvas-background').classed('dotplot', true).style('pointer-events', 'none');\n\t  subdiv.append('canvas').attr('id', 'dotplot-canvas').classed('dotplot', true).style('pointer-events', 'none');\n\t\n\t  if (show_histograms) {\n\t    var histogramAndTopForm = div.append('div').attr('id', 'histogram-and-top-form', true);\n\t\n\t    var formWrapperTop = histogramAndTopForm.append('div').attr('id', 'form-wrapper-top');\n\t    var buttonWrapper = formWrapperTop.append('div').classed('histogram-button-wrapper', true);\n\t    buttonWrapper.append('button').classed('histogram-button', true).attr('id', 'histogram-button-left').text('<');\n\t    buttonWrapper.append('div').attr('id', 'histogram-button-title').append('text').attr('id', 'histogram-button-title-text');\n\t    buttonWrapper.append('button').classed('histogram-button', true).attr('id', 'histogram-button-right').text('>');\n\t\n\t    var histogramWrapper = histogramAndTopForm.append('div').attr('id', 'histogram-wrapper');\n\t    histogramWrapper.append('svg').attr('id', 'plot').classed('histogram', true);\n\t    histogramWrapper.append('svg').attr('id', 'plot2').classed('histogram', true);\n\t    histogramWrapper.append('svg').attr('id', 'plot3').classed('histogram', true);\n\t  }\n\t\n\t  var formWrapper = div.append('div').attr('id', 'form-wrapper');\n\t  function makeForm(title, optionId, elements, checkIndex) {\n\t    var navOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t    if (title) {\n\t      navOptions.append('text').text(title + ': ');\n\t    }\n\t\n\t    var navForm = navOptions.append('form').attr('id', optionId);\n\t    var options = navForm.selectAll('input').data(elements).enter().append('input').attr('type', 'radio').attr('name', optionId).attr('value', function (d) {\n\t      return d[0];\n\t    });\n\t\n\t    options.forEach(function (selection) {\n\t      selection.forEach(function (element, i) {\n\t        var label = document.createElement('label');\n\t        label.textContent = elements[i][1];\n\t        navForm.node().insertBefore(label, element);\n\t      });\n\t    });\n\t    options[0][checkIndex].checked = true;\n\t  }\n\t\n\t  if (show_histograms) {\n\t    var option = function option(value, text) {\n\t      return [value, text];\n\t    };\n\t    formWrapper.append('div').attr('id', 'form-top-label').append('strong').text('Controls');\n\t    makeForm('Navigation', 'mouse-options', [option('brush', 'Brushing'), option('pan', 'Panning')], 0);\n\t\n\t    formWrapper.append('div').style('height', '10');\n\t\n\t    formWrapper.append('strong').text('Color Options');\n\t    makeForm('Color Scale', 'color-options', [option('auto', 'auto'), option('rainbow_quantized', 'rainbow_quantized')], 0);\n\t\n\t    var persistenceOptions = formWrapper.append('div').classed('radio-button-box', true);\n\t    persistenceOptions.append('text').text('Auto-scale peak threshold: ');\n\t\n\t    var initialPersistence = 50;\n\t    persistenceOptions.append('input').attr('id', 'persistence').attr('type', 'range').attr('min', 0).attr('max', 100).attr('value', initialPersistence).attr('step', 1);\n\t\n\t    persistenceOptions.append('label').attr('id', 'persistence-text').text(initialPersistence);\n\t  }\n\t\n\t  formWrapper.append('div').style('height', '10');\n\t  formWrapper.append('strong').text('Point Selection');\n\t  var gevoLink = formWrapper.append('div');\n\t  gevoLink.append('div').attr('id', 'gevo-link-xname');\n\t  gevoLink.append('div').attr('id', 'gevo-link-yname');\n\t  gevoLink.append('button').attr('id', 'gevo-link').text('No Point Selected');\n\t}\n\t\n\tfunction controller(dataObj, element_id, meta) {\n\t\n\t  buildDiv('#' + element_id, meta.have_ks);\n\t\n\t  var refreshPlot = _fp2.default.debounce(100, function (colorScale) {\n\t    syntenyPlot.setField(activeField);\n\t    syntenyPlot.setColorScale(colorScale);\n\t  });\n\t\n\t  var refreshAutoScale = _fp2.default.throttle(50, function (persistence) {\n\t    var radio = document.getElementById('color-options');\n\t    var auto = _fp2.default.find({ value: 'auto' }, radio.children);\n\t    auto.checked = true;\n\t\n\t    var bins = histograms[activeField].bins();\n\t    var newAutoScale = _autoColorscale2.default.generateAutoScale(bins, persistence);\n\t\n\t    histograms[activeField].setColorScale(newAutoScale);\n\t    refreshPlot(newAutoScale);\n\t\n\t    if (_constants.SHOW_MAXIMA_AND_MINIMA) _fp2.default.each(function (h) {\n\t      return h.updateMinMaxMarkers(persistence);\n\t    }, histograms);\n\t  });\n\t\n\t  var getPersistence = function getPersistence() {\n\t    return _d3.default.select('#persistence').node().value;\n\t  };\n\t\n\t  _d3.default.select('#persistence').on('input', function () {\n\t    var p = getPersistence();\n\t    refreshAutoScale(p);\n\t    _d3.default.select('#persistence-text').node().innerText = p;\n\t  });\n\t\n\t  var syntenyPlot;\n\t  /* zoom/pan switching */\n\t  _d3.default.selectAll('#mouse-options input[name=mouse-options]').on('change', function () {\n\t    syntenyPlot.setNavMode(this.value);\n\t  });\n\t\n\t  /* color mode switching */\n\t  var activeField = 'logks';\n\t\n\t  /* Don't be cute and use fat arrow functions here. Fat arrow functions\n\t   * have a lexically bound \"this\" and we really really need the old \"this\"\n\t   * scoping, since we are getting value from a form. */\n\t  _d3.default.selectAll('#color-options input[name=color-options]').on('change', function () {\n\t    var newCS;\n\t    if (this.value === 'auto') {\n\t      newCS = _autoColorscale2.default.generateAutoScale(histograms[activeField].bins(), getPersistence());\n\t    } else {\n\t      newCS = colorScale(activeField, this.value);\n\t    }\n\t    histograms[activeField].setColorScale(newCS);\n\t    syntenyPlot.setColorScale(newCS);\n\t  });\n\t\n\t  var colorScale = (0, _colorscales.onData)(dataObj.currentData().raw);\n\t\n\t  var initial = colorScale(activeField, 'rg');\n\t\n\t  if (!meta.have_ks) {\n\t    var scale = colorScale(activeField, 'unselected');\n\t    var synteny = _dotplot2.default.synteny;\n\t    syntenyPlot = synteny('#dotplot', dataObj, 'logks', scale, meta);\n\t    syntenyPlot.setNavMode('pan');\n\t    return;\n\t  }\n\t\n\t  function getInitialColorScale(histograms) {\n\t    var activePlot = histograms[activeField];\n\t    return _autoColorscale2.default.generateAutoScale(activePlot.bins(), getPersistence());\n\t  }\n\t\n\t  function setUpHistograms(initialCS) {\n\t    _d3.default.selectAll('.histogram').classed('hidden', false);\n\t    var histograms = {\n\t      'logks': _histogram2.default.histogram('#plot', dataObj, 'logks', initialCS),\n\t      'logkn': _histogram2.default.histogram('#plot2', dataObj, 'logkn', initialCS),\n\t      'logknks': _histogram2.default.histogram('#plot3', dataObj, 'logknks', initialCS)\n\t    };\n\t    var activePlot = histograms[activeField];\n\t\n\t    var initialAutoScale = _autoColorscale2.default.generateAutoScale(activePlot.bins(), getPersistence());\n\t    activePlot.setColorScale(initialAutoScale);\n\t\n\t    (0, _fp2.default)(histograms).toPairs().filter(function (_ref) {\n\t      var _ref2 = _slicedToArray(_ref, 1);\n\t\n\t      var name = _ref2[0];\n\t      return name !== activeField;\n\t    }).forEach(function (_ref3) {\n\t      var _ref4 = _slicedToArray(_ref3, 2);\n\t\n\t      var name = _ref4[0];\n\t      var plot = _ref4[1];\n\t      return plot.setColorScale(colorScale(name, 'unselected'));\n\t    });\n\t\n\t    //FIXME\n\t    var name_map = {\n\t      'logks': 'plot',\n\t      'logkn': 'plot2',\n\t      'logknks': 'plot3'\n\t    };\n\t\n\t    var which = 0;\n\t    var other_smh = ['logks', 'logkn', 'logknks'];\n\t    var names_smh = ['plot', 'plot2', 'plot3'];\n\t    var scientific_names = ['Synonomous - ks', 'Non-Synonomous - kn', 'Non-Synonomous / Synonomous ratio - kn/ks'];\n\t\n\t    var common = function common() {\n\t      _d3.default.selectAll('.histogram').classed('hidden', true);\n\t      _d3.default.select('#' + names_smh[which]).classed('hidden', false);\n\t      activeField = other_smh[which];\n\t      _d3.default.select('#histogram-button-title-text').text(scientific_names[which]);\n\t      refreshAutoScale(getPersistence());\n\t    };\n\t    _d3.default.select('#histogram-button-left').on('click', function () {\n\t      which = (which + 2) % 3;\n\t      common();\n\t    });\n\t    _d3.default.select('#histogram-button-right').on('click', function () {\n\t      which = (which + 1) % 3;\n\t      common();\n\t    });\n\t\n\t    _d3.default.selectAll('.histogram').classed('hidden', true);\n\t    _d3.default.select('#' + name_map[activeField]).classed('hidden', false);\n\t    _d3.default.select('#histogram-button-title-text').text(scientific_names[which]);\n\t\n\t    // Since the histograms aren't controlling their own color scale policy \n\t    // now (a good thing), we need to manually fire of their update methods. \n\t    // Eventually, we should fix this up.\n\t    dataObj.addListener(function (typeHint) {\n\t      if (typeHint.indexOf('stop') > -1 && _constants.SHOW_MAXIMA_AND_MINIMA) _fp2.default.each(function (h) {\n\t        return h.updateMinMaxMarkers(getPersistence());\n\t      }, histograms);\n\t    });\n\t    return histograms;\n\t  }\n\t\n\t  var histograms = setUpHistograms(initial);\n\t  syntenyPlot = _dotplot2.default.synteny('#dotplot', dataObj, 'logks', getInitialColorScale(histograms), meta);\n\t\n\t  dataObj.notifyListeners('initial');\n\t\n\t  // Resize the window? Tear everything out and rebuild it.\n\t  window.onresize = function () {\n\t    ['dotplot', 'plot', 'plot2', 'plot3'].forEach(function (id) {\n\t      var el = document.getElementById(id);\n\t      while (el.firstChild) {\n\t        el.removeChild(el.firstChild);\n\t      }\n\t    });\n\t    dataObj.clearListeners();\n\t    var cs = histograms[activeField].getColorScale();\n\t    histograms = setUpHistograms(cs);\n\t    syntenyPlot = _dotplot2.default.synteny('#dotplot', dataObj, activeField, cs, meta);\n\t  };\n\t\n\t  /* Benchmark */\n\t  if (_constants.RUN_BENCHMARKS) {\n\t    (function () {\n\t      var _d3$extent = _d3.default.extent(dataObj.currentData().raw, function (x) {\n\t        return x.logks;\n\t      });\n\t\n\t      var _d3$extent2 = _slicedToArray(_d3$extent, 2);\n\t\n\t      var minLogKs = _d3$extent2[0];\n\t      var maxLogKs = _d3$extent2[1];\n\t\n\t      var points = _utils2.default.samplePointsInRange([minLogKs, maxLogKs], 10);\n\t\n\t      var rangeList = (0, _fp2.default)(points).flatMap(function (lo) {\n\t        return _fp2.default.map(function (hi) {\n\t          return [lo, hi];\n\t        }, points);\n\t      }).filter(function (_ref5) {\n\t        var _ref6 = _slicedToArray(_ref5, 2);\n\t\n\t        var lo = _ref6[0];\n\t        var hi = _ref6[1];\n\t        return lo < hi;\n\t      }).value();\n\t\n\t      _asyncBenchmark2.default.benchmark(rangeList, function (range) {\n\t        histograms.logks.brush.extent(range);\n\t        histograms.logks.brush.event(histograms.logks.selection);\n\t      }, function (_ref7) {\n\t        var average = _ref7.average;\n\t        var max = _ref7.max;\n\t\n\t        alert('Average: ' + average + ', max: ' + max);\n\t      });\n\t    })();\n\t  }\n\t}\n\t\n\texports.controller = controller;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t(function(exports){\n\tcrossfilter.version = \"1.3.12\";\n\tfunction crossfilter_identity(d) {\n\t  return d;\n\t}\n\tcrossfilter.permute = permute;\n\t\n\tfunction permute(array, index) {\n\t  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n\t    copy[i] = array[index[i]];\n\t  }\n\t  return copy;\n\t}\n\tvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\t\n\tbisect.by = bisect_by;\n\t\n\tfunction bisect_by(f) {\n\t\n\t  // Locate the insertion point for x in a to maintain sorted order. The\n\t  // arguments lo and hi may be used to specify a subset of the array which\n\t  // should be considered; by default the entire array is used. If x is already\n\t  // present in a, the insertion point will be before (to the left of) any\n\t  // existing entries. The return value is suitable for use as the first\n\t  // argument to `array.splice` assuming that a is already sorted.\n\t  //\n\t  // The returned insertion point i partitions the array a into two halves so\n\t  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectLeft(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (f(a[mid]) < x) lo = mid + 1;\n\t      else hi = mid;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  // Similar to bisectLeft, but returns an insertion point which comes after (to\n\t  // the right of) any existing entries of x in a.\n\t  //\n\t  // The returned insertion point i partitions the array into two halves so that\n\t  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n\t  // a[i:hi] for the right side.\n\t  function bisectRight(a, x, lo, hi) {\n\t    while (lo < hi) {\n\t      var mid = lo + hi >>> 1;\n\t      if (x < f(a[mid])) hi = mid;\n\t      else lo = mid + 1;\n\t    }\n\t    return lo;\n\t  }\n\t\n\t  bisectRight.right = bisectRight;\n\t  bisectRight.left = bisectLeft;\n\t  return bisectRight;\n\t}\n\tvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\t\n\theap.by = heap_by;\n\t\n\tfunction heap_by(f) {\n\t\n\t  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n\t  // property such that the parent a[lo+i] is always less than or equal to its\n\t  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n\t  function heap(a, lo, hi) {\n\t    var n = hi - lo,\n\t        i = (n >>> 1) + 1;\n\t    while (--i > 0) sift(a, i, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n\t  // already a heap.\n\t  function sort(a, lo, hi) {\n\t    var n = hi - lo,\n\t        t;\n\t    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n\t    return a;\n\t  }\n\t\n\t  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n\t  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n\t  // incrementally, without incurring the full cost of reconstructing the heap.\n\t  function sift(a, i, n, lo) {\n\t    var d = a[--lo + i],\n\t        x = f(d),\n\t        child;\n\t    while ((child = i << 1) <= n) {\n\t      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n\t      if (x <= f(a[lo + child])) break;\n\t      a[lo + i] = a[lo + child];\n\t      i = child;\n\t    }\n\t    a[lo + i] = d;\n\t  }\n\t\n\t  heap.sort = sort;\n\t  return heap;\n\t}\n\tvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\t\n\theapselect.by = heapselect_by;\n\t\n\tfunction heapselect_by(f) {\n\t  var heap = heap_by(f);\n\t\n\t  // Returns a new array containing the top k elements in the array a[lo:hi].\n\t  // The returned array is not sorted, but maintains the heap property. If k is\n\t  // greater than hi - lo, then fewer than k elements will be returned. The\n\t  // order of elements in a is unchanged by this operation.\n\t  function heapselect(a, lo, hi, k) {\n\t    var queue = new Array(k = Math.min(hi - lo, k)),\n\t        min,\n\t        i,\n\t        x,\n\t        d;\n\t\n\t    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n\t    heap(queue, 0, k);\n\t\n\t    if (lo < hi) {\n\t      min = f(queue[0]);\n\t      do {\n\t        if (x = f(d = a[lo]) > min) {\n\t          queue[0] = d;\n\t          min = f(heap(queue, 0, k)[0]);\n\t        }\n\t      } while (++lo < hi);\n\t    }\n\t\n\t    return queue;\n\t  }\n\t\n\t  return heapselect;\n\t}\n\tvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\t\n\tinsertionsort.by = insertionsort_by;\n\t\n\tfunction insertionsort_by(f) {\n\t\n\t  function insertionsort(a, lo, hi) {\n\t    for (var i = lo + 1; i < hi; ++i) {\n\t      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n\t        a[j] = a[j - 1];\n\t      }\n\t      a[j] = t;\n\t    }\n\t    return a;\n\t  }\n\t\n\t  return insertionsort;\n\t}\n\t// Algorithm designed by Vladimir Yaroslavskiy.\n\t// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\t\n\tvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\t\n\tquicksort.by = quicksort_by;\n\t\n\tfunction quicksort_by(f) {\n\t  var insertionsort = insertionsort_by(f);\n\t\n\t  function sort(a, lo, hi) {\n\t    return (hi - lo < quicksort_sizeThreshold\n\t        ? insertionsort\n\t        : quicksort)(a, lo, hi);\n\t  }\n\t\n\t  function quicksort(a, lo, hi) {\n\t    // Compute the two pivots by looking at 5 elements.\n\t    var sixth = (hi - lo) / 6 | 0,\n\t        i1 = lo + sixth,\n\t        i5 = hi - 1 - sixth,\n\t        i3 = lo + hi - 1 >> 1,  // The midpoint.\n\t        i2 = i3 - sixth,\n\t        i4 = i3 + sixth;\n\t\n\t    var e1 = a[i1], x1 = f(e1),\n\t        e2 = a[i2], x2 = f(e2),\n\t        e3 = a[i3], x3 = f(e3),\n\t        e4 = a[i4], x4 = f(e4),\n\t        e5 = a[i5], x5 = f(e5);\n\t\n\t    var t;\n\t\n\t    // Sort the selected 5 elements using a sorting network.\n\t    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n\t    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n\t    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n\t    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n\t    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\t\n\t    var pivot1 = e2, pivotValue1 = x2,\n\t        pivot2 = e4, pivotValue2 = x4;\n\t\n\t    // e2 and e4 have been saved in the pivot variables. They will be written\n\t    // back, once the partitioning is finished.\n\t    a[i1] = e1;\n\t    a[i2] = a[lo];\n\t    a[i3] = e3;\n\t    a[i4] = a[hi - 1];\n\t    a[i5] = e5;\n\t\n\t    var less = lo + 1,   // First element in the middle partition.\n\t        great = hi - 2;  // Last element in the middle partition.\n\t\n\t    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n\t    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n\t    // with natural order (such as for Date objects), we must do two compares.\n\t    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n\t    if (pivotsEqual) {\n\t\n\t      // Degenerated case where the partitioning becomes a dutch national flag\n\t      // problem.\n\t      //\n\t      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n\t      //  ^             ^          ^             ^            ^\n\t      // left         less         k           great         right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1) for x in ]left, less[ : x < pivot.\n\t      //   2) for x in [less, k[ : x == pivot.\n\t      //   3) for x in ]great, right[ : x > pivot.\n\t      for (var k = less; k <= great; ++k) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else if (xk > pivotValue1) {\n\t\n\t          // Find the first element <= pivot in the range [k - 1, great] and\n\t          // put [:ek:] there. We know that such an element must exist:\n\t          // When k == less, then el3 (which is equal to pivot) lies in the\n\t          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n\t          // Note that in the latter case invariant 2 will be violated for a\n\t          // short amount of time. The invariant will be restored when the\n\t          // pivots are put into their final positions.\n\t          while (true) {\n\t            var greatValue = f(a[great]);\n\t            if (greatValue > pivotValue1) {\n\t              great--;\n\t              // This is the only location in the while-loop where a new\n\t              // iteration is started.\n\t              continue;\n\t            } else if (greatValue < pivotValue1) {\n\t              // Triple exchange.\n\t              a[k] = a[less];\n\t              a[less++] = a[great];\n\t              a[great--] = ek;\n\t              break;\n\t            } else {\n\t              a[k] = a[great];\n\t              a[great--] = ek;\n\t              // Note: if great < k then we will exit the outer loop and fix\n\t              // invariant 2 (which we just violated).\n\t              break;\n\t            }\n\t          }\n\t        }\n\t      }\n\t    } else {\n\t\n\t      // We partition the list into three parts:\n\t      //  1. < pivot1\n\t      //  2. >= pivot1 && <= pivot2\n\t      //  3. > pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n\t      //  ^            ^                        ^              ^             ^\n\t      // left         less                     k              great        right\n\t      //\n\t      // a[left] and a[right] are undefined and are filled after the\n\t      // partitioning.\n\t      //\n\t      // Invariants:\n\t      //   1. for x in ]left, less[ : x < pivot1\n\t      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n\t      //   3. for x in ]great, right[ : x > pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk < pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          ++less;\n\t        } else {\n\t          if (xk > pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue > pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] <= pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] >= pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // Move pivots into their final positions.\n\t    // We shrunk the list from both sides (a[left] and a[right] have\n\t    // meaningless values in them) and now we move elements from the first\n\t    // and third partition into these locations so that we can store the\n\t    // pivots.\n\t    a[lo] = a[less - 1];\n\t    a[less - 1] = pivot1;\n\t    a[hi - 1] = a[great + 1];\n\t    a[great + 1] = pivot2;\n\t\n\t    // The list is now partitioned into three partitions:\n\t    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n\t    //  ^            ^                        ^             ^\n\t    // left         less                     great        right\n\t\n\t    // Recursive descent. (Don't include the pivot values.)\n\t    sort(a, lo, less - 1);\n\t    sort(a, great + 2, hi);\n\t\n\t    if (pivotsEqual) {\n\t      // All elements in the second partition are equal to the pivot. No\n\t      // need to sort them.\n\t      return a;\n\t    }\n\t\n\t    // In theory it should be enough to call _doSort recursively on the second\n\t    // partition.\n\t    // The Android source however removes the pivot elements from the recursive\n\t    // call if the second partition is too large (more than 2/3 of the list).\n\t    if (less < i1 && great > i5) {\n\t      var lessValue, greatValue;\n\t      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n\t      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\t\n\t      // Copy paste of the previous 3-way partitioning with adaptions.\n\t      //\n\t      // We partition the list into three parts:\n\t      //  1. == pivot1\n\t      //  2. > pivot1 && < pivot2\n\t      //  3. == pivot2\n\t      //\n\t      // During the loop we have:\n\t      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n\t      //              ^                      ^              ^\n\t      //            less                     k              great\n\t      //\n\t      // Invariants:\n\t      //   1. for x in [ *, less[ : x == pivot1\n\t      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n\t      //   3. for x in ]great, * ] : x == pivot2\n\t      for (var k = less; k <= great; k++) {\n\t        var ek = a[k], xk = f(ek);\n\t        if (xk <= pivotValue1 && xk >= pivotValue1) {\n\t          if (k !== less) {\n\t            a[k] = a[less];\n\t            a[less] = ek;\n\t          }\n\t          less++;\n\t        } else {\n\t          if (xk <= pivotValue2 && xk >= pivotValue2) {\n\t            while (true) {\n\t              var greatValue = f(a[great]);\n\t              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n\t                great--;\n\t                if (great < k) break;\n\t                // This is the only location inside the loop where a new\n\t                // iteration is started.\n\t                continue;\n\t              } else {\n\t                // a[great] < pivot2.\n\t                if (greatValue < pivotValue1) {\n\t                  // Triple exchange.\n\t                  a[k] = a[less];\n\t                  a[less++] = a[great];\n\t                  a[great--] = ek;\n\t                } else {\n\t                  // a[great] == pivot1.\n\t                  a[k] = a[great];\n\t                  a[great--] = ek;\n\t                }\n\t                break;\n\t              }\n\t            }\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    // The second partition has now been cleared of pivot elements and looks\n\t    // as follows:\n\t    // [  *  |  > pivot1 && < pivot2  | * ]\n\t    //        ^                      ^\n\t    //       less                  great\n\t    // Sort the second partition using recursive descent.\n\t\n\t    // The second partition looks as follows:\n\t    // [  *  |  >= pivot1 && <= pivot2  | * ]\n\t    //        ^                        ^\n\t    //       less                    great\n\t    // Simply sort it by recursive descent.\n\t\n\t    return sort(a, less, great + 1);\n\t  }\n\t\n\t  return sort;\n\t}\n\t\n\tvar quicksort_sizeThreshold = 32;\n\tvar crossfilter_array8 = crossfilter_arrayUntyped,\n\t    crossfilter_array16 = crossfilter_arrayUntyped,\n\t    crossfilter_array32 = crossfilter_arrayUntyped,\n\t    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n\t    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\t\n\tif (typeof Uint8Array !== \"undefined\") {\n\t  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n\t  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n\t  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\t\n\t  crossfilter_arrayLengthen = function(array, length) {\n\t    if (array.length >= length) return array;\n\t    var copy = new array.constructor(length);\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t\n\t  crossfilter_arrayWiden = function(array, width) {\n\t    var copy;\n\t    switch (width) {\n\t      case 16: copy = crossfilter_array16(array.length); break;\n\t      case 32: copy = crossfilter_array32(array.length); break;\n\t      default: throw new Error(\"invalid array width!\");\n\t    }\n\t    copy.set(array);\n\t    return copy;\n\t  };\n\t}\n\t\n\tfunction crossfilter_arrayUntyped(n) {\n\t  var array = new Array(n), i = -1;\n\t  while (++i < n) array[i] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayLengthenUntyped(array, length) {\n\t  var n = array.length;\n\t  while (n < length) array[n++] = 0;\n\t  return array;\n\t}\n\t\n\tfunction crossfilter_arrayWidenUntyped(array, width) {\n\t  if (width > 32) throw new Error(\"invalid array width!\");\n\t  return array;\n\t}\n\tfunction crossfilter_filterExact(bisect, value) {\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterRange(bisect, range) {\n\t  var min = range[0],\n\t      max = range[1];\n\t  return function(values) {\n\t    var n = values.length;\n\t    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n\t  };\n\t}\n\t\n\tfunction crossfilter_filterAll(values) {\n\t  return [0, values.length];\n\t}\n\tfunction crossfilter_null() {\n\t  return null;\n\t}\n\tfunction crossfilter_zero() {\n\t  return 0;\n\t}\n\tfunction crossfilter_reduceIncrement(p) {\n\t  return p + 1;\n\t}\n\t\n\tfunction crossfilter_reduceDecrement(p) {\n\t  return p - 1;\n\t}\n\t\n\tfunction crossfilter_reduceAdd(f) {\n\t  return function(p, v) {\n\t    return p + +f(v);\n\t  };\n\t}\n\t\n\tfunction crossfilter_reduceSubtract(f) {\n\t  return function(p, v) {\n\t    return p - f(v);\n\t  };\n\t}\n\texports.crossfilter = crossfilter;\n\t\n\tfunction crossfilter() {\n\t  var crossfilter = {\n\t    add: add,\n\t    remove: removeData,\n\t    dimension: dimension,\n\t    groupAll: groupAll,\n\t    size: size\n\t  };\n\t\n\t  var data = [], // the records\n\t      n = 0, // the number of records; data.length\n\t      m = 0, // a bit mask representing which dimensions are in use\n\t      M = 8, // number of dimensions that can fit in `filters`\n\t      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n\t      filterListeners = [], // when the filters change\n\t      dataListeners = [], // when data is added\n\t      removeDataListeners = []; // when data is removed\n\t\n\t  // Adds the specified new records to this crossfilter.\n\t  function add(newData) {\n\t    var n0 = n,\n\t        n1 = newData.length;\n\t\n\t    // If there's actually new data to add…\n\t    // Merge the new data into the existing data.\n\t    // Lengthen the filter bitset to handle the new records.\n\t    // Notify listeners (dimensions and groups) that new data is available.\n\t    if (n1) {\n\t      data = data.concat(newData);\n\t      filters = crossfilter_arrayLengthen(filters, n += n1);\n\t      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n\t    }\n\t\n\t    return crossfilter;\n\t  }\n\t\n\t  // Removes all records that match the current filters.\n\t  function removeData() {\n\t    var newIndex = crossfilter_index(n, n),\n\t        removed = [];\n\t    for (var i = 0, j = 0; i < n; ++i) {\n\t      if (filters[i]) newIndex[i] = j++;\n\t      else removed.push(i);\n\t    }\n\t\n\t    // Remove all matching records from groups.\n\t    filterListeners.forEach(function(l) { l(0, [], removed); });\n\t\n\t    // Update indexes.\n\t    removeDataListeners.forEach(function(l) { l(newIndex); });\n\t\n\t    // Remove old filters and data by overwriting.\n\t    for (var i = 0, j = 0, k; i < n; ++i) {\n\t      if (k = filters[i]) {\n\t        if (i !== j) filters[j] = k, data[j] = data[i];\n\t        ++j;\n\t      }\n\t    }\n\t    data.length = j;\n\t    while (n > j) filters[--n] = 0;\n\t  }\n\t\n\t  // Adds a new dimension with the specified value accessor function.\n\t  function dimension(value) {\n\t    var dimension = {\n\t      filter: filter,\n\t      filterExact: filterExact,\n\t      filterRange: filterRange,\n\t      filterFunction: filterFunction,\n\t      filterAll: filterAll,\n\t      top: top,\n\t      bottom: bottom,\n\t      group: group,\n\t      groupAll: groupAll,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n\t        zero = ~one, // inverted one, e.g., 11110111\n\t        values, // sorted, cached array\n\t        index, // value rank ↦ object id\n\t        newValues, // temporary array storing newly-added values\n\t        newIndex, // temporary array storing newly-added index\n\t        sort = quicksort_by(function(i) { return newValues[i]; }),\n\t        refilter = crossfilter_filterAll, // for recomputing filter\n\t        refilterFunction, // the custom filter function in use\n\t        indexListeners = [], // when data is added\n\t        dimensionGroups = [],\n\t        lo0 = 0,\n\t        hi0 = 0;\n\t\n\t    // Updating a dimension is a two-stage process. First, we must update the\n\t    // associated filters for the newly-added records. Once all dimensions have\n\t    // updated their filters, the groups are notified to update.\n\t    dataListeners.unshift(preAdd);\n\t    dataListeners.push(postAdd);\n\t\n\t    removeDataListeners.push(removeData);\n\t\n\t    // Incorporate any existing data into this dimension, and make sure that the\n\t    // filter bitset is wide enough to handle the new dimension.\n\t    m |= one;\n\t    if (M >= 32 ? !one : m & -(1 << M)) {\n\t      filters = crossfilter_arrayWiden(filters, M <<= 1);\n\t    }\n\t    preAdd(data, 0, n);\n\t    postAdd(data, 0, n);\n\t\n\t    // Incorporates the specified new records into this dimension.\n\t    // This function is responsible for updating filters, values, and index.\n\t    function preAdd(newData, n0, n1) {\n\t\n\t      // Permute new values into natural order using a sorted index.\n\t      newValues = newData.map(value);\n\t      newIndex = sort(crossfilter_range(n1), 0, n1);\n\t      newValues = permute(newValues, newIndex);\n\t\n\t      // Bisect newValues to determine which new records are selected.\n\t      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n\t      if (refilterFunction) {\n\t        for (i = 0; i < n1; ++i) {\n\t          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n\t        }\n\t      } else {\n\t        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n\t        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n\t      }\n\t\n\t      // If this dimension previously had no data, then we don't need to do the\n\t      // more expensive merge operation; use the new values and index as-is.\n\t      if (!n0) {\n\t        values = newValues;\n\t        index = newIndex;\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return;\n\t      }\n\t\n\t      var oldValues = values,\n\t          oldIndex = index,\n\t          i0 = 0,\n\t          i1 = 0;\n\t\n\t      // Otherwise, create new arrays into which to merge new and old.\n\t      values = new Array(n);\n\t      index = crossfilter_index(n, n);\n\t\n\t      // Merge the old and new sorted values, and old and new index.\n\t      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n\t        if (oldValues[i0] < newValues[i1]) {\n\t          values[i] = oldValues[i0];\n\t          index[i] = oldIndex[i0++];\n\t        } else {\n\t          values[i] = newValues[i1];\n\t          index[i] = newIndex[i1++] + n0;\n\t        }\n\t      }\n\t\n\t      // Add any remaining old values.\n\t      for (; i0 < n0; ++i0, ++i) {\n\t        values[i] = oldValues[i0];\n\t        index[i] = oldIndex[i0];\n\t      }\n\t\n\t      // Add any remaining new values.\n\t      for (; i1 < n1; ++i1, ++i) {\n\t        values[i] = newValues[i1];\n\t        index[i] = newIndex[i1] + n0;\n\t      }\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // When all filters have updated, notify index listeners of the new values.\n\t    function postAdd(newData, n0, n1) {\n\t      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n\t      newValues = newIndex = null;\n\t    }\n\t\n\t    function removeData(reIndex) {\n\t      for (var i = 0, j = 0, k; i < n; ++i) {\n\t        if (filters[k = index[i]]) {\n\t          if (i !== j) values[j] = values[i];\n\t          index[j] = reIndex[k];\n\t          ++j;\n\t        }\n\t      }\n\t      values.length = j;\n\t      while (j < n) index[j++] = 0;\n\t\n\t      // Bisect again to recompute lo0 and hi0.\n\t      var bounds = refilter(values);\n\t      lo0 = bounds[0], hi0 = bounds[1];\n\t    }\n\t\n\t    // Updates the selected values based on the specified bounds [lo, hi].\n\t    // This implementation is used by all the public filter methods.\n\t    function filterIndexBounds(bounds) {\n\t      var lo1 = bounds[0],\n\t          hi1 = bounds[1];\n\t\n\t      if (refilterFunction) {\n\t        refilterFunction = null;\n\t        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n\t        lo0 = lo1;\n\t        hi0 = hi1;\n\t        return dimension;\n\t      }\n\t\n\t      var i,\n\t          j,\n\t          k,\n\t          added = [],\n\t          removed = [];\n\t\n\t      // Fast incremental update based on previous lo index.\n\t      if (lo1 < lo0) {\n\t        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (lo1 > lo0) {\n\t        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      // Fast incremental update based on previous hi index.\n\t      if (hi1 > hi0) {\n\t        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          added.push(k);\n\t        }\n\t      } else if (hi1 < hi0) {\n\t        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n\t          filters[k = index[i]] ^= one;\n\t          removed.push(k);\n\t        }\n\t      }\n\t\n\t      lo0 = lo1;\n\t      hi0 = hi1;\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t      return dimension;\n\t    }\n\t\n\t    // Filters this dimension using the specified range, value, or null.\n\t    // If the range is null, this is equivalent to filterAll.\n\t    // If the range is an array, this is equivalent to filterRange.\n\t    // Otherwise, this is equivalent to filterExact.\n\t    function filter(range) {\n\t      return range == null\n\t          ? filterAll() : Array.isArray(range)\n\t          ? filterRange(range) : typeof range === \"function\"\n\t          ? filterFunction(range)\n\t          : filterExact(range);\n\t    }\n\t\n\t    // Filters this dimension to select the exact value.\n\t    function filterExact(value) {\n\t      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n\t    }\n\t\n\t    // Filters this dimension to select the specified range [lo, hi].\n\t    // The lower bound is inclusive, and the upper bound is exclusive.\n\t    function filterRange(range) {\n\t      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n\t    }\n\t\n\t    // Clears any filters on this dimension.\n\t    function filterAll() {\n\t      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n\t    }\n\t\n\t    // Filters this dimension using an arbitrary function.\n\t    function filterFunction(f) {\n\t      refilter = crossfilter_filterAll;\n\t\n\t      filterIndexFunction(refilterFunction = f);\n\t\n\t      lo0 = 0;\n\t      hi0 = n;\n\t\n\t      return dimension;\n\t    }\n\t\n\t    function filterIndexFunction(f) {\n\t      var i,\n\t          k,\n\t          x,\n\t          added = [],\n\t          removed = [];\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n\t          if (x) filters[k] &= zero, added.push(k);\n\t          else filters[k] |= one, removed.push(k);\n\t        }\n\t      }\n\t      filterListeners.forEach(function(l) { l(one, added, removed); });\n\t    }\n\t\n\t    // Returns the top K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function top(k) {\n\t      var array = [],\n\t          i = hi0,\n\t          j;\n\t\n\t      while (--i >= lo0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Returns the bottom K selected records based on this dimension's order.\n\t    // Note: observes this dimension's filter, unlike group and groupAll.\n\t    function bottom(k) {\n\t      var array = [],\n\t          i = lo0,\n\t          j;\n\t\n\t      while (i < hi0 && k > 0) {\n\t        if (!filters[j = index[i]]) {\n\t          array.push(data[j]);\n\t          --k;\n\t        }\n\t        i++;\n\t      }\n\t\n\t      return array;\n\t    }\n\t\n\t    // Adds a new group to this dimension, using the specified key function.\n\t    function group(key) {\n\t      var group = {\n\t        top: top,\n\t        all: all,\n\t        reduce: reduce,\n\t        reduceCount: reduceCount,\n\t        reduceSum: reduceSum,\n\t        order: order,\n\t        orderNatural: orderNatural,\n\t        size: size,\n\t        dispose: dispose,\n\t        remove: dispose // for backwards-compatibility\n\t      };\n\t\n\t      // Ensure that this group will be removed when the dimension is removed.\n\t      dimensionGroups.push(group);\n\t\n\t      var groups, // array of {key, value}\n\t          groupIndex, // object id ↦ group id\n\t          groupWidth = 8,\n\t          groupCapacity = crossfilter_capacity(groupWidth),\n\t          k = 0, // cardinality\n\t          select,\n\t          heap,\n\t          reduceAdd,\n\t          reduceRemove,\n\t          reduceInitial,\n\t          update = crossfilter_null,\n\t          reset = crossfilter_null,\n\t          resetNeeded = true,\n\t          groupAll = key === crossfilter_null;\n\t\n\t      if (arguments.length < 1) key = crossfilter_identity;\n\t\n\t      // The group listens to the crossfilter for when any dimension changes, so\n\t      // that it can update the associated reduce values. It must also listen to\n\t      // the parent dimension for when data is added, and compute new keys.\n\t      filterListeners.push(update);\n\t      indexListeners.push(add);\n\t      removeDataListeners.push(removeData);\n\t\n\t      // Incorporate any existing data into the grouping.\n\t      add(values, index, 0, n);\n\t\n\t      // Incorporates the specified new values into this group.\n\t      // This function is responsible for updating groups and groupIndex.\n\t      function add(newValues, newIndex, n0, n1) {\n\t        var oldGroups = groups,\n\t            reIndex = crossfilter_index(k, groupCapacity),\n\t            add = reduceAdd,\n\t            initial = reduceInitial,\n\t            k0 = k, // old cardinality\n\t            i0 = 0, // index of old group\n\t            i1 = 0, // index of new record\n\t            j, // object id\n\t            g0, // old group\n\t            x0, // old key\n\t            x1, // new key\n\t            g, // group to add\n\t            x; // key of group to add\n\t\n\t        // If a reset is needed, we don't need to update the reduce values.\n\t        if (resetNeeded) add = initial = crossfilter_null;\n\t\n\t        // Reset the new groups (k is a lower bound).\n\t        // Also, make sure that groupIndex exists and is long enough.\n\t        groups = new Array(k), k = 0;\n\t        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\t\n\t        // Get the first old key (x0 of g0), if it exists.\n\t        if (k0) x0 = (g0 = oldGroups[0]).key;\n\t\n\t        // Find the first new key (x1), skipping NaN keys.\n\t        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\t\n\t        // While new keys remain…\n\t        while (i1 < n1) {\n\t\n\t          // Determine the lesser of the two current keys; new and old.\n\t          // If there are no old keys remaining, then always add the new key.\n\t          if (g0 && x0 <= x1) {\n\t            g = g0, x = x0;\n\t\n\t            // Record the new index of the old group.\n\t            reIndex[i0] = k;\n\t\n\t            // Retrieve the next old key.\n\t            if (g0 = oldGroups[++i0]) x0 = g0.key;\n\t          } else {\n\t            g = {key: x1, value: initial()}, x = x1;\n\t          }\n\t\n\t          // Add the lesser group.\n\t          groups[k] = g;\n\t\n\t          // Add any selected records belonging to the added group, while\n\t          // advancing the new key and populating the associated group index.\n\t          while (!(x1 > x)) {\n\t            groupIndex[j = newIndex[i1] + n0] = k;\n\t            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n\t            if (++i1 >= n1) break;\n\t            x1 = key(newValues[i1]);\n\t          }\n\t\n\t          groupIncrement();\n\t        }\n\t\n\t        // Add any remaining old groups that were greater than all new keys.\n\t        // No incremental reduce is needed; these groups have no new records.\n\t        // Also record the new index of the old group.\n\t        while (i0 < k0) {\n\t          groups[reIndex[i0] = k] = oldGroups[i0++];\n\t          groupIncrement();\n\t        }\n\t\n\t        // If we added any new groups before any old groups,\n\t        // update the group index of all the old records.\n\t        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n\t          groupIndex[i0] = reIndex[groupIndex[i0]];\n\t        }\n\t\n\t        // Modify the update and reset behavior based on the cardinality.\n\t        // If the cardinality is less than or equal to one, then the groupIndex\n\t        // is not needed. If the cardinality is zero, then there are no records\n\t        // and therefore no groups to update or reset. Note that we also must\n\t        // change the registered listener to point to the new method.\n\t        j = filterListeners.indexOf(update);\n\t        if (k > 1) {\n\t          update = updateMany;\n\t          reset = resetMany;\n\t        } else {\n\t          if (!k && groupAll) {\n\t            k = 1;\n\t            groups = [{key: null, value: initial()}];\n\t          }\n\t          if (k === 1) {\n\t            update = updateOne;\n\t            reset = resetOne;\n\t          } else {\n\t            update = crossfilter_null;\n\t            reset = crossfilter_null;\n\t          }\n\t          groupIndex = null;\n\t        }\n\t        filterListeners[j] = update;\n\t\n\t        // Count the number of added groups,\n\t        // and widen the group index as needed.\n\t        function groupIncrement() {\n\t          if (++k === groupCapacity) {\n\t            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n\t            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n\t            groupCapacity = crossfilter_capacity(groupWidth);\n\t          }\n\t        }\n\t      }\n\t\n\t      function removeData() {\n\t        if (k > 1) {\n\t          var oldK = k,\n\t              oldGroups = groups,\n\t              seenGroups = crossfilter_index(oldK, oldK);\n\t\n\t          // Filter out non-matches by copying matching group index entries to\n\t          // the beginning of the array.\n\t          for (var i = 0, j = 0; i < n; ++i) {\n\t            if (filters[i]) {\n\t              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n\t              ++j;\n\t            }\n\t          }\n\t\n\t          // Reassemble groups including only those groups that were referred\n\t          // to by matching group index entries.  Note the new group index in\n\t          // seenGroups.\n\t          groups = [], k = 0;\n\t          for (i = 0; i < oldK; ++i) {\n\t            if (seenGroups[i]) {\n\t              seenGroups[i] = k++;\n\t              groups.push(oldGroups[i]);\n\t            }\n\t          }\n\t\n\t          if (k > 1) {\n\t            // Reindex the group index using seenGroups to find the new index.\n\t            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n\t          } else {\n\t            groupIndex = null;\n\t          }\n\t          filterListeners[filterListeners.indexOf(update)] = k > 1\n\t              ? (reset = resetMany, update = updateMany)\n\t              : k === 1 ? (reset = resetOne, update = updateOne)\n\t              : reset = update = crossfilter_null;\n\t        } else if (k === 1) {\n\t          if (groupAll) return;\n\t          for (var i = 0; i < n; ++i) if (filters[i]) return;\n\t          groups = [], k = 0;\n\t          filterListeners[filterListeners.indexOf(update)] =\n\t          update = reset = crossfilter_null;\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function updateMany(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g;\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g = groups[groupIndex[k]];\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Reduces the specified selected or deselected records.\n\t      // This function is only used when the cardinality is 1.\n\t      function updateOne(filterOne, added, removed) {\n\t        if (filterOne === one || resetNeeded) return;\n\t\n\t        var i,\n\t            k,\n\t            n,\n\t            g = groups[0];\n\t\n\t        // Add the added values.\n\t        for (i = 0, n = added.length; i < n; ++i) {\n\t          if (!(filters[k = added[i]] & zero)) {\n\t            g.value = reduceAdd(g.value, data[k]);\n\t          }\n\t        }\n\t\n\t        // Remove the removed values.\n\t        for (i = 0, n = removed.length; i < n; ++i) {\n\t          if ((filters[k = removed[i]] & zero) === filterOne) {\n\t            g.value = reduceRemove(g.value, data[k]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is greater than 1.\n\t      function resetMany() {\n\t        var i,\n\t            g;\n\t\n\t        // Reset all group values.\n\t        for (i = 0; i < k; ++i) {\n\t          groups[i].value = reduceInitial();\n\t        }\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g = groups[groupIndex[i]];\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Recomputes the group reduce values from scratch.\n\t      // This function is only used when the cardinality is 1.\n\t      function resetOne() {\n\t        var i,\n\t            g = groups[0];\n\t\n\t        // Reset the singleton group values.\n\t        g.value = reduceInitial();\n\t\n\t        // Add any selected records.\n\t        for (i = 0; i < n; ++i) {\n\t          if (!(filters[i] & zero)) {\n\t            g.value = reduceAdd(g.value, data[i]);\n\t          }\n\t        }\n\t      }\n\t\n\t      // Returns the array of group values, in the dimension's natural order.\n\t      function all() {\n\t        if (resetNeeded) reset(), resetNeeded = false;\n\t        return groups;\n\t      }\n\t\n\t      // Returns a new array containing the top K group values, in reduce order.\n\t      function top(k) {\n\t        var top = select(all(), 0, groups.length, k);\n\t        return heap.sort(top, 0, top.length);\n\t      }\n\t\n\t      // Sets the reduce behavior for this group to use the specified functions.\n\t      // This method lazily recomputes the reduce values, waiting until needed.\n\t      function reduce(add, remove, initial) {\n\t        reduceAdd = add;\n\t        reduceRemove = remove;\n\t        reduceInitial = initial;\n\t        resetNeeded = true;\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for reducing by count.\n\t      function reduceCount() {\n\t        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t      }\n\t\n\t      // A convenience method for reducing by sum(value).\n\t      function reduceSum(value) {\n\t        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t      }\n\t\n\t      // Sets the reduce order, using the specified accessor.\n\t      function order(value) {\n\t        select = heapselect_by(valueOf);\n\t        heap = heap_by(valueOf);\n\t        function valueOf(d) { return value(d.value); }\n\t        return group;\n\t      }\n\t\n\t      // A convenience method for natural ordering by reduce value.\n\t      function orderNatural() {\n\t        return order(crossfilter_identity);\n\t      }\n\t\n\t      // Returns the cardinality of this group, irrespective of any filters.\n\t      function size() {\n\t        return k;\n\t      }\n\t\n\t      // Removes this group and associated event listeners.\n\t      function dispose() {\n\t        var i = filterListeners.indexOf(update);\n\t        if (i >= 0) filterListeners.splice(i, 1);\n\t        i = indexListeners.indexOf(add);\n\t        if (i >= 0) indexListeners.splice(i, 1);\n\t        i = removeDataListeners.indexOf(removeData);\n\t        if (i >= 0) removeDataListeners.splice(i, 1);\n\t        return group;\n\t      }\n\t\n\t      return reduceCount().orderNatural();\n\t    }\n\t\n\t    // A convenience function for generating a singleton group.\n\t    function groupAll() {\n\t      var g = group(crossfilter_null), all = g.all;\n\t      delete g.all;\n\t      delete g.top;\n\t      delete g.order;\n\t      delete g.orderNatural;\n\t      delete g.size;\n\t      g.value = function() { return all()[0].value; };\n\t      return g;\n\t    }\n\t\n\t    // Removes this dimension and associated groups and event listeners.\n\t    function dispose() {\n\t      dimensionGroups.forEach(function(group) { group.dispose(); });\n\t      var i = dataListeners.indexOf(preAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = dataListeners.indexOf(postAdd);\n\t      if (i >= 0) dataListeners.splice(i, 1);\n\t      i = removeDataListeners.indexOf(removeData);\n\t      if (i >= 0) removeDataListeners.splice(i, 1);\n\t      m &= zero;\n\t      return filterAll();\n\t    }\n\t\n\t    return dimension;\n\t  }\n\t\n\t  // A convenience method for groupAll on a dummy dimension.\n\t  // This implementation can be optimized since it always has cardinality 1.\n\t  function groupAll() {\n\t    var group = {\n\t      reduce: reduce,\n\t      reduceCount: reduceCount,\n\t      reduceSum: reduceSum,\n\t      value: value,\n\t      dispose: dispose,\n\t      remove: dispose // for backwards-compatibility\n\t    };\n\t\n\t    var reduceValue,\n\t        reduceAdd,\n\t        reduceRemove,\n\t        reduceInitial,\n\t        resetNeeded = true;\n\t\n\t    // The group listens to the crossfilter for when any dimension changes, so\n\t    // that it can update the reduce value. It must also listen to the parent\n\t    // dimension for when data is added.\n\t    filterListeners.push(update);\n\t    dataListeners.push(add);\n\t\n\t    // For consistency; actually a no-op since resetNeeded is true.\n\t    add(data, 0, n);\n\t\n\t    // Incorporates the specified new values into this group.\n\t    function add(newData, n0) {\n\t      var i;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = n0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Reduces the specified selected or deselected records.\n\t    function update(filterOne, added, removed) {\n\t      var i,\n\t          k,\n\t          n;\n\t\n\t      if (resetNeeded) return;\n\t\n\t      // Add the added values.\n\t      for (i = 0, n = added.length; i < n; ++i) {\n\t        if (!filters[k = added[i]]) {\n\t          reduceValue = reduceAdd(reduceValue, data[k]);\n\t        }\n\t      }\n\t\n\t      // Remove the removed values.\n\t      for (i = 0, n = removed.length; i < n; ++i) {\n\t        if (filters[k = removed[i]] === filterOne) {\n\t          reduceValue = reduceRemove(reduceValue, data[k]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Recomputes the group reduce value from scratch.\n\t    function reset() {\n\t      var i;\n\t\n\t      reduceValue = reduceInitial();\n\t\n\t      for (i = 0; i < n; ++i) {\n\t        if (!filters[i]) {\n\t          reduceValue = reduceAdd(reduceValue, data[i]);\n\t        }\n\t      }\n\t    }\n\t\n\t    // Sets the reduce behavior for this group to use the specified functions.\n\t    // This method lazily recomputes the reduce value, waiting until needed.\n\t    function reduce(add, remove, initial) {\n\t      reduceAdd = add;\n\t      reduceRemove = remove;\n\t      reduceInitial = initial;\n\t      resetNeeded = true;\n\t      return group;\n\t    }\n\t\n\t    // A convenience method for reducing by count.\n\t    function reduceCount() {\n\t      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n\t    }\n\t\n\t    // A convenience method for reducing by sum(value).\n\t    function reduceSum(value) {\n\t      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n\t    }\n\t\n\t    // Returns the computed reduce value.\n\t    function value() {\n\t      if (resetNeeded) reset(), resetNeeded = false;\n\t      return reduceValue;\n\t    }\n\t\n\t    // Removes this group and associated event listeners.\n\t    function dispose() {\n\t      var i = filterListeners.indexOf(update);\n\t      if (i >= 0) filterListeners.splice(i);\n\t      i = dataListeners.indexOf(add);\n\t      if (i >= 0) dataListeners.splice(i);\n\t      return group;\n\t    }\n\t\n\t    return reduceCount();\n\t  }\n\t\n\t  // Returns the number of records in this crossfilter, irrespective of any filters.\n\t  function size() {\n\t    return n;\n\t  }\n\t\n\t  return arguments.length\n\t      ? add(arguments[0])\n\t      : crossfilter;\n\t}\n\t\n\t// Returns an array of size n, big enough to store ids up to m.\n\tfunction crossfilter_index(n, m) {\n\t  return (m < 0x101\n\t      ? crossfilter_array8 : m < 0x10001\n\t      ? crossfilter_array16\n\t      : crossfilter_array32)(n);\n\t}\n\t\n\t// Constructs a new array of size n, with sequential values from 0 to n - 1.\n\tfunction crossfilter_range(n) {\n\t  var range = crossfilter_index(n, n);\n\t  for (var i = -1; ++i < n;) range[i] = i;\n\t  return range;\n\t}\n\t\n\tfunction crossfilter_capacity(w) {\n\t  return w === 8\n\t      ? 0x100 : w === 16\n\t      ? 0x10000\n\t      : 0x100000000;\n\t}\n\t})(typeof exports !== 'undefined' && exports || this);\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(14).crossfilter;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(17)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"._synteny-dotplot-builder{width:100%;height:100%}._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder #form-wrapper,._synteny-dotplot-builder #histogram-and-top-form,._synteny-dotplot-builder .dotplot{border:1px solid #191;border-radius:0;box-sizing:border-box}._synteny-dotplot-builder .dotplot{float:left;position:relative}._synteny-dotplot-builder .dotplot:not(#dotplot){float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:70%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder .histogram-button-wrapper{width:80%;margin-left:10%}._synteny-dotplot-builder .histogram-button{position:relative;float:left;width:10%;color:grey}._synteny-dotplot-builder #histogram-button-title{position:relative;float:left;width:80%;text-align:center}._synteny-dotplot-builder .hidden{display:none}._synteny-dotplot-builder .pressed{color:#000}._synteny-dotplot-builder #histogram-and-top-form{float:right;width:28.5%;height:65%}._synteny-dotplot-builder #histogram-wrapper{float:right;width:100%;height:90%}._synteny-dotplot-builder .histogram{position:relative;width:100%;height:100%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{margin-top:1.5%;float:right;width:28.5%;height:auto;font-size:14pt}._synteny-dotplot-builder #form-wrapper-top{float:right;width:100%;height:10%;font-size:14pt}._synteny-dotplot-builder form{display:inline}#histogram-button-left,#histogram-button-right,#histogram-button-title{margin-top:2%}#form-wrapper strong,#form-wrapper text,#gevo-link,#gevo-link-xname,#gevo-link-yname{margin-left:2%}#gevo-link{margin-bottom:2%}#form-top-label{margin-top:2%}\", \"\"]);\n\t\n\t// exports\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.d3_queue = global.d3_queue || {})));\n\t}(this, function (exports) { 'use strict';\n\t\n\t  var version = \"2.0.3\";\n\t\n\t  var slice = [].slice;\n\t\n\t  var noabort = {};\n\t\n\t  function Queue(size) {\n\t    if (!(size >= 1)) throw new Error;\n\t    this._size = size;\n\t    this._call =\n\t    this._error = null;\n\t    this._tasks = [];\n\t    this._data = [];\n\t    this._waiting =\n\t    this._active =\n\t    this._ended =\n\t    this._start = 0; // inside a synchronous task callback?\n\t  }\n\t\n\t  Queue.prototype = queue.prototype = {\n\t    constructor: Queue,\n\t    defer: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      if (this._error != null) return this;\n\t      var t = slice.call(arguments, 1);\n\t      t.push(callback);\n\t      ++this._waiting, this._tasks.push(t);\n\t      poke(this);\n\t      return this;\n\t    },\n\t    abort: function() {\n\t      if (this._error == null) abort(this, new Error(\"abort\"));\n\t      return this;\n\t    },\n\t    await: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n\t      maybeNotify(this);\n\t      return this;\n\t    },\n\t    awaitAll: function(callback) {\n\t      if (typeof callback !== \"function\" || this._call) throw new Error;\n\t      this._call = callback;\n\t      maybeNotify(this);\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function poke(q) {\n\t    if (!q._start) try { start(q); } // let the current task complete\n\t    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n\t  }\n\t\n\t  function start(q) {\n\t    while (q._start = q._waiting && q._active < q._size) {\n\t      var i = q._ended + q._active,\n\t          t = q._tasks[i],\n\t          j = t.length - 1,\n\t          c = t[j];\n\t      t[j] = end(q, i);\n\t      --q._waiting, ++q._active;\n\t      t = c.apply(null, t);\n\t      if (!q._tasks[i]) continue; // task finished synchronously\n\t      q._tasks[i] = t || noabort;\n\t    }\n\t  }\n\t\n\t  function end(q, i) {\n\t    return function(e, r) {\n\t      if (!q._tasks[i]) return; // ignore multiple callbacks\n\t      --q._active, ++q._ended;\n\t      q._tasks[i] = null;\n\t      if (q._error != null) return; // ignore secondary errors\n\t      if (e != null) {\n\t        abort(q, e);\n\t      } else {\n\t        q._data[i] = r;\n\t        if (q._waiting) poke(q);\n\t        else maybeNotify(q);\n\t      }\n\t    };\n\t  }\n\t\n\t  function abort(q, e) {\n\t    var i = q._tasks.length, t;\n\t    q._error = e; // ignore active callbacks\n\t    q._data = undefined; // allow gc\n\t    q._waiting = NaN; // prevent starting\n\t\n\t    while (--i >= 0) {\n\t      if (t = q._tasks[i]) {\n\t        q._tasks[i] = null;\n\t        if (t.abort) try { t.abort(); }\n\t        catch (e) { /* ignore */ }\n\t      }\n\t    }\n\t\n\t    q._active = NaN; // allow notification\n\t    maybeNotify(q);\n\t  }\n\t\n\t  function maybeNotify(q) {\n\t    if (!q._active && q._call) q._call(q._error, q._data);\n\t  }\n\t\n\t  function queue(concurrency) {\n\t    return new Queue(arguments.length ? +concurrency : Infinity);\n\t  }\n\t\n\t  exports.version = version;\n\t  exports.queue = queue;\n\t\n\t}));\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar mapping = __webpack_require__(20),\n\t    mutateMap = mapping.mutate,\n\t    fallbackHolder = __webpack_require__(21);\n\t\n\t/**\n\t * Creates a function, with an arity of `n`, that invokes `func` with the\n\t * arguments it receives.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {number} n The arity of the new function.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseArity(func, n) {\n\t  return n == 2\n\t    ? function(a, b) { return func.apply(undefined, arguments); }\n\t    : function(a) { return func.apply(undefined, arguments); };\n\t}\n\t\n\t/**\n\t * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n\t * any additional arguments.\n\t *\n\t * @private\n\t * @param {Function} func The function to cap arguments for.\n\t * @param {number} n The arity cap.\n\t * @returns {Function} Returns the new function.\n\t */\n\tfunction baseAry(func, n) {\n\t  return n == 2\n\t    ? function(a, b) { return func(a, b); }\n\t    : function(a) { return func(a); };\n\t}\n\t\n\t/**\n\t * Creates a clone of `array`.\n\t *\n\t * @private\n\t * @param {Array} array The array to clone.\n\t * @returns {Array} Returns the cloned array.\n\t */\n\tfunction cloneArray(array) {\n\t  var length = array ? array.length : 0,\n\t      result = Array(length);\n\t\n\t  while (length--) {\n\t    result[length] = array[length];\n\t  }\n\t  return result;\n\t}\n\t\n\t/**\n\t * Creates a function that clones a given object using the assignment `func`.\n\t *\n\t * @private\n\t * @param {Function} func The assignment function.\n\t * @returns {Function} Returns the new cloner function.\n\t */\n\tfunction createCloner(func) {\n\t  return function(object) {\n\t    return func({}, object);\n\t  };\n\t}\n\t\n\t/**\n\t * Creates a function that wraps `func` and uses `cloner` to clone the first\n\t * argument it receives.\n\t *\n\t * @private\n\t * @param {Function} func The function to wrap.\n\t * @param {Function} cloner The function to clone arguments.\n\t * @returns {Function} Returns the new immutable function.\n\t */\n\tfunction wrapImmutable(func, cloner) {\n\t  return function() {\n\t    var length = arguments.length;\n\t    if (!length) {\n\t      return;\n\t    }\n\t    var args = Array(length);\n\t    while (length--) {\n\t      args[length] = arguments[length];\n\t    }\n\t    var result = args[0] = cloner.apply(undefined, args);\n\t    func.apply(undefined, args);\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * The base implementation of `convert` which accepts a `util` object of methods\n\t * required to perform conversions.\n\t *\n\t * @param {Object} util The util object.\n\t * @param {string} name The name of the function to convert.\n\t * @param {Function} func The function to convert.\n\t * @param {Object} [options] The options object.\n\t * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n\t * @param {boolean} [options.curry=true] Specify currying.\n\t * @param {boolean} [options.fixed=true] Specify fixed arity.\n\t * @param {boolean} [options.immutable=true] Specify immutable operations.\n\t * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n\t * @returns {Function|Object} Returns the converted function or object.\n\t */\n\tfunction baseConvert(util, name, func, options) {\n\t  var setPlaceholder,\n\t      isLib = typeof name == 'function',\n\t      isObj = name === Object(name);\n\t\n\t  if (isObj) {\n\t    options = func;\n\t    func = name;\n\t    name = undefined;\n\t  }\n\t  if (func == null) {\n\t    throw new TypeError;\n\t  }\n\t  options || (options = {});\n\t\n\t  var config = {\n\t    'cap': 'cap' in options ? options.cap : true,\n\t    'curry': 'curry' in options ? options.curry : true,\n\t    'fixed': 'fixed' in options ? options.fixed : true,\n\t    'immutable': 'immutable' in options ? options.immutable : true,\n\t    'rearg': 'rearg' in options ? options.rearg : true\n\t  };\n\t\n\t  var forceCurry = ('curry' in options) && options.curry,\n\t      forceFixed = ('fixed' in options) && options.fixed,\n\t      forceRearg = ('rearg' in options) && options.rearg,\n\t      placeholder = isLib ? func : fallbackHolder,\n\t      pristine = isLib ? func.runInContext() : undefined;\n\t\n\t  var helpers = isLib ? func : {\n\t    'ary': util.ary,\n\t    'assign': util.assign,\n\t    'clone': util.clone,\n\t    'curry': util.curry,\n\t    'forEach': util.forEach,\n\t    'isArray': util.isArray,\n\t    'isFunction': util.isFunction,\n\t    'iteratee': util.iteratee,\n\t    'keys': util.keys,\n\t    'rearg': util.rearg,\n\t    'spread': util.spread,\n\t    'toInteger': util.toInteger,\n\t    'toPath': util.toPath\n\t  };\n\t\n\t  var ary = helpers.ary,\n\t      assign = helpers.assign,\n\t      clone = helpers.clone,\n\t      curry = helpers.curry,\n\t      each = helpers.forEach,\n\t      isArray = helpers.isArray,\n\t      isFunction = helpers.isFunction,\n\t      keys = helpers.keys,\n\t      rearg = helpers.rearg,\n\t      spread = helpers.spread,\n\t      toInteger = helpers.toInteger,\n\t      toPath = helpers.toPath;\n\t\n\t  var aryMethodKeys = keys(mapping.aryMethod);\n\t\n\t  var wrappers = {\n\t    'castArray': function(castArray) {\n\t      return function() {\n\t        var value = arguments[0];\n\t        return isArray(value)\n\t          ? castArray(cloneArray(value))\n\t          : castArray.apply(undefined, arguments);\n\t      };\n\t    },\n\t    'iteratee': function(iteratee) {\n\t      return function() {\n\t        var func = arguments[0],\n\t            arity = arguments[1],\n\t            result = iteratee(func, arity),\n\t            length = result.length;\n\t\n\t        if (config.cap && typeof arity == 'number') {\n\t          arity = arity > 2 ? (arity - 2) : 1;\n\t          return (length && length <= arity) ? result : baseAry(result, arity);\n\t        }\n\t        return result;\n\t      };\n\t    },\n\t    'mixin': function(mixin) {\n\t      return function(source) {\n\t        var func = this;\n\t        if (!isFunction(func)) {\n\t          return mixin(func, Object(source));\n\t        }\n\t        var pairs = [];\n\t        each(keys(source), function(key) {\n\t          if (isFunction(source[key])) {\n\t            pairs.push([key, func.prototype[key]]);\n\t          }\n\t        });\n\t\n\t        mixin(func, Object(source));\n\t\n\t        each(pairs, function(pair) {\n\t          var value = pair[1];\n\t          if (isFunction(value)) {\n\t            func.prototype[pair[0]] = value;\n\t          } else {\n\t            delete func.prototype[pair[0]];\n\t          }\n\t        });\n\t        return func;\n\t      };\n\t    },\n\t    'nthArg': function(nthArg) {\n\t      return function(n) {\n\t        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n\t        return curry(nthArg(n), arity);\n\t      };\n\t    },\n\t    'rearg': function(rearg) {\n\t      return function(func, indexes) {\n\t        var arity = indexes ? indexes.length : 0;\n\t        return curry(rearg(func, indexes), arity);\n\t      };\n\t    },\n\t    'runInContext': function(runInContext) {\n\t      return function(context) {\n\t        return baseConvert(util, runInContext(context), options);\n\t      };\n\t    }\n\t  };\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Casts `func` to a function with an arity capped iteratee if needed.\n\t   *\n\t   * @private\n\t   * @param {string} name The name of the function to inspect.\n\t   * @param {Function} func The function to inspect.\n\t   * @returns {Function} Returns the cast function.\n\t   */\n\t  function castCap(name, func) {\n\t    if (config.cap) {\n\t      var indexes = mapping.iterateeRearg[name];\n\t      if (indexes) {\n\t        return iterateeRearg(func, indexes);\n\t      }\n\t      var n = !isLib && mapping.iterateeAry[name];\n\t      if (n) {\n\t        return iterateeAry(func, n);\n\t      }\n\t    }\n\t    return func;\n\t  }\n\t\n\t  /**\n\t   * Casts `func` to a curried function if needed.\n\t   *\n\t   * @private\n\t   * @param {string} name The name of the function to inspect.\n\t   * @param {Function} func The function to inspect.\n\t   * @param {number} n The arity of `func`.\n\t   * @returns {Function} Returns the cast function.\n\t   */\n\t  function castCurry(name, func, n) {\n\t    return (forceCurry || (config.curry && n > 1))\n\t      ? curry(func, n)\n\t      : func;\n\t  }\n\t\n\t  /**\n\t   * Casts `func` to a fixed arity function if needed.\n\t   *\n\t   * @private\n\t   * @param {string} name The name of the function to inspect.\n\t   * @param {Function} func The function to inspect.\n\t   * @param {number} n The arity cap.\n\t   * @returns {Function} Returns the cast function.\n\t   */\n\t  function castFixed(name, func, n) {\n\t    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n\t      var data = mapping.methodSpread[name],\n\t          start = data && data.start;\n\t\n\t      return start  === undefined ? ary(func, n) : spread(func, start);\n\t    }\n\t    return func;\n\t  }\n\t\n\t  /**\n\t   * Casts `func` to an rearged function if needed.\n\t   *\n\t   * @private\n\t   * @param {string} name The name of the function to inspect.\n\t   * @param {Function} func The function to inspect.\n\t   * @param {number} n The arity of `func`.\n\t   * @returns {Function} Returns the cast function.\n\t   */\n\t  function castRearg(name, func, n) {\n\t    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n\t      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n\t      : func;\n\t  }\n\t\n\t  /**\n\t   * Creates a clone of `object` by `path`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to clone.\n\t   * @param {Array|string} path The path to clone by.\n\t   * @returns {Object} Returns the cloned object.\n\t   */\n\t  function cloneByPath(object, path) {\n\t    path = toPath(path);\n\t\n\t    var index = -1,\n\t        length = path.length,\n\t        lastIndex = length - 1,\n\t        result = clone(Object(object)),\n\t        nested = result;\n\t\n\t    while (nested != null && ++index < length) {\n\t      var key = path[index],\n\t          value = nested[key];\n\t\n\t      if (value != null) {\n\t        nested[path[index]] = clone(index == lastIndex ? value : Object(value));\n\t      }\n\t      nested = nested[key];\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n\t   * version with conversion `options` applied.\n\t   *\n\t   * @param {Object} [options] The options object. See `baseConvert` for more details.\n\t   * @returns {Function} Returns the converted `lodash`.\n\t   */\n\t  function convertLib(options) {\n\t    return _.runInContext.convert(options)(undefined);\n\t  }\n\t\n\t  /**\n\t   * Create a converter function for `func` of `name`.\n\t   *\n\t   * @param {string} name The name of the function to convert.\n\t   * @param {Function} func The function to convert.\n\t   * @returns {Function} Returns the new converter function.\n\t   */\n\t  function createConverter(name, func) {\n\t    var oldOptions = options;\n\t    return function(options) {\n\t      var newUtil = isLib ? pristine : helpers,\n\t          newFunc = isLib ? pristine[name] : func,\n\t          newOptions = assign(assign({}, oldOptions), options);\n\t\n\t      return baseConvert(newUtil, name, newFunc, newOptions);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n\t   * arguments, ignoring any additional arguments.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap iteratee arguments for.\n\t   * @param {number} n The arity cap.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function iterateeAry(func, n) {\n\t    return overArg(func, function(func) {\n\t      return typeof func == 'function' ? baseAry(func, n) : func;\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Creates a function that wraps `func` to invoke its iteratee with arguments\n\t   * arranged according to the specified `indexes` where the argument value at\n\t   * the first index is provided as the first argument, the argument value at\n\t   * the second index is provided as the second argument, and so on.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to rearrange iteratee arguments for.\n\t   * @param {number[]} indexes The arranged argument indexes.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function iterateeRearg(func, indexes) {\n\t    return overArg(func, function(func) {\n\t      var n = indexes.length;\n\t      return baseArity(rearg(baseAry(func, n), indexes), n);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Creates a function that invokes `func` with its first argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return func();\n\t      }\n\t      var args = Array(length);\n\t      while (length--) {\n\t        args[length] = arguments[length];\n\t      }\n\t      var index = config.rearg ? 0 : (length - 1);\n\t      args[index] = transform(args[index]);\n\t      return func.apply(undefined, args);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Creates a function that wraps `func` and applys the conversions\n\t   * rules by `name`.\n\t   *\n\t   * @private\n\t   * @param {string} name The name of the function to wrap.\n\t   * @param {Function} func The function to wrap.\n\t   * @returns {Function} Returns the converted function.\n\t   */\n\t  function wrap(name, func) {\n\t    name = mapping.aliasToReal[name] || name;\n\t\n\t    var result,\n\t        wrapped = func,\n\t        wrapper = wrappers[name];\n\t\n\t    if (wrapper) {\n\t      wrapped = wrapper(func);\n\t    }\n\t    else if (config.immutable) {\n\t      if (mutateMap.array[name]) {\n\t        wrapped = wrapImmutable(func, cloneArray);\n\t      }\n\t      else if (mutateMap.object[name]) {\n\t        wrapped = wrapImmutable(func, createCloner(func));\n\t      }\n\t      else if (mutateMap.set[name]) {\n\t        wrapped = wrapImmutable(func, cloneByPath);\n\t      }\n\t    }\n\t    each(aryMethodKeys, function(aryKey) {\n\t      each(mapping.aryMethod[aryKey], function(otherName) {\n\t        if (name == otherName) {\n\t          var spreadData = mapping.methodSpread[name],\n\t              afterRearg = spreadData && spreadData.afterRearg;\n\t\n\t          result = afterRearg\n\t            ? castFixed(name, castRearg(name, wrapped, aryKey), aryKey)\n\t            : castRearg(name, castFixed(name, wrapped, aryKey), aryKey);\n\t\n\t          result = castCap(name, result);\n\t          result = castCurry(name, result, aryKey);\n\t          return false;\n\t        }\n\t      });\n\t      return !result;\n\t    });\n\t\n\t    result || (result = wrapped);\n\t    if (result == func) {\n\t      result = forceCurry ? curry(result, 1) : function() {\n\t        return func.apply(this, arguments);\n\t      };\n\t    }\n\t    result.convert = createConverter(name, func);\n\t    if (mapping.placeholder[name]) {\n\t      setPlaceholder = true;\n\t      result.placeholder = func.placeholder = placeholder;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  if (!isObj) {\n\t    return wrap(name, func);\n\t  }\n\t  var _ = func;\n\t\n\t  // Convert methods by ary cap.\n\t  var pairs = [];\n\t  each(aryMethodKeys, function(aryKey) {\n\t    each(mapping.aryMethod[aryKey], function(key) {\n\t      var func = _[mapping.remap[key] || key];\n\t      if (func) {\n\t        pairs.push([key, wrap(key, func)]);\n\t      }\n\t    });\n\t  });\n\t\n\t  // Convert remaining methods.\n\t  each(keys(_), function(key) {\n\t    var func = _[key];\n\t    if (typeof func == 'function') {\n\t      var length = pairs.length;\n\t      while (length--) {\n\t        if (pairs[length][0] == key) {\n\t          return;\n\t        }\n\t      }\n\t      func.convert = createConverter(key, func);\n\t      pairs.push([key, func]);\n\t    }\n\t  });\n\t\n\t  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n\t  each(pairs, function(pair) {\n\t    _[pair[0]] = pair[1];\n\t  });\n\t\n\t  _.convert = convertLib;\n\t  if (setPlaceholder) {\n\t    _.placeholder = placeholder;\n\t  }\n\t  // Assign aliases.\n\t  each(keys(_), function(key) {\n\t    each(mapping.realToAlias[key] || [], function(alias) {\n\t      _[alias] = _[key];\n\t    });\n\t  });\n\t\n\t  return _;\n\t}\n\t\n\tmodule.exports = baseConvert;\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/** Used to map aliases to their real names. */\n\texports.aliasToReal = {\n\t\n\t  // Lodash aliases.\n\t  'each': 'forEach',\n\t  'eachRight': 'forEachRight',\n\t  'entries': 'toPairs',\n\t  'entriesIn': 'toPairsIn',\n\t  'extend': 'assignIn',\n\t  'extendAll': 'assignInAll',\n\t  'extendAllWith': 'assignInAllWith',\n\t  'extendWith': 'assignInWith',\n\t  'first': 'head',\n\t\n\t  // Methods that are curried variants of others.\n\t  'conforms': 'conformsTo',\n\t  'matches': 'isMatch',\n\t  'property': 'get',\n\t\n\t  // Ramda aliases.\n\t  '__': 'placeholder',\n\t  'F': 'stubFalse',\n\t  'T': 'stubTrue',\n\t  'all': 'every',\n\t  'allPass': 'overEvery',\n\t  'always': 'constant',\n\t  'any': 'some',\n\t  'anyPass': 'overSome',\n\t  'apply': 'spread',\n\t  'assoc': 'set',\n\t  'assocPath': 'set',\n\t  'complement': 'negate',\n\t  'compose': 'flowRight',\n\t  'contains': 'includes',\n\t  'dissoc': 'unset',\n\t  'dissocPath': 'unset',\n\t  'dropLast': 'dropRight',\n\t  'dropLastWhile': 'dropRightWhile',\n\t  'equals': 'isEqual',\n\t  'identical': 'eq',\n\t  'indexBy': 'keyBy',\n\t  'init': 'initial',\n\t  'invertObj': 'invert',\n\t  'juxt': 'over',\n\t  'omitAll': 'omit',\n\t  'nAry': 'ary',\n\t  'path': 'get',\n\t  'pathEq': 'matchesProperty',\n\t  'pathOr': 'getOr',\n\t  'paths': 'at',\n\t  'pickAll': 'pick',\n\t  'pipe': 'flow',\n\t  'pluck': 'map',\n\t  'prop': 'get',\n\t  'propEq': 'matchesProperty',\n\t  'propOr': 'getOr',\n\t  'props': 'at',\n\t  'symmetricDifference': 'xor',\n\t  'symmetricDifferenceBy': 'xorBy',\n\t  'symmetricDifferenceWith': 'xorWith',\n\t  'takeLast': 'takeRight',\n\t  'takeLastWhile': 'takeRightWhile',\n\t  'unapply': 'rest',\n\t  'unnest': 'flatten',\n\t  'useWith': 'overArgs',\n\t  'where': 'conformsTo',\n\t  'whereEq': 'isMatch',\n\t  'zipObj': 'zipObject'\n\t};\n\t\n\t/** Used to map ary to method names. */\n\texports.aryMethod = {\n\t  '1': [\n\t    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n\t    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n\t    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n\t    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n\t    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n\t    'uniqueId', 'words', 'zipAll'\n\t  ],\n\t  '2': [\n\t    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n\t    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n\t    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n\t    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n\t    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n\t    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n\t    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n\t    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n\t    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n\t    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n\t    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n\t    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n\t    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n\t    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n\t    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n\t    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n\t    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n\t    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n\t    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n\t    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n\t    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n\t    'zipObjectDeep'\n\t  ],\n\t  '3': [\n\t    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n\t    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n\t    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n\t    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n\t    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n\t    'padCharsStart', 'pullAllBy', 'pullAllWith', 'reduce', 'reduceRight', 'replace',\n\t    'set', 'slice', 'sortedIndexBy', 'sortedLastIndexBy', 'transform', 'unionBy',\n\t    'unionWith', 'update', 'xorBy', 'xorWith', 'zipWith'\n\t  ],\n\t  '4': [\n\t    'fill', 'setWith', 'updateWith'\n\t  ]\n\t};\n\t\n\t/** Used to map ary to rearg configs. */\n\texports.aryRearg = {\n\t  '2': [1, 0],\n\t  '3': [2, 0, 1],\n\t  '4': [3, 2, 0, 1]\n\t};\n\t\n\t/** Used to map method names to their iteratee ary. */\n\texports.iterateeAry = {\n\t  'dropRightWhile': 1,\n\t  'dropWhile': 1,\n\t  'every': 1,\n\t  'filter': 1,\n\t  'find': 1,\n\t  'findFrom': 1,\n\t  'findIndex': 1,\n\t  'findIndexFrom': 1,\n\t  'findKey': 1,\n\t  'findLast': 1,\n\t  'findLastFrom': 1,\n\t  'findLastIndex': 1,\n\t  'findLastIndexFrom': 1,\n\t  'findLastKey': 1,\n\t  'flatMap': 1,\n\t  'flatMapDeep': 1,\n\t  'flatMapDepth': 1,\n\t  'forEach': 1,\n\t  'forEachRight': 1,\n\t  'forIn': 1,\n\t  'forInRight': 1,\n\t  'forOwn': 1,\n\t  'forOwnRight': 1,\n\t  'map': 1,\n\t  'mapKeys': 1,\n\t  'mapValues': 1,\n\t  'partition': 1,\n\t  'reduce': 2,\n\t  'reduceRight': 2,\n\t  'reject': 1,\n\t  'remove': 1,\n\t  'some': 1,\n\t  'takeRightWhile': 1,\n\t  'takeWhile': 1,\n\t  'times': 1,\n\t  'transform': 2\n\t};\n\t\n\t/** Used to map method names to iteratee rearg configs. */\n\texports.iterateeRearg = {\n\t  'mapKeys': [1]\n\t};\n\t\n\t/** Used to map method names to rearg configs. */\n\texports.methodRearg = {\n\t  'assignInAllWith': [1, 2, 0],\n\t  'assignInWith': [1, 2, 0],\n\t  'assignAllWith': [1, 2, 0],\n\t  'assignWith': [1, 2, 0],\n\t  'differenceBy': [1, 2, 0],\n\t  'differenceWith': [1, 2, 0],\n\t  'getOr': [2, 1, 0],\n\t  'intersectionBy': [1, 2, 0],\n\t  'intersectionWith': [1, 2, 0],\n\t  'isEqualWith': [1, 2, 0],\n\t  'isMatchWith': [2, 1, 0],\n\t  'mergeAllWith': [1, 2, 0],\n\t  'mergeWith': [1, 2, 0],\n\t  'padChars': [2, 1, 0],\n\t  'padCharsEnd': [2, 1, 0],\n\t  'padCharsStart': [2, 1, 0],\n\t  'pullAllBy': [2, 1, 0],\n\t  'pullAllWith': [2, 1, 0],\n\t  'setWith': [3, 1, 2, 0],\n\t  'sortedIndexBy': [2, 1, 0],\n\t  'sortedLastIndexBy': [2, 1, 0],\n\t  'unionBy': [1, 2, 0],\n\t  'unionWith': [1, 2, 0],\n\t  'updateWith': [3, 1, 2, 0],\n\t  'xorBy': [1, 2, 0],\n\t  'xorWith': [1, 2, 0],\n\t  'zipWith': [1, 2, 0]\n\t};\n\t\n\t/** Used to map method names to spread configs. */\n\texports.methodSpread = {\n\t  'assignAll': { 'start': 0 },\n\t  'assignAllWith': { 'afterRearg': true, 'start': 1 },\n\t  'assignInAll': { 'start': 0 },\n\t  'assignInAllWith': { 'afterRearg': true, 'start': 1 },\n\t  'defaultsAll': { 'start': 0 },\n\t  'defaultsDeepAll': { 'start': 0 },\n\t  'invokeArgs': { 'start': 2 },\n\t  'invokeArgsMap': { 'start': 2 },\n\t  'mergeAll': { 'start': 0 },\n\t  'mergeAllWith': { 'afterRearg': true, 'start': 1 },\n\t  'partial': { 'start': 1 },\n\t  'partialRight': { 'start': 1 },\n\t  'without': { 'start': 1 },\n\t  'zipAll': { 'start': 0 }\n\t};\n\t\n\t/** Used to identify methods which mutate arrays or objects. */\n\texports.mutate = {\n\t  'array': {\n\t    'fill': true,\n\t    'pull': true,\n\t    'pullAll': true,\n\t    'pullAllBy': true,\n\t    'pullAllWith': true,\n\t    'pullAt': true,\n\t    'remove': true,\n\t    'reverse': true\n\t  },\n\t  'object': {\n\t    'assign': true,\n\t    'assignAll': true,\n\t    'assignAllWith': true,\n\t    'assignIn': true,\n\t    'assignInAll': true,\n\t    'assignInAllWith': true,\n\t    'assignInWith': true,\n\t    'assignWith': true,\n\t    'defaults': true,\n\t    'defaultsAll': true,\n\t    'defaultsDeep': true,\n\t    'defaultsDeepAll': true,\n\t    'merge': true,\n\t    'mergeAll': true,\n\t    'mergeAllWith': true,\n\t    'mergeWith': true,\n\t  },\n\t  'set': {\n\t    'set': true,\n\t    'setWith': true,\n\t    'unset': true,\n\t    'update': true,\n\t    'updateWith': true\n\t  }\n\t};\n\t\n\t/** Used to track methods with placeholder support */\n\texports.placeholder = {\n\t  'bind': true,\n\t  'bindKey': true,\n\t  'curry': true,\n\t  'curryRight': true,\n\t  'partial': true,\n\t  'partialRight': true\n\t};\n\t\n\t/** Used to map real names to their aliases. */\n\texports.realToAlias = (function() {\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty,\n\t      object = exports.aliasToReal,\n\t      result = {};\n\t\n\t  for (var key in object) {\n\t    var value = object[key];\n\t    if (hasOwnProperty.call(result, value)) {\n\t      result[value].push(key);\n\t    } else {\n\t      result[value] = [key];\n\t    }\n\t  }\n\t  return result;\n\t}());\n\t\n\t/** Used to map method names to other names. */\n\texports.remap = {\n\t  'assignAll': 'assign',\n\t  'assignAllWith': 'assignWith',\n\t  'assignInAll': 'assignIn',\n\t  'assignInAllWith': 'assignInWith',\n\t  'curryN': 'curry',\n\t  'curryRightN': 'curryRight',\n\t  'defaultsAll': 'defaults',\n\t  'defaultsDeepAll': 'defaultsDeep',\n\t  'findFrom': 'find',\n\t  'findIndexFrom': 'findIndex',\n\t  'findLastFrom': 'findLast',\n\t  'findLastIndexFrom': 'findLastIndex',\n\t  'getOr': 'get',\n\t  'includesFrom': 'includes',\n\t  'indexOfFrom': 'indexOf',\n\t  'invokeArgs': 'invoke',\n\t  'invokeArgsMap': 'invokeMap',\n\t  'lastIndexOfFrom': 'lastIndexOf',\n\t  'mergeAll': 'merge',\n\t  'mergeAllWith': 'mergeWith',\n\t  'padChars': 'pad',\n\t  'padCharsEnd': 'padEnd',\n\t  'padCharsStart': 'padStart',\n\t  'propertyOf': 'get',\n\t  'restFrom': 'rest',\n\t  'spreadFrom': 'spread',\n\t  'trimChars': 'trim',\n\t  'trimCharsEnd': 'trimEnd',\n\t  'trimCharsStart': 'trimStart',\n\t  'zipAll': 'zip'\n\t};\n\t\n\t/** Used to track methods that skip fixing their arity. */\n\texports.skipFixed = {\n\t  'castArray': true,\n\t  'flow': true,\n\t  'flowRight': true,\n\t  'iteratee': true,\n\t  'mixin': true,\n\t  'rearg': true,\n\t  'runInContext': true\n\t};\n\t\n\t/** Used to track methods that skip rearranging arguments. */\n\texports.skipRearg = {\n\t  'add': true,\n\t  'assign': true,\n\t  'assignIn': true,\n\t  'bind': true,\n\t  'bindKey': true,\n\t  'concat': true,\n\t  'difference': true,\n\t  'divide': true,\n\t  'eq': true,\n\t  'gt': true,\n\t  'gte': true,\n\t  'isEqual': true,\n\t  'lt': true,\n\t  'lte': true,\n\t  'matchesProperty': true,\n\t  'merge': true,\n\t  'multiply': true,\n\t  'overArgs': true,\n\t  'partial': true,\n\t  'partialRight': true,\n\t  'propertyOf': true,\n\t  'random': true,\n\t  'range': true,\n\t  'rangeRight': true,\n\t  'subtract': true,\n\t  'zip': true,\n\t  'zipObject': true,\n\t  'zipObjectDeep': true\n\t};\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/**\n\t * The default argument placeholder value for methods.\n\t *\n\t * @type {Object}\n\t */\n\tmodule.exports = {};\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\n\t */\n\t;(function(){function t(t,n){return t.set(n[0],n[1]),t}function n(t,n){return t.add(n),t}function r(t,n,r){switch(r.length){case 0:return t.call(n);case 1:return t.call(n,r[0]);case 2:return t.call(n,r[0],r[1]);case 3:return t.call(n,r[0],r[1],r[2])}return t.apply(n,r)}function e(t,n,r,e){for(var u=-1,o=t?t.length:0;++u<o;){var i=t[u];n(e,i,r(i),t)}return e}function u(t,n){for(var r=-1,e=t?t.length:0;++r<e&&false!==n(t[r],r,t););return t}function o(t,n){for(var r=t?t.length:0;r--&&false!==n(t[r],r,t););\n\treturn t}function i(t,n){for(var r=-1,e=t?t.length:0;++r<e;)if(!n(t[r],r,t))return false;return true}function f(t,n){for(var r=-1,e=t?t.length:0,u=0,o=[];++r<e;){var i=t[r];n(i,r,t)&&(o[u++]=i)}return o}function c(t,n){return!(!t||!t.length)&&-1<d(t,n,0)}function a(t,n,r){for(var e=-1,u=t?t.length:0;++e<u;)if(r(n,t[e]))return true;return false}function l(t,n){for(var r=-1,e=t?t.length:0,u=Array(e);++r<e;)u[r]=n(t[r],r,t);return u}function s(t,n){for(var r=-1,e=n.length,u=t.length;++r<e;)t[u+r]=n[r];return t}function h(t,n,r,e){\n\tvar u=-1,o=t?t.length:0;for(e&&o&&(r=t[++u]);++u<o;)r=n(r,t[u],u,t);return r}function p(t,n,r,e){var u=t?t.length:0;for(e&&u&&(r=t[--u]);u--;)r=n(r,t[u],u,t);return r}function _(t,n){for(var r=-1,e=t?t.length:0;++r<e;)if(n(t[r],r,t))return true;return false}function v(t,n,r){var e;return r(t,function(t,r,u){if(n(t,r,u))return e=r,false}),e}function g(t,n,r,e){var u=t.length;for(r+=e?1:-1;e?r--:++r<u;)if(n(t[r],r,t))return r;return-1}function d(t,n,r){if(n!==n)return g(t,b,r);--r;for(var e=t.length;++r<e;)if(t[r]===n)return r;\n\treturn-1}function y(t,n,r,e){--r;for(var u=t.length;++r<u;)if(e(t[r],n))return r;return-1}function b(t){return t!==t}function x(t,n){var r=t?t.length:0;return r?k(t,n)/r:q}function j(t){return function(n){return null==n?P:n[t]}}function w(t){return function(n){return null==t?P:t[n]}}function m(t,n,r,e,u){return u(t,function(t,u,o){r=e?(e=false,t):n(r,t,u,o)}),r}function A(t,n){var r=t.length;for(t.sort(n);r--;)t[r]=t[r].c;return t}function k(t,n){for(var r,e=-1,u=t.length;++e<u;){var o=n(t[e]);o!==P&&(r=r===P?o:r+o);\n\t}return r}function E(t,n){for(var r=-1,e=Array(t);++r<t;)e[r]=n(r);return e}function O(t,n){return l(n,function(n){return[n,t[n]]})}function S(t){return function(n){return t(n)}}function I(t,n){return l(n,function(n){return t[n]})}function R(t,n){return t.has(n)}function W(t,n){for(var r=-1,e=t.length;++r<e&&-1<d(n,t[r],0););return r}function B(t,n){for(var r=t.length;r--&&-1<d(n,t[r],0););return r}function L(t){return\"\\\\\"+Ft[t]}function C(t){var n=false;if(null!=t&&typeof t.toString!=\"function\")try{\n\tn=!!(t+\"\")}catch(t){}return n}function U(t){var n=-1,r=Array(t.size);return t.forEach(function(t,e){r[++n]=[e,t]}),r}function M(t,n){return function(r){return t(n(r))}}function z(t,n){for(var r=-1,e=t.length,u=0,o=[];++r<e;){var i=t[r];i!==n&&\"__lodash_placeholder__\"!==i||(t[r]=\"__lodash_placeholder__\",o[u++]=r)}return o}function D(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=t}),r}function T(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=[t,t]}),r}function $(t){\n\tif(Ut.test(t)){for(var n=Lt.lastIndex=0;Lt.test(t);)n++;t=n}else t=en(t);return t}function F(t){return Ut.test(t)?t.match(Lt)||[]:t.split(\"\")}function N(w){function St(t){return Hu.call(t)}function It(t){if(ou(t)&&!Fi(t)&&!(t instanceof $t)){if(t instanceof Lt)return t;if(Gu.call(t,\"__wrapped__\"))return Oe(t)}return new Lt(t)}function Rt(){}function Lt(t,n){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=P}function $t(t){this.__wrapped__=t,this.__actions__=[],\n\tthis.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Ft(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Zt(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function qt(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Kt(t){var n=-1,r=t?t.length:0;for(this.__data__=new qt;++n<r;)this.add(t[n])}function Gt(t){this.__data__=new Zt(t);\n\t}function Yt(t,n){var r,e=Fi(t)||He(t)?E(t.length,Fu):[],u=e.length,o=!!u;for(r in t)!n&&!Gu.call(t,r)||o&&(\"length\"==r||ge(r,u))||e.push(r);return e}function en(t,n,r,e){return t===P||Ye(t,Zu[r])&&!Gu.call(e,r)?n:t}function an(t,n,r){(r===P||Ye(t[n],r))&&(typeof n!=\"number\"||r!==P||n in t)||(t[n]=r)}function ln(t,n,r){var e=t[n];Gu.call(t,n)&&Ye(e,r)&&(r!==P||n in t)||(t[n]=r)}function sn(t,n){for(var r=t.length;r--;)if(Ye(t[r][0],n))return r;return-1}function hn(t,n,r,e){return Po(t,function(t,u,o){\n\tn(e,t,r(t),o)}),e}function pn(t,n){return t&&Br(n,bu(n),t)}function _n(t,n){for(var r=-1,e=null==t,u=n.length,o=Cu(u);++r<u;)o[r]=e?P:du(t,n[r]);return o}function vn(t,n,r){return t===t&&(r!==P&&(t=t<=r?t:r),n!==P&&(t=t>=n?t:n)),t}function gn(t,n,r,e,o,i,f){var c;if(e&&(c=i?e(t,o,i,f):e(t)),c!==P)return c;if(!uu(t))return t;if(o=Fi(t)){if(c=he(t),!n)return Wr(t,c)}else{var a=St(t),l=\"[object Function]\"==a||\"[object GeneratorFunction]\"==a;if(Pi(t))return Er(t,n);if(\"[object Object]\"==a||\"[object Arguments]\"==a||l&&!i){\n\tif(C(t))return i?t:{};if(c=pe(l?{}:t),!n)return Lr(t,pn(c,t))}else{if(!Tt[a])return i?t:{};c=_e(t,a,gn,n)}}if(f||(f=new Gt),i=f.get(t))return i;if(f.set(t,c),!o)var s=r?Rn(t,bu,Ho):bu(t);return u(s||t,function(u,o){s&&(o=u,u=t[o]),ln(c,o,gn(u,n,r,e,o,t,f))}),c}function dn(t){var n=bu(t);return function(r){return yn(r,t,n)}}function yn(t,n,r){var e=r.length;if(null==t)return!e;for(t=Tu(t);e--;){var u=r[e],o=n[u],i=t[u];if(i===P&&!(u in t)||!o(i))return false}return true}function bn(t){return uu(t)?oo(t):{};\n\t}function xn(t,n,r){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return ni(function(){t.apply(P,r)},n)}function jn(t,n,r,e){var u=-1,o=c,i=true,f=t.length,s=[],h=n.length;if(!f)return s;r&&(n=l(n,S(r))),e?(o=a,i=false):200<=n.length&&(o=R,i=false,n=new Kt(n));t:for(;++u<f;){var p=t[u],_=r?r(p):p,p=e||0!==p?p:0;if(i&&_===_){for(var v=h;v--;)if(n[v]===_)continue t;s.push(p)}else o(n,_,e)||s.push(p)}return s}function wn(t,n){var r=true;return Po(t,function(t,e,u){return r=!!n(t,e,u)}),r}function mn(t,n,r){\n\tfor(var e=-1,u=t.length;++e<u;){var o=t[e],i=n(o);if(null!=i&&(f===P?i===i&&!au(i):r(i,f)))var f=i,c=o}return c}function An(t,n){var r=[];return Po(t,function(t,e,u){n(t,e,u)&&r.push(t)}),r}function kn(t,n,r,e,u){var o=-1,i=t.length;for(r||(r=ve),u||(u=[]);++o<i;){var f=t[o];0<n&&r(f)?1<n?kn(f,n-1,r,e,u):s(u,f):e||(u[u.length]=f)}return u}function En(t,n){return t&&qo(t,n,bu)}function On(t,n){return t&&Vo(t,n,bu)}function Sn(t,n){return f(n,function(n){return nu(t[n])})}function In(t,n){n=ye(n,t)?[n]:Ar(n);\n\tfor(var r=0,e=n.length;null!=t&&r<e;)t=t[Ae(n[r++])];return r&&r==e?t:P}function Rn(t,n,r){return n=n(t),Fi(t)?n:s(n,r(t))}function Wn(t,n){return t>n}function Bn(t,n){return null!=t&&Gu.call(t,n)}function Ln(t,n){return null!=t&&n in Tu(t)}function Cn(t,n,r){for(var e=r?a:c,u=t[0].length,o=t.length,i=o,f=Cu(o),s=1/0,h=[];i--;){var p=t[i];i&&n&&(p=l(p,S(n))),s=jo(p.length,s),f[i]=!r&&(n||120<=u&&120<=p.length)?new Kt(i&&p):P}var p=t[0],_=-1,v=f[0];t:for(;++_<u&&h.length<s;){var g=p[_],d=n?n(g):g,g=r||0!==g?g:0;\n\tif(v?!R(v,d):!e(h,d,r)){for(i=o;--i;){var y=f[i];if(y?!R(y,d):!e(t[i],d,r))continue t}v&&v.push(d),h.push(g)}}return h}function Un(t,n,r){var e={};return En(t,function(t,u,o){n(e,r(t),u,o)}),e}function Mn(t,n,e){return ye(n,t)||(n=Ar(n),t=me(t,n),n=We(n)),n=null==t?t:t[Ae(n)],null==n?P:r(n,t,e)}function zn(t){return ou(t)&&\"[object ArrayBuffer]\"==Hu.call(t)}function Dn(t){return ou(t)&&\"[object Date]\"==Hu.call(t)}function Tn(t,n,r,e,u){if(t===n)n=true;else if(null==t||null==n||!uu(t)&&!ou(n))n=t!==t&&n!==n;else t:{\n\tvar o=Fi(t),i=Fi(n),f=\"[object Array]\",c=\"[object Array]\";o||(f=St(t),f=\"[object Arguments]\"==f?\"[object Object]\":f),i||(c=St(n),c=\"[object Arguments]\"==c?\"[object Object]\":c);var a=\"[object Object]\"==f&&!C(t),i=\"[object Object]\"==c&&!C(n);if((c=f==c)&&!a)u||(u=new Gt),n=o||Gi(t)?ee(t,n,Tn,r,e,u):ue(t,n,f,Tn,r,e,u);else{if(!(2&e)&&(o=a&&Gu.call(t,\"__wrapped__\"),f=i&&Gu.call(n,\"__wrapped__\"),o||f)){t=o?t.value():t,n=f?n.value():n,u||(u=new Gt),n=Tn(t,n,r,e,u);break t}if(c)n:if(u||(u=new Gt),o=2&e,\n\tf=bu(t),i=f.length,c=bu(n).length,i==c||o){for(a=i;a--;){var l=f[a];if(!(o?l in n:Gu.call(n,l))){n=false;break n}}if((c=u.get(t))&&u.get(n))n=c==n;else{c=true,u.set(t,n),u.set(n,t);for(var s=o;++a<i;){var l=f[a],h=t[l],p=n[l];if(r)var _=o?r(p,h,l,n,t,u):r(h,p,l,t,n,u);if(_===P?h!==p&&!Tn(h,p,r,e,u):!_){c=false;break}s||(s=\"constructor\"==l)}c&&!s&&(r=t.constructor,e=n.constructor,r!=e&&\"constructor\"in t&&\"constructor\"in n&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&&e instanceof e)&&(c=false)),\n\tu.delete(t),u.delete(n),n=c}}else n=false;else n=false}}return n}function $n(t){return ou(t)&&\"[object Map]\"==St(t)}function Fn(t,n,r,e){var u=r.length,o=u,i=!e;if(null==t)return!o;for(t=Tu(t);u--;){var f=r[u];if(i&&f[2]?f[1]!==t[f[0]]:!(f[0]in t))return false}for(;++u<o;){var f=r[u],c=f[0],a=t[c],l=f[1];if(i&&f[2]){if(a===P&&!(c in t))return false}else{if(f=new Gt,e)var s=e(a,l,c,t,n,f);if(s===P?!Tn(l,a,e,3,f):!s)return false}}return true}function Nn(t){return!(!uu(t)||Vu&&Vu in t)&&(nu(t)||C(t)?Xu:wt).test(ke(t))}function Pn(t){\n\treturn uu(t)&&\"[object RegExp]\"==Hu.call(t)}function Zn(t){return ou(t)&&\"[object Set]\"==St(t)}function qn(t){return ou(t)&&eu(t.length)&&!!Dt[Hu.call(t)]}function Vn(t){return typeof t==\"function\"?t:null==t?Ou:typeof t==\"object\"?Fi(t)?Qn(t[0],t[1]):Hn(t):Wu(t)}function Kn(t){if(!xe(t))return bo(t);var n,r=[];for(n in Tu(t))Gu.call(t,n)&&\"constructor\"!=n&&r.push(n);return r}function Gn(t){if(!uu(t)){var n=[];if(null!=t)for(var r in Tu(t))n.push(r);return n}r=xe(t);var e=[];for(n in t)(\"constructor\"!=n||!r&&Gu.call(t,n))&&e.push(n);\n\treturn e}function Jn(t,n){return t<n}function Yn(t,n){var r=-1,e=Qe(t)?Cu(t.length):[];return Po(t,function(t,u,o){e[++r]=n(t,u,o)}),e}function Hn(t){var n=ae(t);return 1==n.length&&n[0][2]?je(n[0][0],n[0][1]):function(r){return r===t||Fn(r,t,n)}}function Qn(t,n){return ye(t)&&n===n&&!uu(n)?je(Ae(t),n):function(r){var e=du(r,t);return e===P&&e===n?yu(r,t):Tn(n,e,P,3)}}function Xn(t,n,r,e,o){if(t!==n){if(!Fi(n)&&!Gi(n))var i=Gn(n);u(i||n,function(u,f){if(i&&(f=u,u=n[f]),uu(u)){o||(o=new Gt);var c=f,a=o,l=t[c],s=n[c],h=a.get(s);\n\tif(h)an(t,c,h);else{var h=e?e(l,s,c+\"\",t,n,a):P,p=h===P;p&&(h=s,Fi(s)||Gi(s)?Fi(l)?h=l:Xe(l)?h=Wr(l):(p=false,h=gn(s,true)):fu(s)||He(s)?He(l)?h=vu(l):!uu(l)||r&&nu(l)?(p=false,h=gn(s,true)):h=l:p=false),p&&(a.set(s,h),Xn(h,s,r,e,a),a.delete(s)),an(t,c,h)}}else c=e?e(t[f],u,f+\"\",t,n,o):P,c===P&&(c=u),an(t,f,c)})}}function tr(t,n){var r=t.length;if(r)return n+=0>n?r:0,ge(n,r)?t[n]:P}function nr(t,n,r){var e=-1;return n=l(n.length?n:[Ou],S(fe())),t=Yn(t,function(t){return{a:l(n,function(n){return n(t)}),b:++e,c:t\n\t}}),A(t,function(t,n){var e;t:{e=-1;for(var u=t.a,o=n.a,i=u.length,f=r.length;++e<i;){var c=Sr(u[e],o[e]);if(c){e=e>=f?c:c*(\"desc\"==r[e]?-1:1);break t}}e=t.b-n.b}return e})}function rr(t,n){return t=Tu(t),er(t,n,function(n,r){return r in t})}function er(t,n,r){for(var e=-1,u=n.length,o={};++e<u;){var i=n[e],f=t[i];r(f,i)&&(o[i]=f)}return o}function ur(t){return function(n){return In(n,t)}}function or(t,n,r,e){var u=e?y:d,o=-1,i=n.length,f=t;for(t===n&&(n=Wr(n)),r&&(f=l(t,S(r)));++o<i;)for(var c=0,a=n[o],a=r?r(a):a;-1<(c=u(f,a,c,e));)f!==t&&fo.call(f,c,1),\n\tfo.call(t,c,1);return t}function ir(t,n){for(var r=t?n.length:0,e=r-1;r--;){var u=n[r];if(r==e||u!==o){var o=u;if(ge(u))fo.call(t,u,1);else if(ye(u,t))delete t[Ae(u)];else{var u=Ar(u),i=me(t,u);null!=i&&delete i[Ae(We(u))]}}}}function fr(t,n){return t+po(mo()*(n-t+1))}function cr(t,n){var r=\"\";if(!t||1>n||9007199254740991<n)return r;do n%2&&(r+=t),(n=po(n/2))&&(t+=t);while(n);return r}function ar(t,n){return n=xo(n===P?t.length-1:n,0),function(){for(var e=arguments,u=-1,o=xo(e.length-n,0),i=Cu(o);++u<o;)i[u]=e[n+u];\n\tfor(u=-1,o=Cu(n+1);++u<n;)o[u]=e[u];return o[n]=i,r(t,this,o)}}function lr(t,n,r,e){if(!uu(t))return t;n=ye(n,t)?[n]:Ar(n);for(var u=-1,o=n.length,i=o-1,f=t;null!=f&&++u<o;){var c=Ae(n[u]),a=r;if(u!=i){var l=f[c],a=e?e(l,c,f):P;a===P&&(a=uu(l)?l:ge(n[u+1])?[]:{})}ln(f,c,a),f=f[c]}return t}function sr(t,n,r){var e=-1,u=t.length;for(0>n&&(n=-n>u?0:u+n),r=r>u?u:r,0>r&&(r+=u),u=n>r?0:r-n>>>0,n>>>=0,r=Cu(u);++e<u;)r[e]=t[e+n];return r}function hr(t,n){var r;return Po(t,function(t,e,u){return r=n(t,e,u),\n\t!r}),!!r}function pr(t,n,r){var e=0,u=t?t.length:e;if(typeof n==\"number\"&&n===n&&2147483647>=u){for(;e<u;){var o=e+u>>>1,i=t[o];null!==i&&!au(i)&&(r?i<=n:i<n)?e=o+1:u=o}return u}return _r(t,n,Ou,r)}function _r(t,n,r,e){n=r(n);for(var u=0,o=t?t.length:0,i=n!==n,f=null===n,c=au(n),a=n===P;u<o;){var l=po((u+o)/2),s=r(t[l]),h=s!==P,p=null===s,_=s===s,v=au(s);(i?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=n:s<n)?u=l+1:o=l}return jo(o,4294967294)}function vr(t,n){for(var r=-1,e=t.length,u=0,o=[];++r<e;){\n\tvar i=t[r],f=n?n(i):i;if(!r||!Ye(f,c)){var c=f;o[u++]=0===i?0:i}}return o}function gr(t){return typeof t==\"number\"?t:au(t)?q:+t}function dr(t){if(typeof t==\"string\")return t;if(au(t))return No?No.call(t):\"\";var n=t+\"\";return\"0\"==n&&1/t==-Z?\"-0\":n}function yr(t,n,r){var e=-1,u=c,o=t.length,i=true,f=[],l=f;if(r)i=false,u=a;else if(200<=o){if(u=n?null:Jo(t))return D(u);i=false,u=R,l=new Kt}else l=n?[]:f;t:for(;++e<o;){var s=t[e],h=n?n(s):s,s=r||0!==s?s:0;if(i&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue t;\n\tn&&l.push(h),f.push(s)}else u(l,h,r)||(l!==f&&l.push(h),f.push(s))}return f}function br(t,n,r,e){for(var u=t.length,o=e?u:-1;(e?o--:++o<u)&&n(t[o],o,t););return r?sr(t,e?0:o,e?o+1:u):sr(t,e?o+1:0,e?u:o)}function xr(t,n){var r=t;return r instanceof $t&&(r=r.value()),h(n,function(t,n){return n.func.apply(n.thisArg,s([t],n.args))},r)}function jr(t,n,r){for(var e=-1,u=t.length;++e<u;)var o=o?s(jn(o,t[e],n,r),jn(t[e],o,n,r)):t[e];return o&&o.length?yr(o,n,r):[]}function wr(t,n,r){for(var e=-1,u=t.length,o=n.length,i={};++e<u;)r(i,t[e],e<o?n[e]:P);\n\treturn i}function mr(t){return Xe(t)?t:[]}function Ar(t){return Fi(t)?t:ei(t)}function kr(t,n,r){var e=t.length;return r=r===P?e:r,!n&&r>=e?t:sr(t,n,r)}function Er(t,n){if(n)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}function Or(t){var n=new t.constructor(t.byteLength);return new ro(n).set(new ro(t)),n}function Sr(t,n){if(t!==n){var r=t!==P,e=null===t,u=t===t,o=au(t),i=n!==P,f=null===n,c=n===n,a=au(n);if(!f&&!a&&!o&&t>n||o&&i&&c&&!f&&!a||e&&i&&c||!r&&c||!u)return 1;if(!e&&!o&&!a&&t<n||a&&r&&u&&!e&&!o||f&&r&&u||!i&&u||!c)return-1;\n\t}return 0}function Ir(t,n,r,e){var u=-1,o=t.length,i=r.length,f=-1,c=n.length,a=xo(o-i,0),l=Cu(c+a);for(e=!e;++f<c;)l[f]=n[f];for(;++u<i;)(e||u<o)&&(l[r[u]]=t[u]);for(;a--;)l[f++]=t[u++];return l}function Rr(t,n,r,e){var u=-1,o=t.length,i=-1,f=r.length,c=-1,a=n.length,l=xo(o-f,0),s=Cu(l+a);for(e=!e;++u<l;)s[u]=t[u];for(l=u;++c<a;)s[l+c]=n[c];for(;++i<f;)(e||u<o)&&(s[l+r[i]]=t[u++]);return s}function Wr(t,n){var r=-1,e=t.length;for(n||(n=Cu(e));++r<e;)n[r]=t[r];return n}function Br(t,n,r,e){r||(r={});\n\tfor(var u=-1,o=n.length;++u<o;){var i=n[u],f=e?e(r[i],t[i],i,r,t):P;ln(r,i,f===P?t[i]:f)}return r}function Lr(t,n){return Br(t,Ho(t),n)}function Cr(t,n){return function(r,u){var o=Fi(r)?e:hn,i=n?n():{};return o(r,t,fe(u,2),i)}}function Ur(t){return ar(function(n,r){var e=-1,u=r.length,o=1<u?r[u-1]:P,i=2<u?r[2]:P,o=3<t.length&&typeof o==\"function\"?(u--,o):P;for(i&&de(r[0],r[1],i)&&(o=3>u?P:o,u=1),n=Tu(n);++e<u;)(i=r[e])&&t(n,i,e,o);return n})}function Mr(t,n){return function(r,e){if(null==r)return r;\n\tif(!Qe(r))return t(r,e);for(var u=r.length,o=n?u:-1,i=Tu(r);(n?o--:++o<u)&&false!==e(i[o],o,i););return r}}function zr(t){return function(n,r,e){var u=-1,o=Tu(n);e=e(n);for(var i=e.length;i--;){var f=e[t?i:++u];if(false===r(o[f],f,o))break}return n}}function Dr(t,n,r){function e(){return(this&&this!==Vt&&this instanceof e?o:t).apply(u?r:this,arguments)}var u=1&n,o=Fr(t);return e}function Tr(t){return function(n){n=gu(n);var r=Ut.test(n)?F(n):P,e=r?r[0]:n.charAt(0);return n=r?kr(r,1).join(\"\"):n.slice(1),\n\te[t]()+n}}function $r(t){return function(n){return h(ku(Au(n).replace(Wt,\"\")),t,\"\")}}function Fr(t){return function(){var n=arguments;switch(n.length){case 0:return new t;case 1:return new t(n[0]);case 2:return new t(n[0],n[1]);case 3:return new t(n[0],n[1],n[2]);case 4:return new t(n[0],n[1],n[2],n[3]);case 5:return new t(n[0],n[1],n[2],n[3],n[4]);case 6:return new t(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new t(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var r=bn(t.prototype),n=t.apply(r,n);return uu(n)?n:r;\n\t}}function Nr(t,n,e){function u(){for(var i=arguments.length,f=Cu(i),c=i,a=ie(u);c--;)f[c]=arguments[c];return c=3>i&&f[0]!==a&&f[i-1]!==a?[]:z(f,a),i-=c.length,i<e?Xr(t,n,qr,u.placeholder,P,f,c,P,P,e-i):r(this&&this!==Vt&&this instanceof u?o:t,this,f)}var o=Fr(t);return u}function Pr(t){return function(n,r,e){var u=Tu(n);if(!Qe(n)){var o=fe(r,3);n=bu(n),r=function(t){return o(u[t],t,u)}}return r=t(n,r,e),-1<r?u[o?n[r]:r]:P}}function Zr(t){return ar(function(n){n=kn(n,1);var r=n.length,e=r,u=Lt.prototype.thru;\n\tfor(t&&n.reverse();e--;){var o=n[e];if(typeof o!=\"function\")throw new Nu(\"Expected a function\");if(u&&!i&&\"wrapper\"==oe(o))var i=new Lt([],(true))}for(e=i?e:r;++e<r;)var o=n[e],u=oe(o),f=\"wrapper\"==u?Yo(o):P,i=f&&be(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?i[oe(f[0])].apply(i,f[3]):1==o.length&&be(o)?i[u]():i.thru(o);return function(){var t=arguments,e=t[0];if(i&&1==t.length&&Fi(e)&&200<=e.length)return i.plant(e).value();for(var u=0,t=r?n[u].apply(this,t):e;++u<r;)t=n[u].call(this,t);return t}})}function qr(t,n,r,e,u,o,i,f,c,a){\n\tfunction l(){for(var d=arguments.length,y=Cu(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=ie(l),b=y.length;for(x=0;b--;)y[b]===j&&x++}if(e&&(y=Ir(y,e,u,_)),o&&(y=Rr(y,o,i,_)),d-=x,_&&d<a)return j=z(y,j),Xr(t,n,qr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[t]:t,d=y.length,f){x=y.length;for(var w=jo(f.length,x),m=Wr(y);w--;){var A=f[w];y[w]=ge(A,x)?m[A]:P}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==Vt&&this instanceof l&&(b=g||Fr(b)),b.apply(j,y)}var s=128&n,h=1&n,p=2&n,_=24&n,v=512&n,g=p?P:Fr(t);\n\treturn l}function Vr(t,n){return function(r,e){return Un(r,t,n(e))}}function Kr(t,n){return function(r,e){var u;if(r===P&&e===P)return n;if(r!==P&&(u=r),e!==P){if(u===P)return e;typeof r==\"string\"||typeof e==\"string\"?(r=dr(r),e=dr(e)):(r=gr(r),e=gr(e)),u=t(r,e)}return u}}function Gr(t){return ar(function(n){return n=1==n.length&&Fi(n[0])?l(n[0],S(fe())):l(kn(n,1),S(fe())),ar(function(e){var u=this;return t(n,function(t){return r(t,u,e)})})})}function Jr(t,n){n=n===P?\" \":dr(n);var r=n.length;return 2>r?r?cr(n,t):n:(r=cr(n,ho(t/$(n))),\n\tUt.test(n)?kr(F(r),0,t).join(\"\"):r.slice(0,t))}function Yr(t,n,e,u){function o(){for(var n=-1,c=arguments.length,a=-1,l=u.length,s=Cu(l+c),h=this&&this!==Vt&&this instanceof o?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++n];return r(h,i?e:this,s)}var i=1&n,f=Fr(t);return o}function Hr(t){return function(n,r,e){e&&typeof e!=\"number\"&&de(n,r,e)&&(r=e=P),n=su(n),r===P?(r=n,n=0):r=su(r),e=e===P?n<r?1:-1:su(e);var u=-1;r=xo(ho((r-n)/(e||1)),0);for(var o=Cu(r);r--;)o[t?r:++u]=n,n+=e;return o}}function Qr(t){\n\treturn function(n,r){return typeof n==\"string\"&&typeof r==\"string\"||(n=_u(n),r=_u(r)),t(n,r)}}function Xr(t,n,r,e,u,o,i,f,c,a){var l=8&n,s=l?i:P;i=l?P:i;var h=l?o:P;return o=l?P:o,n=(n|(l?32:64))&~(l?64:32),4&n||(n&=-4),u=[t,n,u,h,s,o,i,f,c,a],r=r.apply(P,u),be(t)&&ti(r,u),r.placeholder=e,ri(r,t,n)}function te(t){var n=Du[t];return function(t,r){if(t=_u(t),r=jo(hu(r),292)){var e=(gu(t)+\"e\").split(\"e\"),e=n(e[0]+\"e\"+(+e[1]+r)),e=(gu(e)+\"e\").split(\"e\");return+(e[0]+\"e\"+(+e[1]-r))}return n(t)}}function ne(t){\n\treturn function(n){var r=St(n);return\"[object Map]\"==r?U(n):\"[object Set]\"==r?T(n):O(n,t(n))}}function re(t,n,r,e,u,o,i,f){var c=2&n;if(!c&&typeof t!=\"function\")throw new Nu(\"Expected a function\");var a=e?e.length:0;if(a||(n&=-97,e=u=P),i=i===P?i:xo(hu(i),0),f=f===P?f:hu(f),a-=u?u.length:0,64&n){var l=e,s=u;e=u=P}var h=c?P:Yo(t);return o=[t,n,r,e,u,l,s,o,i,f],h&&(r=o[1],t=h[1],n=r|t,e=128==t&&8==r||128==t&&256==r&&o[7].length<=h[8]||384==t&&h[7].length<=h[8]&&8==r,131>n||e)&&(1&t&&(o[2]=h[2],n|=1&r?0:4),\n\t(r=h[3])&&(e=o[3],o[3]=e?Ir(e,r,h[4]):r,o[4]=e?z(o[3],\"__lodash_placeholder__\"):h[4]),(r=h[5])&&(e=o[5],o[5]=e?Rr(e,r,h[6]):r,o[6]=e?z(o[5],\"__lodash_placeholder__\"):h[6]),(r=h[7])&&(o[7]=r),128&t&&(o[8]=null==o[8]?h[8]:jo(o[8],h[8])),null==o[9]&&(o[9]=h[9]),o[0]=h[0],o[1]=n),t=o[0],n=o[1],r=o[2],e=o[3],u=o[4],f=o[9]=null==o[9]?c?0:t.length:xo(o[9]-a,0),!f&&24&n&&(n&=-25),ri((h?Ko:ti)(n&&1!=n?8==n||16==n?Nr(t,n,f):32!=n&&33!=n||u.length?qr.apply(P,o):Yr(t,n,r,e):Dr(t,n,r),o),t,n)}function ee(t,n,r,e,u,o){\n\tvar i=2&u,f=t.length,c=n.length;if(f!=c&&!(i&&c>f))return false;if((c=o.get(t))&&o.get(n))return c==n;var c=-1,a=true,l=1&u?new Kt:P;for(o.set(t,n),o.set(n,t);++c<f;){var s=t[c],h=n[c];if(e)var p=i?e(h,s,c,n,t,o):e(s,h,c,t,n,o);if(p!==P){if(p)continue;a=false;break}if(l){if(!_(n,function(t,n){if(!l.has(n)&&(s===t||r(s,t,e,u,o)))return l.add(n)})){a=false;break}}else if(s!==h&&!r(s,h,e,u,o)){a=false;break}}return o.delete(t),o.delete(n),a}function ue(t,n,r,e,u,o,i){switch(r){case\"[object DataView]\":if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)break;\n\tt=t.buffer,n=n.buffer;case\"[object ArrayBuffer]\":if(t.byteLength!=n.byteLength||!e(new ro(t),new ro(n)))break;return true;case\"[object Boolean]\":case\"[object Date]\":case\"[object Number]\":return Ye(+t,+n);case\"[object Error]\":return t.name==n.name&&t.message==n.message;case\"[object RegExp]\":case\"[object String]\":return t==n+\"\";case\"[object Map]\":var f=U;case\"[object Set]\":if(f||(f=D),t.size!=n.size&&!(2&o))break;return(r=i.get(t))?r==n:(o|=1,i.set(t,n),n=ee(f(t),f(n),e,u,o,i),i.delete(t),n);case\"[object Symbol]\":\n\tif(Fo)return Fo.call(t)==Fo.call(n)}return false}function oe(t){for(var n=t.name+\"\",r=Co[n],e=Gu.call(Co,n)?r.length:0;e--;){var u=r[e],o=u.func;if(null==o||o==t)return u.name}return n}function ie(t){return(Gu.call(It,\"placeholder\")?It:t).placeholder}function fe(){var t=It.iteratee||Su,t=t===Su?Vn:t;return arguments.length?t(arguments[0],arguments[1]):t}function ce(t,n){var r=t.__data__,e=typeof n;return(\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==n:null===n)?r[typeof n==\"string\"?\"string\":\"hash\"]:r.map;\n\t}function ae(t){for(var n=bu(t),r=n.length;r--;){var e=n[r],u=t[e];n[r]=[e,u,u===u&&!uu(u)]}return n}function le(t,n){var r=null==t?P:t[n];return Nn(r)?r:P}function se(t,n,r){n=ye(n,t)?[n]:Ar(n);for(var e,u=-1,o=n.length;++u<o;){var i=Ae(n[u]);if(!(e=null!=t&&r(t,i)))break;t=t[i]}return e?e:(o=t?t.length:0,!!o&&eu(o)&&ge(i,o)&&(Fi(t)||He(t)))}function he(t){var n=t.length,r=t.constructor(n);return n&&\"string\"==typeof t[0]&&Gu.call(t,\"index\")&&(r.index=t.index,r.input=t.input),r}function pe(t){return typeof t.constructor!=\"function\"||xe(t)?{}:bn(eo(t));\n\t}function _e(r,e,u,o){var i=r.constructor;switch(e){case\"[object ArrayBuffer]\":return Or(r);case\"[object Boolean]\":case\"[object Date]\":return new i((+r));case\"[object DataView]\":return e=o?Or(r.buffer):r.buffer,new r.constructor(e,r.byteOffset,r.byteLength);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":case\"[object Uint16Array]\":case\"[object Uint32Array]\":\n\treturn e=o?Or(r.buffer):r.buffer,new r.constructor(e,r.byteOffset,r.length);case\"[object Map]\":return e=o?u(U(r),true):U(r),h(e,t,new r.constructor);case\"[object Number]\":case\"[object String]\":return new i(r);case\"[object RegExp]\":return e=new r.constructor(r.source,yt.exec(r)),e.lastIndex=r.lastIndex,e;case\"[object Set]\":return e=o?u(D(r),true):D(r),h(e,n,new r.constructor);case\"[object Symbol]\":return Fo?Tu(Fo.call(r)):{}}}function ve(t){return Fi(t)||He(t)||!!(co&&t&&t[co])}function ge(t,n){return n=null==n?9007199254740991:n,\n\t!!n&&(typeof t==\"number\"||At.test(t))&&-1<t&&0==t%1&&t<n}function de(t,n,r){if(!uu(r))return false;var e=typeof n;return!!(\"number\"==e?Qe(r)&&ge(n,r.length):\"string\"==e&&n in r)&&Ye(r[n],t)}function ye(t,n){if(Fi(t))return false;var r=typeof t;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=t&&!au(t))||(ut.test(t)||!et.test(t)||null!=n&&t in Tu(n))}function be(t){var n=oe(t),r=It[n];return typeof r==\"function\"&&n in $t.prototype&&(t===r||(n=Yo(r),!!n&&t===n[0]))}function xe(t){var n=t&&t.constructor;\n\treturn t===(typeof n==\"function\"&&n.prototype||Zu)}function je(t,n){return function(r){return null!=r&&(r[t]===n&&(n!==P||t in Tu(r)))}}function we(t,n,r,e,u,o){return uu(t)&&uu(n)&&(o.set(n,t),Xn(t,n,P,we,o),o.delete(n)),t}function me(t,n){return 1==n.length?t:In(t,sr(n,0,-1))}function Ae(t){if(typeof t==\"string\"||au(t))return t;var n=t+\"\";return\"0\"==n&&1/t==-Z?\"-0\":n}function ke(t){if(null!=t){try{return Ku.call(t)}catch(t){}return t+\"\"}return\"\"}function Ee(t,n){return u(V,function(r){var e=\"_.\"+r[0];\n\tn&r[1]&&!c(t,e)&&t.push(e)}),t.sort()}function Oe(t){if(t instanceof $t)return t.clone();var n=new Lt(t.__wrapped__,t.__chain__);return n.__actions__=Wr(t.__actions__),n.__index__=t.__index__,n.__values__=t.__values__,n}function Se(t,n,r){var e=t?t.length:0;return e?(r=null==r?0:hu(r),0>r&&(r=xo(e+r,0)),g(t,fe(n,3),r)):-1}function Ie(t,n,r){var e=t?t.length:0;if(!e)return-1;var u=e-1;return r!==P&&(u=hu(r),u=0>r?xo(e+u,0):jo(u,e-1)),g(t,fe(n,3),u,true)}function Re(t){return t&&t.length?t[0]:P}function We(t){\n\tvar n=t?t.length:0;return n?t[n-1]:P}function Be(t,n){return t&&t.length&&n&&n.length?or(t,n):t}function Le(t){return t?Ao.call(t):t}function Ce(t){if(!t||!t.length)return[];var n=0;return t=f(t,function(t){if(Xe(t))return n=xo(t.length,n),true}),E(n,function(n){return l(t,j(n))})}function Ue(t,n){if(!t||!t.length)return[];var e=Ce(t);return null==n?e:l(e,function(t){return r(n,P,t)})}function Me(t){return t=It(t),t.__chain__=true,t}function ze(t,n){return n(t)}function De(){return this}function Te(t,n){\n\treturn(Fi(t)?u:Po)(t,fe(n,3))}function $e(t,n){return(Fi(t)?o:Zo)(t,fe(n,3))}function Fe(t,n){return(Fi(t)?l:Yn)(t,fe(n,3))}function Ne(t,n,r){var e=-1,u=lu(t),o=u.length,i=o-1;for(n=(r?de(t,n,r):n===P)?1:vn(hu(n),0,o);++e<n;)t=fr(e,i),r=u[t],u[t]=u[e],u[e]=r;return u.length=n,u}function Pe(t,n,r){return n=r?P:n,n=t&&null==n?t.length:n,re(t,128,P,P,P,P,n)}function Ze(t,n){var r;if(typeof n!=\"function\")throw new Nu(\"Expected a function\");return t=hu(t),function(){return 0<--t&&(r=n.apply(this,arguments)),\n\t1>=t&&(n=P),r}}function qe(t,n,r){return n=r?P:n,t=re(t,8,P,P,P,P,P,n),t.placeholder=qe.placeholder,t}function Ve(t,n,r){return n=r?P:n,t=re(t,16,P,P,P,P,P,n),t.placeholder=Ve.placeholder,t}function Ke(t,n,r){function e(n){var r=c,e=a;return c=a=P,_=n,s=t.apply(e,r)}function u(t){var r=t-p;return t-=_,p===P||r>=n||0>r||g&&t>=l}function o(){var t=Ri();if(u(t))return i(t);var r,e=ni;r=t-_,t=n-(t-p),r=g?jo(t,l-r):t,h=e(o,r)}function i(t){return h=P,d&&c?e(t):(c=a=P,s)}function f(){var t=Ri(),r=u(t);if(c=arguments,\n\ta=this,p=t,r){if(h===P)return _=t=p,h=ni(o,n),v?e(t):s;if(g)return h=ni(o,n),e(p)}return h===P&&(h=ni(o,n)),s}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=_u(n)||0,uu(r)&&(v=!!r.leading,l=(g=\"maxWait\"in r)?xo(_u(r.maxWait)||0,n):l,d=\"trailing\"in r?!!r.trailing:d),f.cancel=function(){h!==P&&Go(h),_=0,c=p=a=h=P},f.flush=function(){return h===P?s:i(Ri())},f}function Ge(t,n){function r(){var e=arguments,u=n?n.apply(this,e):e[0],o=r.cache;return o.has(u)?o.get(u):(e=t.apply(this,e),\n\tr.cache=o.set(u,e),e)}if(typeof t!=\"function\"||n&&typeof n!=\"function\")throw new Nu(\"Expected a function\");return r.cache=new(Ge.Cache||qt),r}function Je(t){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}function Ye(t,n){return t===n||t!==t&&n!==n}function He(t){return Xe(t)&&Gu.call(t,\"callee\")&&(!io.call(t,\"callee\")||\"[object Arguments]\"==Hu.call(t));\n\t}function Qe(t){return null!=t&&eu(t.length)&&!nu(t)}function Xe(t){return ou(t)&&Qe(t)}function tu(t){return!!ou(t)&&(\"[object Error]\"==Hu.call(t)||typeof t.message==\"string\"&&typeof t.name==\"string\")}function nu(t){return t=uu(t)?Hu.call(t):\"\",\"[object Function]\"==t||\"[object GeneratorFunction]\"==t}function ru(t){return typeof t==\"number\"&&t==hu(t)}function eu(t){return typeof t==\"number\"&&-1<t&&0==t%1&&9007199254740991>=t}function uu(t){var n=typeof t;return!!t&&(\"object\"==n||\"function\"==n)}function ou(t){\n\treturn!!t&&typeof t==\"object\"}function iu(t){return typeof t==\"number\"||ou(t)&&\"[object Number]\"==Hu.call(t)}function fu(t){return!(!ou(t)||\"[object Object]\"!=Hu.call(t)||C(t))&&(t=eo(t),null===t||(t=Gu.call(t,\"constructor\")&&t.constructor,typeof t==\"function\"&&t instanceof t&&Ku.call(t)==Yu))}function cu(t){return typeof t==\"string\"||!Fi(t)&&ou(t)&&\"[object String]\"==Hu.call(t)}function au(t){return typeof t==\"symbol\"||ou(t)&&\"[object Symbol]\"==Hu.call(t)}function lu(t){if(!t)return[];if(Qe(t))return cu(t)?F(t):Wr(t);\n\tif(uo&&t[uo]){t=t[uo]();for(var n,r=[];!(n=t.next()).done;)r.push(n.value);return r}return n=St(t),(\"[object Map]\"==n?U:\"[object Set]\"==n?D:wu)(t)}function su(t){return t?(t=_u(t),t===Z||t===-Z?1.7976931348623157e308*(0>t?-1:1):t===t?t:0):0===t?t:0}function hu(t){t=su(t);var n=t%1;return t===t?n?t-n:t:0}function pu(t){return t?vn(hu(t),0,4294967295):0}function _u(t){if(typeof t==\"number\")return t;if(au(t))return q;if(uu(t)&&(t=typeof t.valueOf==\"function\"?t.valueOf():t,t=uu(t)?t+\"\":t),typeof t!=\"string\")return 0===t?t:+t;\n\tt=t.replace(at,\"\");var n=jt.test(t);return n||mt.test(t)?Pt(t.slice(2),n?2:8):xt.test(t)?q:+t}function vu(t){return Br(t,xu(t))}function gu(t){return null==t?\"\":dr(t)}function du(t,n,r){return t=null==t?P:In(t,n),t===P?r:t}function yu(t,n){return null!=t&&se(t,n,Ln)}function bu(t){return Qe(t)?Yt(t):Kn(t)}function xu(t){return Qe(t)?Yt(t,true):Gn(t)}function ju(t,n){return null==t?{}:er(t,Rn(t,xu,Qo),fe(n))}function wu(t){return t?I(t,bu(t)):[]}function mu(t){return jf(gu(t).toLowerCase())}function Au(t){\n\treturn(t=gu(t))&&t.replace(kt,un).replace(Bt,\"\")}function ku(t,n,r){return t=gu(t),n=r?P:n,n===P?Mt.test(t)?t.match(Ct)||[]:t.match(vt)||[]:t.match(n)||[]}function Eu(t){return function(){return t}}function Ou(t){return t}function Su(t){return Vn(typeof t==\"function\"?t:gn(t,true))}function Iu(t,n,r){var e=bu(n),o=Sn(n,e);null!=r||uu(n)&&(o.length||!e.length)||(r=n,n=t,t=this,o=Sn(n,bu(n)));var i=!(uu(r)&&\"chain\"in r&&!r.chain),f=nu(t);return u(o,function(r){var e=n[r];t[r]=e,f&&(t.prototype[r]=function(){\n\tvar n=this.__chain__;if(i||n){var r=t(this.__wrapped__);return(r.__actions__=Wr(this.__actions__)).push({func:e,args:arguments,thisArg:t}),r.__chain__=n,r}return e.apply(t,s([this.value()],arguments))})}),t}function Ru(){}function Wu(t){return ye(t)?j(Ae(t)):ur(t)}function Bu(){return[]}function Lu(){return false}w=w?cn.defaults(Vt.Object(),w,cn.pick(Vt,zt)):Vt;var Cu=w.Array,Uu=w.Date,Mu=w.Error,zu=w.Function,Du=w.Math,Tu=w.Object,$u=w.RegExp,Fu=w.String,Nu=w.TypeError,Pu=Cu.prototype,Zu=Tu.prototype,qu=w[\"__core-js_shared__\"],Vu=function(){\n\tvar t=/[^.]+$/.exec(qu&&qu.keys&&qu.keys.IE_PROTO||\"\");return t?\"Symbol(src)_1.\"+t:\"\"}(),Ku=zu.prototype.toString,Gu=Zu.hasOwnProperty,Ju=0,Yu=Ku.call(Tu),Hu=Zu.toString,Qu=Vt._,Xu=$u(\"^\"+Ku.call(Gu).replace(ft,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),to=Jt?w.Buffer:P,no=w.Symbol,ro=w.Uint8Array,eo=M(Tu.getPrototypeOf,Tu),uo=no?no.iterator:P,oo=Tu.create,io=Zu.propertyIsEnumerable,fo=Pu.splice,co=no?no.isConcatSpreadable:P,ao=w.clearTimeout!==Vt.clearTimeout&&w.clearTimeout,lo=Uu&&Uu.now!==Vt.Date.now&&Uu.now,so=w.setTimeout!==Vt.setTimeout&&w.setTimeout,ho=Du.ceil,po=Du.floor,_o=Tu.getOwnPropertySymbols,vo=to?to.isBuffer:P,go=w.isFinite,yo=Pu.join,bo=M(Tu.keys,Tu),xo=Du.max,jo=Du.min,wo=w.parseInt,mo=Du.random,Ao=Pu.reverse,ko=le(w,\"DataView\"),Eo=le(w,\"Map\"),Oo=le(w,\"Promise\"),So=le(w,\"Set\"),Io=le(w,\"WeakMap\"),Ro=le(Tu,\"create\"),Wo=function(){\n\tvar t=le(Tu,\"defineProperty\"),n=le.name;return n&&2<n.length?t:P}(),Bo=Io&&new Io,Lo=!io.call({valueOf:1},\"valueOf\"),Co={},Uo=ke(ko),Mo=ke(Eo),zo=ke(Oo),Do=ke(So),To=ke(Io),$o=no?no.prototype:P,Fo=$o?$o.valueOf:P,No=$o?$o.toString:P;It.templateSettings={escape:tt,evaluate:nt,interpolate:rt,variable:\"\",imports:{_:It}},It.prototype=Rt.prototype,It.prototype.constructor=It,Lt.prototype=bn(Rt.prototype),Lt.prototype.constructor=Lt,$t.prototype=bn(Rt.prototype),$t.prototype.constructor=$t,Ft.prototype.clear=function(){\n\tthis.__data__=Ro?Ro(null):{}},Ft.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},Ft.prototype.get=function(t){var n=this.__data__;return Ro?(t=n[t],\"__lodash_hash_undefined__\"===t?P:t):Gu.call(n,t)?n[t]:P},Ft.prototype.has=function(t){var n=this.__data__;return Ro?n[t]!==P:Gu.call(n,t)},Ft.prototype.set=function(t,n){return this.__data__[t]=Ro&&n===P?\"__lodash_hash_undefined__\":n,this},Zt.prototype.clear=function(){this.__data__=[]},Zt.prototype.delete=function(t){var n=this.__data__;\n\treturn t=sn(n,t),!(0>t)&&(t==n.length-1?n.pop():fo.call(n,t,1),true)},Zt.prototype.get=function(t){var n=this.__data__;return t=sn(n,t),0>t?P:n[t][1]},Zt.prototype.has=function(t){return-1<sn(this.__data__,t)},Zt.prototype.set=function(t,n){var r=this.__data__,e=sn(r,t);return 0>e?r.push([t,n]):r[e][1]=n,this},qt.prototype.clear=function(){this.__data__={hash:new Ft,map:new(Eo||Zt),string:new Ft}},qt.prototype.delete=function(t){return ce(this,t).delete(t)},qt.prototype.get=function(t){return ce(this,t).get(t);\n\t},qt.prototype.has=function(t){return ce(this,t).has(t)},qt.prototype.set=function(t,n){return ce(this,t).set(t,n),this},Kt.prototype.add=Kt.prototype.push=function(t){return this.__data__.set(t,\"__lodash_hash_undefined__\"),this},Kt.prototype.has=function(t){return this.__data__.has(t)},Gt.prototype.clear=function(){this.__data__=new Zt},Gt.prototype.delete=function(t){return this.__data__.delete(t)},Gt.prototype.get=function(t){return this.__data__.get(t)},Gt.prototype.has=function(t){return this.__data__.has(t);\n\t},Gt.prototype.set=function(t,n){var r=this.__data__;if(r instanceof Zt){if(r=r.__data__,!Eo||199>r.length)return r.push([t,n]),this;r=this.__data__=new qt(r)}return r.set(t,n),this};var Po=Mr(En),Zo=Mr(On,true),qo=zr(),Vo=zr(true),Ko=Bo?function(t,n){return Bo.set(t,n),t}:Ou,Go=ao||function(t){return Vt.clearTimeout(t)},Jo=So&&1/D(new So([,-0]))[1]==Z?function(t){return new So(t)}:Ru,Yo=Bo?function(t){return Bo.get(t)}:Ru,Ho=_o?M(_o,Tu):Bu,Qo=_o?function(t){for(var n=[];t;)s(n,Ho(t)),t=eo(t);return n;\n\t}:Bu;(ko&&\"[object DataView]\"!=St(new ko(new ArrayBuffer(1)))||Eo&&\"[object Map]\"!=St(new Eo)||Oo&&\"[object Promise]\"!=St(Oo.resolve())||So&&\"[object Set]\"!=St(new So)||Io&&\"[object WeakMap]\"!=St(new Io))&&(St=function(t){var n=Hu.call(t);if(t=(t=\"[object Object]\"==n?t.constructor:P)?ke(t):P)switch(t){case Uo:return\"[object DataView]\";case Mo:return\"[object Map]\";case zo:return\"[object Promise]\";case Do:return\"[object Set]\";case To:return\"[object WeakMap]\"}return n});var Xo=qu?nu:Lu,ti=function(){\n\tvar t=0,n=0;return function(r,e){var u=Ri(),o=16-(u-n);if(n=u,0<o){if(150<=++t)return r}else t=0;return Ko(r,e)}}(),ni=so||function(t,n){return Vt.setTimeout(t,n)},ri=Wo?function(t,n,r){n+=\"\";var e;e=(e=n.match(pt))?e[1].split(_t):[],r=Ee(e,r),e=r.length;var u=e-1;return r[u]=(1<e?\"& \":\"\")+r[u],r=r.join(2<e?\", \":\" \"),n=n.replace(ht,\"{\\n/* [wrapped with \"+r+\"] */\\n\"),Wo(t,\"toString\",{configurable:true,enumerable:false,value:Eu(n)})}:Ou,ei=Ge(function(t){t=gu(t);var n=[];return ot.test(t)&&n.push(\"\"),t.replace(it,function(t,r,e,u){\n\tn.push(e?u.replace(gt,\"$1\"):r||t)}),n}),ui=ar(function(t,n){return Xe(t)?jn(t,kn(n,1,Xe,true)):[]}),oi=ar(function(t,n){var r=We(n);return Xe(r)&&(r=P),Xe(t)?jn(t,kn(n,1,Xe,true),fe(r,2)):[]}),ii=ar(function(t,n){var r=We(n);return Xe(r)&&(r=P),Xe(t)?jn(t,kn(n,1,Xe,true),P,r):[]}),fi=ar(function(t){var n=l(t,mr);return n.length&&n[0]===t[0]?Cn(n):[]}),ci=ar(function(t){var n=We(t),r=l(t,mr);return n===We(r)?n=P:r.pop(),r.length&&r[0]===t[0]?Cn(r,fe(n,2)):[]}),ai=ar(function(t){var n=We(t),r=l(t,mr);return n===We(r)?n=P:r.pop(),\n\tr.length&&r[0]===t[0]?Cn(r,P,n):[]}),li=ar(Be),si=ar(function(t,n){n=kn(n,1);var r=t?t.length:0,e=_n(t,n);return ir(t,l(n,function(t){return ge(t,r)?+t:t}).sort(Sr)),e}),hi=ar(function(t){return yr(kn(t,1,Xe,true))}),pi=ar(function(t){var n=We(t);return Xe(n)&&(n=P),yr(kn(t,1,Xe,true),fe(n,2))}),_i=ar(function(t){var n=We(t);return Xe(n)&&(n=P),yr(kn(t,1,Xe,true),P,n)}),vi=ar(function(t,n){return Xe(t)?jn(t,n):[]}),gi=ar(function(t){return jr(f(t,Xe))}),di=ar(function(t){var n=We(t);return Xe(n)&&(n=P),\n\tjr(f(t,Xe),fe(n,2))}),yi=ar(function(t){var n=We(t);return Xe(n)&&(n=P),jr(f(t,Xe),P,n)}),bi=ar(Ce),xi=ar(function(t){var n=t.length,n=1<n?t[n-1]:P,n=typeof n==\"function\"?(t.pop(),n):P;return Ue(t,n)}),ji=ar(function(t){function n(n){return _n(n,t)}t=kn(t,1);var r=t.length,e=r?t[0]:0,u=this.__wrapped__;return!(1<r||this.__actions__.length)&&u instanceof $t&&ge(e)?(u=u.slice(e,+e+(r?1:0)),u.__actions__.push({func:ze,args:[n],thisArg:P}),new Lt(u,this.__chain__).thru(function(t){return r&&!t.length&&t.push(P),\n\tt})):this.thru(n)}),wi=Cr(function(t,n,r){Gu.call(t,r)?++t[r]:t[r]=1}),mi=Pr(Se),Ai=Pr(Ie),ki=Cr(function(t,n,r){Gu.call(t,r)?t[r].push(n):t[r]=[n]}),Ei=ar(function(t,n,e){var u=-1,o=typeof n==\"function\",i=ye(n),f=Qe(t)?Cu(t.length):[];return Po(t,function(t){var c=o?n:i&&null!=t?t[n]:P;f[++u]=c?r(c,t,e):Mn(t,n,e)}),f}),Oi=Cr(function(t,n,r){t[r]=n}),Si=Cr(function(t,n,r){t[r?0:1].push(n)},function(){return[[],[]]}),Ii=ar(function(t,n){if(null==t)return[];var r=n.length;return 1<r&&de(t,n[0],n[1])?n=[]:2<r&&de(n[0],n[1],n[2])&&(n=[n[0]]),\n\tnr(t,kn(n,1),[])}),Ri=lo||function(){return Vt.Date.now()},Wi=ar(function(t,n,r){var e=1;if(r.length)var u=z(r,ie(Wi)),e=32|e;return re(t,e,n,r,u)}),Bi=ar(function(t,n,r){var e=3;if(r.length)var u=z(r,ie(Bi)),e=32|e;return re(n,e,t,r,u)}),Li=ar(function(t,n){return xn(t,1,n)}),Ci=ar(function(t,n,r){return xn(t,_u(n)||0,r)});Ge.Cache=qt;var Ui=ar(function(t,n){n=1==n.length&&Fi(n[0])?l(n[0],S(fe())):l(kn(n,1),S(fe()));var e=n.length;return ar(function(u){for(var o=-1,i=jo(u.length,e);++o<i;)u[o]=n[o].call(this,u[o]);\n\treturn r(t,this,u)})}),Mi=ar(function(t,n){var r=z(n,ie(Mi));return re(t,32,P,n,r)}),zi=ar(function(t,n){var r=z(n,ie(zi));return re(t,64,P,n,r)}),Di=ar(function(t,n){return re(t,256,P,P,P,kn(n,1))}),Ti=Qr(Wn),$i=Qr(function(t,n){return t>=n}),Fi=Cu.isArray,Ni=Ht?S(Ht):zn,Pi=vo||Lu,Zi=Qt?S(Qt):Dn,qi=Xt?S(Xt):$n,Vi=tn?S(tn):Pn,Ki=nn?S(nn):Zn,Gi=rn?S(rn):qn,Ji=Qr(Jn),Yi=Qr(function(t,n){return t<=n}),Hi=Ur(function(t,n){if(Lo||xe(n)||Qe(n))Br(n,bu(n),t);else for(var r in n)Gu.call(n,r)&&ln(t,r,n[r]);\n\t}),Qi=Ur(function(t,n){Br(n,xu(n),t)}),Xi=Ur(function(t,n,r,e){Br(n,xu(n),t,e)}),tf=Ur(function(t,n,r,e){Br(n,bu(n),t,e)}),nf=ar(function(t,n){return _n(t,kn(n,1))}),rf=ar(function(t){return t.push(P,en),r(Xi,P,t)}),ef=ar(function(t){return t.push(P,we),r(af,P,t)}),uf=Vr(function(t,n,r){t[n]=r},Eu(Ou)),of=Vr(function(t,n,r){Gu.call(t,n)?t[n].push(r):t[n]=[r]},fe),ff=ar(Mn),cf=Ur(function(t,n,r){Xn(t,n,r)}),af=Ur(function(t,n,r,e){Xn(t,n,r,e)}),lf=ar(function(t,n){return null==t?{}:(n=l(kn(n,1),Ae),\n\trr(t,jn(Rn(t,xu,Qo),n)))}),sf=ar(function(t,n){return null==t?{}:rr(t,l(kn(n,1),Ae))}),hf=ne(bu),pf=ne(xu),_f=$r(function(t,n,r){return n=n.toLowerCase(),t+(r?mu(n):n)}),vf=$r(function(t,n,r){return t+(r?\"-\":\"\")+n.toLowerCase()}),gf=$r(function(t,n,r){return t+(r?\" \":\"\")+n.toLowerCase()}),df=Tr(\"toLowerCase\"),yf=$r(function(t,n,r){return t+(r?\"_\":\"\")+n.toLowerCase()}),bf=$r(function(t,n,r){return t+(r?\" \":\"\")+jf(n)}),xf=$r(function(t,n,r){return t+(r?\" \":\"\")+n.toUpperCase()}),jf=Tr(\"toUpperCase\"),wf=ar(function(t,n){\n\ttry{return r(t,P,n)}catch(t){return tu(t)?t:new Mu(t)}}),mf=ar(function(t,n){return u(kn(n,1),function(n){n=Ae(n),t[n]=Wi(t[n],t)}),t}),Af=Zr(),kf=Zr(true),Ef=ar(function(t,n){return function(r){return Mn(r,t,n)}}),Of=ar(function(t,n){return function(r){return Mn(t,r,n)}}),Sf=Gr(l),If=Gr(i),Rf=Gr(_),Wf=Hr(),Bf=Hr(true),Lf=Kr(function(t,n){return t+n},0),Cf=te(\"ceil\"),Uf=Kr(function(t,n){return t/n},1),Mf=te(\"floor\"),zf=Kr(function(t,n){return t*n},1),Df=te(\"round\"),Tf=Kr(function(t,n){return t-n},0);return It.after=function(t,n){\n\tif(typeof n!=\"function\")throw new Nu(\"Expected a function\");return t=hu(t),function(){if(1>--t)return n.apply(this,arguments)}},It.ary=Pe,It.assign=Hi,It.assignIn=Qi,It.assignInWith=Xi,It.assignWith=tf,It.at=nf,It.before=Ze,It.bind=Wi,It.bindAll=mf,It.bindKey=Bi,It.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return Fi(t)?t:[t]},It.chain=Me,It.chunk=function(t,n,r){if(n=(r?de(t,n,r):n===P)?1:xo(hu(n),0),r=t?t.length:0,!r||1>n)return[];for(var e=0,u=0,o=Cu(ho(r/n));e<r;)o[u++]=sr(t,e,e+=n);\n\treturn o},It.compact=function(t){for(var n=-1,r=t?t.length:0,e=0,u=[];++n<r;){var o=t[n];o&&(u[e++]=o)}return u},It.concat=function(){for(var t=arguments.length,n=Cu(t?t-1:0),r=arguments[0],e=t;e--;)n[e-1]=arguments[e];return t?s(Fi(r)?Wr(r):[r],kn(n,1)):[]},It.cond=function(t){var n=t?t.length:0,e=fe();return t=n?l(t,function(t){if(\"function\"!=typeof t[1])throw new Nu(\"Expected a function\");return[e(t[0]),t[1]]}):[],ar(function(e){for(var u=-1;++u<n;){var o=t[u];if(r(o[0],this,e))return r(o[1],this,e);\n\t}})},It.conforms=function(t){return dn(gn(t,true))},It.constant=Eu,It.countBy=wi,It.create=function(t,n){var r=bn(t);return n?pn(r,n):r},It.curry=qe,It.curryRight=Ve,It.debounce=Ke,It.defaults=rf,It.defaultsDeep=ef,It.defer=Li,It.delay=Ci,It.difference=ui,It.differenceBy=oi,It.differenceWith=ii,It.drop=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),sr(t,0>n?0:n,e)):[]},It.dropRight=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),n=e-n,sr(t,0,0>n?0:n)):[]},It.dropRightWhile=function(t,n){\n\treturn t&&t.length?br(t,fe(n,3),true,true):[]},It.dropWhile=function(t,n){return t&&t.length?br(t,fe(n,3),true):[]},It.fill=function(t,n,r,e){var u=t?t.length:0;if(!u)return[];for(r&&typeof r!=\"number\"&&de(t,n,r)&&(r=0,e=u),u=t.length,r=hu(r),0>r&&(r=-r>u?0:u+r),e=e===P||e>u?u:hu(e),0>e&&(e+=u),e=r>e?0:pu(e);r<e;)t[r++]=n;return t},It.filter=function(t,n){return(Fi(t)?f:An)(t,fe(n,3))},It.flatMap=function(t,n){return kn(Fe(t,n),1)},It.flatMapDeep=function(t,n){return kn(Fe(t,n),Z)},It.flatMapDepth=function(t,n,r){\n\treturn r=r===P?1:hu(r),kn(Fe(t,n),r)},It.flatten=function(t){return t&&t.length?kn(t,1):[]},It.flattenDeep=function(t){return t&&t.length?kn(t,Z):[]},It.flattenDepth=function(t,n){return t&&t.length?(n=n===P?1:hu(n),kn(t,n)):[]},It.flip=function(t){return re(t,512)},It.flow=Af,It.flowRight=kf,It.fromPairs=function(t){for(var n=-1,r=t?t.length:0,e={};++n<r;){var u=t[n];e[u[0]]=u[1]}return e},It.functions=function(t){return null==t?[]:Sn(t,bu(t))},It.functionsIn=function(t){return null==t?[]:Sn(t,xu(t));\n\t},It.groupBy=ki,It.initial=function(t){return t&&t.length?sr(t,0,-1):[]},It.intersection=fi,It.intersectionBy=ci,It.intersectionWith=ai,It.invert=uf,It.invertBy=of,It.invokeMap=Ei,It.iteratee=Su,It.keyBy=Oi,It.keys=bu,It.keysIn=xu,It.map=Fe,It.mapKeys=function(t,n){var r={};return n=fe(n,3),En(t,function(t,e,u){r[n(t,e,u)]=t}),r},It.mapValues=function(t,n){var r={};return n=fe(n,3),En(t,function(t,e,u){r[e]=n(t,e,u)}),r},It.matches=function(t){return Hn(gn(t,true))},It.matchesProperty=function(t,n){\n\treturn Qn(t,gn(n,true))},It.memoize=Ge,It.merge=cf,It.mergeWith=af,It.method=Ef,It.methodOf=Of,It.mixin=Iu,It.negate=Je,It.nthArg=function(t){return t=hu(t),ar(function(n){return tr(n,t)})},It.omit=lf,It.omitBy=function(t,n){return ju(t,Je(fe(n)))},It.once=function(t){return Ze(2,t)},It.orderBy=function(t,n,r,e){return null==t?[]:(Fi(n)||(n=null==n?[]:[n]),r=e?P:r,Fi(r)||(r=null==r?[]:[r]),nr(t,n,r))},It.over=Sf,It.overArgs=Ui,It.overEvery=If,It.overSome=Rf,It.partial=Mi,It.partialRight=zi,It.partition=Si,\n\tIt.pick=sf,It.pickBy=ju,It.property=Wu,It.propertyOf=function(t){return function(n){return null==t?P:In(t,n)}},It.pull=li,It.pullAll=Be,It.pullAllBy=function(t,n,r){return t&&t.length&&n&&n.length?or(t,n,fe(r,2)):t},It.pullAllWith=function(t,n,r){return t&&t.length&&n&&n.length?or(t,n,P,r):t},It.pullAt=si,It.range=Wf,It.rangeRight=Bf,It.rearg=Di,It.reject=function(t,n){return(Fi(t)?f:An)(t,Je(fe(n,3)))},It.remove=function(t,n){var r=[];if(!t||!t.length)return r;var e=-1,u=[],o=t.length;for(n=fe(n,3);++e<o;){\n\tvar i=t[e];n(i,e,t)&&(r.push(i),u.push(e))}return ir(t,u),r},It.rest=function(t,n){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=n===P?n:hu(n),ar(t,n)},It.reverse=Le,It.sampleSize=Ne,It.set=function(t,n,r){return null==t?t:lr(t,n,r)},It.setWith=function(t,n,r,e){return e=typeof e==\"function\"?e:P,null==t?t:lr(t,n,r,e)},It.shuffle=function(t){return Ne(t,4294967295)},It.slice=function(t,n,r){var e=t?t.length:0;return e?(r&&typeof r!=\"number\"&&de(t,n,r)?(n=0,r=e):(n=null==n?0:hu(n),\n\tr=r===P?e:hu(r)),sr(t,n,r)):[]},It.sortBy=Ii,It.sortedUniq=function(t){return t&&t.length?vr(t):[]},It.sortedUniqBy=function(t,n){return t&&t.length?vr(t,fe(n,2)):[]},It.split=function(t,n,r){return r&&typeof r!=\"number\"&&de(t,n,r)&&(n=r=P),r=r===P?4294967295:r>>>0,r?(t=gu(t))&&(typeof n==\"string\"||null!=n&&!Vi(n))&&(n=dr(n),!n&&Ut.test(t))?kr(F(t),0,r):t.split(n,r):[]},It.spread=function(t,n){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=n===P?0:xo(hu(n),0),ar(function(e){\n\tvar u=e[n];return e=kr(e,0,n),u&&s(e,u),r(t,this,e)})},It.tail=function(t){var n=t?t.length:0;return n?sr(t,1,n):[]},It.take=function(t,n,r){return t&&t.length?(n=r||n===P?1:hu(n),sr(t,0,0>n?0:n)):[]},It.takeRight=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),n=e-n,sr(t,0>n?0:n,e)):[]},It.takeRightWhile=function(t,n){return t&&t.length?br(t,fe(n,3),false,true):[]},It.takeWhile=function(t,n){return t&&t.length?br(t,fe(n,3)):[]},It.tap=function(t,n){return n(t),t},It.throttle=function(t,n,r){\n\tvar e=true,u=true;if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return uu(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),Ke(t,n,{leading:e,maxWait:n,trailing:u})},It.thru=ze,It.toArray=lu,It.toPairs=hf,It.toPairsIn=pf,It.toPath=function(t){return Fi(t)?l(t,Ae):au(t)?[t]:Wr(ei(t))},It.toPlainObject=vu,It.transform=function(t,n,r){var e=Fi(t)||Gi(t);if(n=fe(n,4),null==r)if(e||uu(t)){var o=t.constructor;r=e?Fi(t)?new o:[]:nu(o)?bn(eo(t)):{}}else r={};return(e?u:En)(t,function(t,e,u){\n\treturn n(r,t,e,u)}),r},It.unary=function(t){return Pe(t,1)},It.union=hi,It.unionBy=pi,It.unionWith=_i,It.uniq=function(t){return t&&t.length?yr(t):[]},It.uniqBy=function(t,n){return t&&t.length?yr(t,fe(n,2)):[]},It.uniqWith=function(t,n){return t&&t.length?yr(t,P,n):[]},It.unset=function(t,n){var r;if(null==t)r=true;else{r=t;var e=n,e=ye(e,r)?[e]:Ar(e);r=me(r,e),e=Ae(We(e)),r=!(null!=r&&Gu.call(r,e))||delete r[e]}return r},It.unzip=Ce,It.unzipWith=Ue,It.update=function(t,n,r){return null==t?t:lr(t,n,(typeof r==\"function\"?r:Ou)(In(t,n)),void 0);\n\t},It.updateWith=function(t,n,r,e){return e=typeof e==\"function\"?e:P,null!=t&&(t=lr(t,n,(typeof r==\"function\"?r:Ou)(In(t,n)),e)),t},It.values=wu,It.valuesIn=function(t){return null==t?[]:I(t,xu(t))},It.without=vi,It.words=ku,It.wrap=function(t,n){return n=null==n?Ou:n,Mi(n,t)},It.xor=gi,It.xorBy=di,It.xorWith=yi,It.zip=bi,It.zipObject=function(t,n){return wr(t||[],n||[],ln)},It.zipObjectDeep=function(t,n){return wr(t||[],n||[],lr)},It.zipWith=xi,It.entries=hf,It.entriesIn=pf,It.extend=Qi,It.extendWith=Xi,\n\tIu(It,It),It.add=Lf,It.attempt=wf,It.camelCase=_f,It.capitalize=mu,It.ceil=Cf,It.clamp=function(t,n,r){return r===P&&(r=n,n=P),r!==P&&(r=_u(r),r=r===r?r:0),n!==P&&(n=_u(n),n=n===n?n:0),vn(_u(t),n,r)},It.clone=function(t){return gn(t,false,true)},It.cloneDeep=function(t){return gn(t,true,true)},It.cloneDeepWith=function(t,n){return gn(t,true,true,n)},It.cloneWith=function(t,n){return gn(t,false,true,n)},It.conformsTo=function(t,n){return null==n||yn(t,n,bu(n))},It.deburr=Au,It.defaultTo=function(t,n){return null==t||t!==t?n:t;\n\t},It.divide=Uf,It.endsWith=function(t,n,r){t=gu(t),n=dr(n);var e=t.length,e=r=r===P?e:vn(hu(r),0,e);return r-=n.length,0<=r&&t.slice(r,e)==n},It.eq=Ye,It.escape=function(t){return(t=gu(t))&&X.test(t)?t.replace(H,on):t},It.escapeRegExp=function(t){return(t=gu(t))&&ct.test(t)?t.replace(ft,\"\\\\$&\"):t},It.every=function(t,n,r){var e=Fi(t)?i:wn;return r&&de(t,n,r)&&(n=P),e(t,fe(n,3))},It.find=mi,It.findIndex=Se,It.findKey=function(t,n){return v(t,fe(n,3),En)},It.findLast=Ai,It.findLastIndex=Ie,It.findLastKey=function(t,n){\n\treturn v(t,fe(n,3),On)},It.floor=Mf,It.forEach=Te,It.forEachRight=$e,It.forIn=function(t,n){return null==t?t:qo(t,fe(n,3),xu)},It.forInRight=function(t,n){return null==t?t:Vo(t,fe(n,3),xu)},It.forOwn=function(t,n){return t&&En(t,fe(n,3))},It.forOwnRight=function(t,n){return t&&On(t,fe(n,3))},It.get=du,It.gt=Ti,It.gte=$i,It.has=function(t,n){return null!=t&&se(t,n,Bn)},It.hasIn=yu,It.head=Re,It.identity=Ou,It.includes=function(t,n,r,e){return t=Qe(t)?t:wu(t),r=r&&!e?hu(r):0,e=t.length,0>r&&(r=xo(e+r,0)),\n\tcu(t)?r<=e&&-1<t.indexOf(n,r):!!e&&-1<d(t,n,r)},It.indexOf=function(t,n,r){var e=t?t.length:0;return e?(r=null==r?0:hu(r),0>r&&(r=xo(e+r,0)),d(t,n,r)):-1},It.inRange=function(t,n,r){return n=su(n),r===P?(r=n,n=0):r=su(r),t=_u(t),t>=jo(n,r)&&t<xo(n,r)},It.invoke=ff,It.isArguments=He,It.isArray=Fi,It.isArrayBuffer=Ni,It.isArrayLike=Qe,It.isArrayLikeObject=Xe,It.isBoolean=function(t){return true===t||false===t||ou(t)&&\"[object Boolean]\"==Hu.call(t)},It.isBuffer=Pi,It.isDate=Zi,It.isElement=function(t){return!!t&&1===t.nodeType&&ou(t)&&!fu(t);\n\t},It.isEmpty=function(t){if(Qe(t)&&(Fi(t)||typeof t==\"string\"||typeof t.splice==\"function\"||Pi(t)||He(t)))return!t.length;var n=St(t);if(\"[object Map]\"==n||\"[object Set]\"==n)return!t.size;if(Lo||xe(t))return!bo(t).length;for(var r in t)if(Gu.call(t,r))return false;return true},It.isEqual=function(t,n){return Tn(t,n)},It.isEqualWith=function(t,n,r){var e=(r=typeof r==\"function\"?r:P)?r(t,n):P;return e===P?Tn(t,n,r):!!e},It.isError=tu,It.isFinite=function(t){return typeof t==\"number\"&&go(t)},It.isFunction=nu,\n\tIt.isInteger=ru,It.isLength=eu,It.isMap=qi,It.isMatch=function(t,n){return t===n||Fn(t,n,ae(n))},It.isMatchWith=function(t,n,r){return r=typeof r==\"function\"?r:P,Fn(t,n,ae(n),r)},It.isNaN=function(t){return iu(t)&&t!=+t},It.isNative=function(t){if(Xo(t))throw new Mu(\"This method is not supported with core-js. Try https://github.com/es-shims.\");return Nn(t)},It.isNil=function(t){return null==t},It.isNull=function(t){return null===t},It.isNumber=iu,It.isObject=uu,It.isObjectLike=ou,It.isPlainObject=fu,\n\tIt.isRegExp=Vi,It.isSafeInteger=function(t){return ru(t)&&-9007199254740991<=t&&9007199254740991>=t},It.isSet=Ki,It.isString=cu,It.isSymbol=au,It.isTypedArray=Gi,It.isUndefined=function(t){return t===P},It.isWeakMap=function(t){return ou(t)&&\"[object WeakMap]\"==St(t)},It.isWeakSet=function(t){return ou(t)&&\"[object WeakSet]\"==Hu.call(t)},It.join=function(t,n){return t?yo.call(t,n):\"\"},It.kebabCase=vf,It.last=We,It.lastIndexOf=function(t,n,r){var e=t?t.length:0;if(!e)return-1;var u=e;if(r!==P&&(u=hu(r),\n\tu=(0>u?xo(e+u,0):jo(u,e-1))+1),n!==n)return g(t,b,u-1,true);for(;u--;)if(t[u]===n)return u;return-1},It.lowerCase=gf,It.lowerFirst=df,It.lt=Ji,It.lte=Yi,It.max=function(t){return t&&t.length?mn(t,Ou,Wn):P},It.maxBy=function(t,n){return t&&t.length?mn(t,fe(n,2),Wn):P},It.mean=function(t){return x(t,Ou)},It.meanBy=function(t,n){return x(t,fe(n,2))},It.min=function(t){return t&&t.length?mn(t,Ou,Jn):P},It.minBy=function(t,n){return t&&t.length?mn(t,fe(n,2),Jn):P},It.stubArray=Bu,It.stubFalse=Lu,It.stubObject=function(){\n\treturn{}},It.stubString=function(){return\"\"},It.stubTrue=function(){return true},It.multiply=zf,It.nth=function(t,n){return t&&t.length?tr(t,hu(n)):P},It.noConflict=function(){return Vt._===this&&(Vt._=Qu),this},It.noop=Ru,It.now=Ri,It.pad=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return!n||e>=n?t:(n=(n-e)/2,Jr(po(n),r)+t+Jr(ho(n),r))},It.padEnd=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return n&&e<n?t+Jr(n-e,r):t},It.padStart=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return n&&e<n?Jr(n-e,r)+t:t;\n\t},It.parseInt=function(t,n,r){return r||null==n?n=0:n&&(n=+n),t=gu(t).replace(at,\"\"),wo(t,n||(bt.test(t)?16:10))},It.random=function(t,n,r){if(r&&typeof r!=\"boolean\"&&de(t,n,r)&&(n=r=P),r===P&&(typeof n==\"boolean\"?(r=n,n=P):typeof t==\"boolean\"&&(r=t,t=P)),t===P&&n===P?(t=0,n=1):(t=su(t),n===P?(n=t,t=0):n=su(n)),t>n){var e=t;t=n,n=e}return r||t%1||n%1?(r=mo(),jo(t+r*(n-t+Nt(\"1e-\"+((r+\"\").length-1))),n)):fr(t,n)},It.reduce=function(t,n,r){var e=Fi(t)?h:m,u=3>arguments.length;return e(t,fe(n,4),r,u,Po);\n\t},It.reduceRight=function(t,n,r){var e=Fi(t)?p:m,u=3>arguments.length;return e(t,fe(n,4),r,u,Zo)},It.repeat=function(t,n,r){return n=(r?de(t,n,r):n===P)?1:hu(n),cr(gu(t),n)},It.replace=function(){var t=arguments,n=gu(t[0]);return 3>t.length?n:n.replace(t[1],t[2])},It.result=function(t,n,r){n=ye(n,t)?[n]:Ar(n);var e=-1,u=n.length;for(u||(t=P,u=1);++e<u;){var o=null==t?P:t[Ae(n[e])];o===P&&(e=u,o=r),t=nu(o)?o.call(t):o}return t},It.round=Df,It.runInContext=N,It.sample=function(t){t=Qe(t)?t:wu(t);var n=t.length;\n\treturn 0<n?t[fr(0,n-1)]:P},It.size=function(t){if(null==t)return 0;if(Qe(t))return cu(t)?$(t):t.length;var n=St(t);return\"[object Map]\"==n||\"[object Set]\"==n?t.size:Kn(t).length},It.snakeCase=yf,It.some=function(t,n,r){var e=Fi(t)?_:hr;return r&&de(t,n,r)&&(n=P),e(t,fe(n,3))},It.sortedIndex=function(t,n){return pr(t,n)},It.sortedIndexBy=function(t,n,r){return _r(t,n,fe(r,2))},It.sortedIndexOf=function(t,n){var r=t?t.length:0;if(r){var e=pr(t,n);if(e<r&&Ye(t[e],n))return e}return-1},It.sortedLastIndex=function(t,n){\n\treturn pr(t,n,true)},It.sortedLastIndexBy=function(t,n,r){return _r(t,n,fe(r,2),true)},It.sortedLastIndexOf=function(t,n){if(t&&t.length){var r=pr(t,n,true)-1;if(Ye(t[r],n))return r}return-1},It.startCase=bf,It.startsWith=function(t,n,r){return t=gu(t),r=vn(hu(r),0,t.length),n=dr(n),t.slice(r,r+n.length)==n},It.subtract=Tf,It.sum=function(t){return t&&t.length?k(t,Ou):0},It.sumBy=function(t,n){return t&&t.length?k(t,fe(n,2)):0},It.template=function(t,n,r){var e=It.templateSettings;r&&de(t,n,r)&&(n=P),t=gu(t),\n\tn=Xi({},n,e,en),r=Xi({},n.imports,e.imports,en);var u,o,i=bu(r),f=I(r,i),c=0;r=n.interpolate||Et;var a=\"__p+='\";r=$u((n.escape||Et).source+\"|\"+r.source+\"|\"+(r===rt?dt:Et).source+\"|\"+(n.evaluate||Et).source+\"|$\",\"g\");var l=\"sourceURL\"in n?\"//# sourceURL=\"+n.sourceURL+\"\\n\":\"\";if(t.replace(r,function(n,r,e,i,f,l){return e||(e=i),a+=t.slice(c,l).replace(Ot,L),r&&(u=true,a+=\"'+__e(\"+r+\")+'\"),f&&(o=true,a+=\"';\"+f+\";\\n__p+='\"),e&&(a+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),c=l+n.length,n}),a+=\"';\",(n=n.variable)||(a=\"with(obj){\"+a+\"}\"),\n\ta=(o?a.replace(K,\"\"):a).replace(G,\"$1\").replace(J,\"$1;\"),a=\"function(\"+(n||\"obj\")+\"){\"+(n?\"\":\"obj||(obj={});\")+\"var __t,__p=''\"+(u?\",__e=_.escape\":\"\")+(o?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+a+\"return __p}\",n=wf(function(){return zu(i,l+\"return \"+a).apply(P,f)}),n.source=a,tu(n))throw n;return n},It.times=function(t,n){if(t=hu(t),1>t||9007199254740991<t)return[];var r=4294967295,e=jo(t,4294967295);for(n=fe(n),t-=4294967295,e=E(e,n);++r<t;)n(r);return e},It.toFinite=su,\n\tIt.toInteger=hu,It.toLength=pu,It.toLower=function(t){return gu(t).toLowerCase()},It.toNumber=_u,It.toSafeInteger=function(t){return vn(hu(t),-9007199254740991,9007199254740991)},It.toString=gu,It.toUpper=function(t){return gu(t).toUpperCase()},It.trim=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(at,\"\"):t&&(n=dr(n))?(t=F(t),r=F(n),n=W(t,r),r=B(t,r)+1,kr(t,n,r).join(\"\")):t},It.trimEnd=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(st,\"\"):t&&(n=dr(n))?(t=F(t),n=B(t,F(n))+1,kr(t,0,n).join(\"\")):t;\n\t},It.trimStart=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(lt,\"\"):t&&(n=dr(n))?(t=F(t),n=W(t,F(n)),kr(t,n).join(\"\")):t},It.truncate=function(t,n){var r=30,e=\"...\";if(uu(n))var u=\"separator\"in n?n.separator:u,r=\"length\"in n?hu(n.length):r,e=\"omission\"in n?dr(n.omission):e;t=gu(t);var o=t.length;if(Ut.test(t))var i=F(t),o=i.length;if(r>=o)return t;if(o=r-$(e),1>o)return e;if(r=i?kr(i,0,o).join(\"\"):t.slice(0,o),u===P)return r+e;if(i&&(o+=r.length-o),Vi(u)){if(t.slice(o).search(u)){var f=r;for(u.global||(u=$u(u.source,gu(yt.exec(u))+\"g\")),\n\tu.lastIndex=0;i=u.exec(f);)var c=i.index;r=r.slice(0,c===P?o:c)}}else t.indexOf(dr(u),o)!=o&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},It.unescape=function(t){return(t=gu(t))&&Q.test(t)?t.replace(Y,fn):t},It.uniqueId=function(t){var n=++Ju;return gu(t)+n},It.upperCase=xf,It.upperFirst=jf,It.each=Te,It.eachRight=$e,It.first=Re,Iu(It,function(){var t={};return En(It,function(n,r){Gu.call(It.prototype,r)||(t[r]=n)}),t}(),{chain:false}),It.VERSION=\"4.15.0\",u(\"bind bindKey curry curryRight partial partialRight\".split(\" \"),function(t){\n\tIt[t].placeholder=It}),u([\"drop\",\"take\"],function(t,n){$t.prototype[t]=function(r){var e=this.__filtered__;if(e&&!n)return new $t(this);r=r===P?1:xo(hu(r),0);var u=this.clone();return e?u.__takeCount__=jo(r,u.__takeCount__):u.__views__.push({size:jo(r,4294967295),type:t+(0>u.__dir__?\"Right\":\"\")}),u},$t.prototype[t+\"Right\"]=function(n){return this.reverse()[t](n).reverse()}}),u([\"filter\",\"map\",\"takeWhile\"],function(t,n){var r=n+1,e=1==r||3==r;$t.prototype[t]=function(t){var n=this.clone();return n.__iteratees__.push({\n\titeratee:fe(t,3),type:r}),n.__filtered__=n.__filtered__||e,n}}),u([\"head\",\"last\"],function(t,n){var r=\"take\"+(n?\"Right\":\"\");$t.prototype[t]=function(){return this[r](1).value()[0]}}),u([\"initial\",\"tail\"],function(t,n){var r=\"drop\"+(n?\"\":\"Right\");$t.prototype[t]=function(){return this.__filtered__?new $t(this):this[r](1)}}),$t.prototype.compact=function(){return this.filter(Ou)},$t.prototype.find=function(t){return this.filter(t).head()},$t.prototype.findLast=function(t){return this.reverse().find(t);\n\t},$t.prototype.invokeMap=ar(function(t,n){return typeof t==\"function\"?new $t(this):this.map(function(r){return Mn(r,t,n)})}),$t.prototype.reject=function(t){return this.filter(Je(fe(t)))},$t.prototype.slice=function(t,n){t=hu(t);var r=this;return r.__filtered__&&(0<t||0>n)?new $t(r):(0>t?r=r.takeRight(-t):t&&(r=r.drop(t)),n!==P&&(n=hu(n),r=0>n?r.dropRight(-n):r.take(n-t)),r)},$t.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},$t.prototype.toArray=function(){return this.take(4294967295);\n\t},En($t.prototype,function(t,n){var r=/^(?:filter|find|map|reject)|While$/.test(n),e=/^(?:head|last)$/.test(n),u=It[e?\"take\"+(\"last\"==n?\"Right\":\"\"):n],o=e||/^find/.test(n);u&&(It.prototype[n]=function(){function n(t){return t=u.apply(It,s([t],f)),e&&h?t[0]:t}var i=this.__wrapped__,f=e?[1]:arguments,c=i instanceof $t,a=f[0],l=c||Fi(i);l&&r&&typeof a==\"function\"&&1!=a.length&&(c=l=false);var h=this.__chain__,p=!!this.__actions__.length,a=o&&!h,c=c&&!p;return!o&&l?(i=c?i:new $t(this),i=t.apply(i,f),i.__actions__.push({\n\tfunc:ze,args:[n],thisArg:P}),new Lt(i,h)):a&&c?t.apply(this,f):(i=this.thru(n),a?e?i.value()[0]:i.value():i)})}),u(\"pop push shift sort splice unshift\".split(\" \"),function(t){var n=Pu[t],r=/^(?:push|sort|unshift)$/.test(t)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(t);It.prototype[t]=function(){var t=arguments;if(e&&!this.__chain__){var u=this.value();return n.apply(Fi(u)?u:[],t)}return this[r](function(r){return n.apply(Fi(r)?r:[],t)})}}),En($t.prototype,function(t,n){var r=It[n];if(r){var e=r.name+\"\";\n\t(Co[e]||(Co[e]=[])).push({name:n,func:r})}}),Co[qr(P,2).name]=[{name:\"wrapper\",func:P}],$t.prototype.clone=function(){var t=new $t(this.__wrapped__);return t.__actions__=Wr(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Wr(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Wr(this.__views__),t},$t.prototype.reverse=function(){if(this.__filtered__){var t=new $t(this);t.__dir__=-1,t.__filtered__=true}else t=this.clone(),t.__dir__*=-1;return t;\n\t},$t.prototype.value=function(){var t,n=this.__wrapped__.value(),r=this.__dir__,e=Fi(n),u=0>r,o=e?n.length:0;t=o;for(var i=this.__views__,f=0,c=-1,a=i.length;++c<a;){var l=i[c],s=l.size;switch(l.type){case\"drop\":f+=s;break;case\"dropRight\":t-=s;break;case\"take\":t=jo(t,f+s);break;case\"takeRight\":f=xo(f,t-s)}}if(t={start:f,end:t},i=t.start,f=t.end,t=f-i,u=u?f:i-1,i=this.__iteratees__,f=i.length,c=0,a=jo(t,this.__takeCount__),!e||200>o||o==t&&a==t)return xr(n,this.__actions__);e=[];t:for(;t--&&c<a;){\n\tfor(u+=r,o=-1,l=n[u];++o<f;){var h=i[o],s=h.type,h=(0,h.iteratee)(l);if(2==s)l=h;else if(!h){if(1==s)continue t;break t}}e[c++]=l}return e},It.prototype.at=ji,It.prototype.chain=function(){return Me(this)},It.prototype.commit=function(){return new Lt(this.value(),this.__chain__)},It.prototype.next=function(){this.__values__===P&&(this.__values__=lu(this.value()));var t=this.__index__>=this.__values__.length,n=t?P:this.__values__[this.__index__++];return{done:t,value:n}},It.prototype.plant=function(t){\n\tfor(var n,r=this;r instanceof Rt;){var e=Oe(r);e.__index__=0,e.__values__=P,n?u.__wrapped__=e:n=e;var u=e,r=r.__wrapped__}return u.__wrapped__=t,n},It.prototype.reverse=function(){var t=this.__wrapped__;return t instanceof $t?(this.__actions__.length&&(t=new $t(this)),t=t.reverse(),t.__actions__.push({func:ze,args:[Le],thisArg:P}),new Lt(t,this.__chain__)):this.thru(Le)},It.prototype.toJSON=It.prototype.valueOf=It.prototype.value=function(){return xr(this.__wrapped__,this.__actions__)},It.prototype.first=It.prototype.head,\n\tuo&&(It.prototype[uo]=De),It}var P,Z=1/0,q=NaN,V=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],K=/\\b__p\\+='';/g,G=/\\b(__p\\+=)''\\+/g,J=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,Y=/&(?:amp|lt|gt|quot|#39|#96);/g,H=/[&<>\"'`]/g,Q=RegExp(Y.source),X=RegExp(H.source),tt=/<%-([\\s\\S]+?)%>/g,nt=/<%([\\s\\S]+?)%>/g,rt=/<%=([\\s\\S]+?)%>/g,et=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,ut=/^\\w*$/,ot=/^\\./,it=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,ft=/[\\\\^$.*+?()[\\]{}|]/g,ct=RegExp(ft.source),at=/^\\s+|\\s+$/g,lt=/^\\s+/,st=/\\s+$/,ht=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,pt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,_t=/,? & /,vt=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,gt=/\\\\(\\\\)?/g,dt=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,yt=/\\w*$/,bt=/^0x/i,xt=/^[-+]0x[0-9a-f]+$/i,jt=/^0b[01]+$/i,wt=/^\\[object .+?Constructor\\]$/,mt=/^0o[0-7]+$/i,At=/^(?:0|[1-9]\\d*)$/,kt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Et=/($^)/,Ot=/['\\n\\r\\u2028\\u2029\\\\]/g,St=\"[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|\\\\ud83c[\\\\udffb-\\\\udfff])?(?:\\\\u200d(?:[^\\\\ud800-\\\\udfff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|\\\\ud83c[\\\\udffb-\\\\udfff])?)*\",It=\"(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])\"+St,Rt=\"(?:[^\\\\ud800-\\\\udfff][\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]?|[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff])\",Wt=RegExp(\"['\\u2019]\",\"g\"),Bt=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]\",\"g\"),Lt=RegExp(\"\\\\ud83c[\\\\udffb-\\\\udfff](?=\\\\ud83c[\\\\udffb-\\\\udfff])|\"+Rt+St,\"g\"),Ct=RegExp([\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|$)|(?:[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde](?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])|$)|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?(?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?|\\\\d+\",It].join(\"|\"),\"g\"),Ut=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0\\\\ufe0e\\\\ufe0f]\"),Mt=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,zt=\"Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout\".split(\" \"),Dt={};\n\tDt[\"[object Float32Array]\"]=Dt[\"[object Float64Array]\"]=Dt[\"[object Int8Array]\"]=Dt[\"[object Int16Array]\"]=Dt[\"[object Int32Array]\"]=Dt[\"[object Uint8Array]\"]=Dt[\"[object Uint8ClampedArray]\"]=Dt[\"[object Uint16Array]\"]=Dt[\"[object Uint32Array]\"]=true,Dt[\"[object Arguments]\"]=Dt[\"[object Array]\"]=Dt[\"[object ArrayBuffer]\"]=Dt[\"[object Boolean]\"]=Dt[\"[object DataView]\"]=Dt[\"[object Date]\"]=Dt[\"[object Error]\"]=Dt[\"[object Function]\"]=Dt[\"[object Map]\"]=Dt[\"[object Number]\"]=Dt[\"[object Object]\"]=Dt[\"[object RegExp]\"]=Dt[\"[object Set]\"]=Dt[\"[object String]\"]=Dt[\"[object WeakMap]\"]=false;\n\tvar Tt={};Tt[\"[object Arguments]\"]=Tt[\"[object Array]\"]=Tt[\"[object ArrayBuffer]\"]=Tt[\"[object DataView]\"]=Tt[\"[object Boolean]\"]=Tt[\"[object Date]\"]=Tt[\"[object Float32Array]\"]=Tt[\"[object Float64Array]\"]=Tt[\"[object Int8Array]\"]=Tt[\"[object Int16Array]\"]=Tt[\"[object Int32Array]\"]=Tt[\"[object Map]\"]=Tt[\"[object Number]\"]=Tt[\"[object Object]\"]=Tt[\"[object RegExp]\"]=Tt[\"[object Set]\"]=Tt[\"[object String]\"]=Tt[\"[object Symbol]\"]=Tt[\"[object Uint8Array]\"]=Tt[\"[object Uint8ClampedArray]\"]=Tt[\"[object Uint16Array]\"]=Tt[\"[object Uint32Array]\"]=true,\n\tTt[\"[object Error]\"]=Tt[\"[object Function]\"]=Tt[\"[object WeakMap]\"]=false;var $t,Ft={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Nt=parseFloat,Pt=parseInt,Zt=typeof global==\"object\"&&global&&global.Object===Object&&global,qt=typeof self==\"object\"&&self&&self.Object===Object&&self,Vt=Zt||qt||Function(\"return this\")(),Kt=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports,Gt=Kt&&typeof module==\"object\"&&module&&!module.nodeType&&module,Jt=Gt&&Gt.exports===Kt,Yt=Jt&&Zt.g;\n\tt:{try{$t=Yt&&Yt.f(\"util\");break t}catch(t){}$t=void 0}var Ht=$t&&$t.isArrayBuffer,Qt=$t&&$t.isDate,Xt=$t&&$t.isMap,tn=$t&&$t.isRegExp,nn=$t&&$t.isSet,rn=$t&&$t.isTypedArray,en=j(\"length\"),un=w({\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\n\t\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\n\t\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\n\t\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\n\t\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\n\t\"\\u017f\":\"ss\"}),on=w({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"`\":\"&#96;\"}),fn=w({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\",\"&#96;\":\"`\"}),cn=N(); true?(Vt._=cn, !(__WEBPACK_AMD_DEFINE_RESULT__ = function(){return cn}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))):Gt?((Gt.exports=cn)._=cn,Kt._=cn):Vt._=cn}).call(this);\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(25)(module)))\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0,\r\n\t\tstyleElementsInsertedAtTop = [];\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\t// By default, add <style> tags to the bottom of <head>.\r\n\t\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction insertStyleElement(options, styleElement) {\r\n\t\tvar head = getHeadElement();\r\n\t\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\t\tif (options.insertAt === \"top\") {\r\n\t\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t\t} else {\r\n\t\t\t\thead.appendChild(styleElement);\r\n\t\t\t}\r\n\t\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t\t} else if (options.insertAt === \"bottom\") {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t} else {\r\n\t\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeStyleElement(styleElement) {\r\n\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\t\tif(idx >= 0) {\r\n\t\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction createStyleElement(options) {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\tinsertStyleElement(options, styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement(options) {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\tinsertStyleElement(options, linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement(options);\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement(options);\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tremoveStyleElement(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(16);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(23)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** synteny-dotplot-builder.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ea7d0c02d13c6bfdb81d\n **/","// Expose our API, but not anywhere close to anything that might need to be\n// tested in node land.\nimport { makeSyntenyDotPlot } from './main';\nwindow.makeSyntenyDotPlot = makeSyntenyDotPlot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/hook.js\n **/","var _ = require('./lodash.min').runInContext();\nmodule.exports = require('./fp/_baseConvert')(_, _);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/fp.js\n ** module id = 1\n ** module chunks = 0\n **/","!function() {\n  var d3 = {\n    version: \"3.5.6\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    format = format.toLowerCase();\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3/d3.js\n ** module id = 2\n ** module chunks = 0\n **/","exports.ROUNDING_FACTOR = 10;\n\nexports.RUN_BENCHMARKS = false;\n\nexports.SHOW_MAXIMA_AND_MINIMA = false;\n\nexports.AUTO_SCALE_VALLEY_FILL = '#D0D0D0';\n\nexports.SYNTENY_MARGIN = 50;\nexports.CIRCLE_RADIUS = 3;\nexports.UNSELECTED_DOT_FILL = '#D0D0D0';\nexports.NUM_COLOR_SCALE_INTERPOLATION_SAMPLES = 100;\nexports.DOTPLOT_COLOR_TRANS_LEN = 500;\nexports.MAXIMIZE_WIDTH = true;\nexports.MIN_TEXT_GAP = 12;\nexports.GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS = 50;\n\nexports.HISTOGRAM_MARGIN = 50;\nexports.HISTOGRAM_Y_SCALE_TRANS_LEN = 750;\nexports.NUM_HISTOGRAM_TICKS = 75;\nexports.UNSELECTED_BAR_FILL = '#D0D0D0';\n\nexports.COLOR_RANGES = {\n  rg: {\n    range: ['red', 'green'],\n    quantized: false\n  },\n  rg_quantized: { /* From colorbrewer */\n    range: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf',\n      '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    quantized: true\n  },\n  rainbow: {\n    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n    quantized: false\n  },\n  rainbow_quantized: {\n    range: ['blue', 'magenta', 'aqua', 'lime', 'red', 'orange'],\n    quantized: true\n  },\n  unselected: {\n    range: ['steelblue', 'steelblue'], /* d3.scale needs at least two points */\n    quantized: false\n  }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/constants.js\n **/","import _ from 'lodash/fp';\nimport d3 from 'd3';\n\nexports.getComputedAttr = function getComputedAttr(element, attr) {\n  const computed = getComputedStyle(element)[attr];\n  return parseInt(computed, 10);\n};\n\nexports.samplePointsInRange = function(extent, n) {\n  const scale = d3.scale.linear().domain([0, n-1]).range(extent);\n  return _.map(scale, _.range(0, n));\n};\n\nexports.timeIt = function(f, name) {\n  return function(...args) {\n    const start = Date.now();\n    const x = f(...args);\n    console.log(name, Date.now() - start);\n    return x;\n  };\n};\n\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils.js\n **/","import _ from 'lodash/fp';\n\nconst simplify = (dirtyPoints, persistence) => {\n  const points = removeNonExtrema(dirtyPoints);\n  const index = indexOfSmallestDifference(points);\n\n  if (points.length < 3 || gapBetweenPoints(points, index) > persistence)\n    return points;\n\n  const toRemove = index === 0 ? 1 : index;\n  points.splice(toRemove, 1);\n\n  return simplify(points, persistence);\n};\nexports.simplify = simplify;\n\nconst removeNonExtrema = A => {\n  return A.filter((element, index) => {\n    if (index === 0 || index === A.length - 1)\n      return true;\n\n    const before = A[index - 1].y;\n    const here = element.y;\n    const after = A[index + 1].y;\n    return here > Math.max(before, after) || here < Math.min(before, after);\n  });\n};\n\nconst gapBetweenPoints = (A, i) => Math.abs(A[i].y - A[i + 1].y);\n\nconst indexOfSmallestDifference = A => {\n  return _.minBy(_.partial(gapBetweenPoints, [A]), _.range(0, A.length - 1));\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/persistence.js\n **/","'use strict';\n\nmodule.exports = function transform(props) {\n  var transform = [];\n  if (Array.isArray(props)) {\n    props.forEach(function forEachAccessor(prop) {\n      var key = Object.keys(prop)[0];\n      transform.push(key + '(' + prop[key] + ')');\n    });\n  }\n  return transform.join(' ');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/svg-transform/index.js\n ** module id = 6\n ** module chunks = 0\n **/","import _ from 'lodash/fp';\n\n/*\n * I want to run a benchmark, but I don't want to block UI updates\n * in between iterations.\n *\n * My guess is that this isn't super accurate for fast functions.\n */\nexports.benchmark = function(testArgs, f, done) {\n\n  const runOne = ([test, ...rest], results) => {\n    if (!test) {\n      return done(stats(results));\n    }\n\n    const result = timeIt(f, test);\n    setTimeout(runOne, 0, rest, [...results, result]);\n  };\n  setTimeout(runOne, 0, testArgs, []);\n\n  const timeIt = function(f, arg) {\n    const start = Date.now();\n    f(arg);\n    return Date.now() - start;\n  };\n\n  const stats = times => ({\n    totalTime: _.sum(times),\n    count: times.length,\n    max: _.max(times),\n    average: _.sum(times) / times.length\n  });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/async-benchmark.js\n **/","import persistenceFuncs from './persistence';\nimport d3 from 'd3';\nimport _ from 'lodash/fp';\n\nimport {\n  AUTO_SCALE_VALLEY_FILL\n} from 'constants';\n\nexports.generateAutoScale = (points, persistence) => {\n  const extrema = persistenceFuncs.simplify(points, persistence);\n  return generateColorScaleFromExtrema(extrema);\n};\n\nconst isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\nconst shouldBeMarked = (x, i, A) => {\n  // This is bad, but we are special casing the first maximum if it is \"big.\"\n  // This gives the ks == 0 spike color.\n  if(i == 0 && A[i].y >= _.max(_.map(x => x.y, A))) {\n    return true;\n  }\n  // common case: normal maxima\n  return i > 0 && i < A.length - 1 && isMaxima(A, i);\n};\n\nconst generateColorScaleFromExtrema = extrema => {\n  const colors = d3.scale.category10();\n\n  const colored = extrema.map((x, i, A) => {\n    const color = shouldBeMarked(x, i, A) ? colors(i) : AUTO_SCALE_VALLEY_FILL;\n    return { ...x, color };\n  });\n\n  const domain = _.map(d => d.x + d.dx / 2, colored);\n  const range = _.map(_.get('color'), colored);\n\n  return d3.scale.linear().domain(domain).range(range);\n};\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/auto-colorscale.js\n **/","import d3 from 'd3';\nimport _ from 'lodash/fp';\nimport utils from './utils';\n\nimport {\n  COLOR_RANGES\n} from 'constants';\n\nexports.onData = function(data) {\n  const generateScale = function({field, name}) {\n    const extent = d3.extent(data, point => point[field]);\n\n    const colorScale = COLOR_RANGES[name];\n    const range = colorScale.range;\n    const domain = utils.samplePointsInRange(extent, range.length);\n\n    if (colorScale.quantized) {\n      return d3.scale.quantize().domain(domain).range(range);\n    } else {\n      return d3.scale.linear().domain(domain).range(range);\n    }\n  };\n\n  /* _.memoize acts only on the first arg */\n  const m = _.memoize(generateScale);\n  return (field, name) => m({field, name});\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/colorscales.js\n **/","import utils from './utils';\nimport _ from 'lodash/fp';\nimport d3 from 'd3';\nimport transform from 'svg-transform';\n\nimport {\n  SYNTENY_MARGIN,\n  CIRCLE_RADIUS,\n  UNSELECTED_DOT_FILL,\n  NUM_COLOR_SCALE_INTERPOLATION_SAMPLES,\n  GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS,\n  DOTPLOT_COLOR_TRANS_LEN,\n  MAXIMIZE_WIDTH,\n  MIN_TEXT_GAP,\n  ROUNDING_FACTOR\n} from 'constants';\n\nfunction synteny(id, dataObj, field, initialColorScale, meta) {\n  var xExtent = d3.extent(dataObj.getXLineOffsets());\n  var yExtent = d3.extent(dataObj.getYLineOffsets());\n  var dataAspectRatio = yExtent[1] / xExtent[1];\n\n  const baseID = id.substring(1);\n  const svgElement = document.getElementById(baseID);\n\n  const getComputedWidth = () => {\n    return utils.getComputedAttr(svgElement, 'width') - 2 * SYNTENY_MARGIN;\n  };\n  const getComputedHeight = () => {\n    return utils.getComputedAttr(svgElement, 'height') - 2 * SYNTENY_MARGIN;\n  };\n\n  const getWidth = () => {\n    const screenRatio = getComputedHeight() / getComputedWidth();\n    if(screenRatio > dataAspectRatio) {\n      // We are too tall. Use the entire width.\n      return getComputedWidth();\n    } else {\n      // We are too wide. Only use as much width as we have height for.\n      return getComputedHeight() / dataAspectRatio;\n    }\n  };\n\n  const getHeight = () => {\n    const screenRatio = getComputedHeight() / getComputedWidth();\n    if(screenRatio > dataAspectRatio) {\n      // We are too tall. Only use as much height as we have width for.\n      return getComputedWidth() * dataAspectRatio;\n    } else {\n      // We are too wide. Use the entire height.\n      return getComputedHeight();\n    }\n  };\n\n  var xScale = d3.scale.linear().domain(xExtent).range([0, getWidth()]);\n  var yScale = d3.scale.linear().domain(yExtent).range([getHeight(), 0]);\n\n  const darknessOfTextGaps = function(values, scale) {\n    return _.zipWith(function(a, b) {\n      return b ? Math.abs(scale(b) - scale(a)) : 10000;\n    }, values, _.tail(values))\n      .map(v => v > MIN_TEXT_GAP ? 1 : v / MIN_TEXT_GAP)\n      .map(v => 255 - Math.floor(v * 256))\n      .map(v => Math.min(v, 245));\n  };\n\n  const filterTextGaps = function(values, scale) {\n    return values.reduce(function(out, next) {\n      const first = out.length === 0;\n      const gap = Math.abs(scale(next) - scale(_.last(out)));\n      const gap_has_elapsed = gap > MIN_TEXT_GAP;\n      if (first || gap_has_elapsed)\n        out.push(next);\n      return out;\n    }, []);\n  };\n\n  const genGeVOLink = (aDbId, bDbId) =>\n    'http://geco.iplantcollaborative.org/asherkhb/coge/GEvo.pl?' +\n    `fid1=${aDbId};fid2=${bDbId};apply_all=${50000};num_seqs=${2}`;\n\n  const getSingleGeVoDescription = id =>\n  fetch(`https://genomevolution.org/coge/api/v1/features/${id}`)\n    .then(r => r.json());\n\n  const getGeVODescription = (aDbId, bDbId) => Promise.all([\n    getSingleGeVoDescription(aDbId),\n    getSingleGeVoDescription(bDbId)\n  ])\n    .then(([x, y]) => {\n      return {x_name: x.names.join(', '), y_name: y.names.join(', ')};\n    });\n\n  let highlighted;\n  const updateGeVOLink = function(x, y) {\n    const distance = d => {\n      const x_component = Math.pow(d.x_relative_offset - x, 2);\n      const y_component = Math.pow(d.y_relative_offset - y, 2);\n      return Math.sqrt(x_component + y_component);\n    };\n    const point = _.minBy(distance, dataObj.currentData().raw);\n    highlighted = point;\n\n    const ratio = (xScale.range()[1] - xScale.range()[0]) /\n      (xScale.domain()[1] - xScale.domain()[0]);\n    if (distance(point) * ratio < GEVO_CLICK_PROXIMITY_THRESHOLD_PIXELS) {\n      d3.select('#gevo-link')\n        .text('Compare in GEvo >>>')\n        .attr('onclick', () => {\n          const link = genGeVOLink(point.x_feature_id, point.y_feature_id);\n          return `window.open('${link}')`;\n        });\n      getGeVODescription(point.x_feature_id, point.y_feature_id)\n        .then(({x_name, y_name}) => {\n          d3.select('#gevo-link-xname')\n            .text(`${meta.x_name}: ${x_name}`);\n          d3.select('#gevo-link-yname')\n            .text(`${meta.y_name}: ${y_name}`);\n        });\n    }\n\n    setSyntenyData();\n  };\n\n  const makeLabels = function() {\n\n    const xFilter = x => (0 <= xScale(x) && xScale(x) <= getWidth());\n    const yFilter = y => (0 <= yScale(y) && yScale(y) <= getHeight());\n\n    const tempXOffsets = _.filter(xFilter, xOffsets);\n    const tempYOffsets = _.filter(yFilter, yOffsets);\n    const tempXGaps = filterTextGaps(_.filter(xFilter, xMidpoints), xScale);\n    const tempYGaps = filterTextGaps(_.filter(yFilter, yMidpoints), yScale);\n\n    xGridLines.tickValues(tempXOffsets);\n    xLabels.tickValues(tempXGaps);\n    yGridLines.tickValues(tempYOffsets);\n    yLabels.tickValues(tempYGaps);\n\n    xAxisGapsGroup.call(xLabels);\n    yAxisGapsGroup.call(yLabels);\n    xAxisLineGroup.call(xGridLines);\n    yAxisLineGroup.call(yGridLines);\n\n    const tempXOffsetDarknesses = darknessOfTextGaps(tempXOffsets, xScale);\n    const tempYOffsetDarknesses = darknessOfTextGaps(tempYOffsets, yScale);\n\n    xAxisLineGroup.selectAll('line')\n      .data(tempXOffsetDarknesses)\n      .style('stroke', d => d3.rgb(d, d, d));\n\n    yAxisLineGroup.selectAll('line')\n      .data(tempYOffsetDarknesses)\n      .style('stroke', d => d3.rgb(d, d, d));\n\n  };\n\n  var zoom = d3.behavior.zoom()\n    .x(xScale).y(yScale)\n    .scaleExtent([1, 100])\n    .on('zoom', function() {\n      var t = d3.event.translate;\n      var s = d3.event.scale;\n      t[0] = Math.min(0, Math.max(-getWidth() * s + getWidth(), t[0]));\n      t[1] = Math.min(0, Math.max(-getHeight() * s + getHeight(), t[1]));\n      // prevents the translate from growing large. This way, you don't \n      // have to \"scroll back\" onto the canvas if you pan past the edge.\n      zoom.translate(t);\n\n      brushGroup.attr('transform', transform([{translate: t}, {scale: s}]));\n\n      resizeBrushBoundary();\n      makeLabels();\n      drawBG();\n      setSyntenyData();\n    });\n\n  function resizeBrushBoundary() {\n    var scaling = zoom.scale();\n    var corners = ['.nw', '.ne', '.se', '.sw'];\n    var vertical = ['.e', '.w'];\n    var horizontal = ['.n', '.s'];\n    var horizontalRescale = corners.concat(vertical);\n    var verticalRescale = corners.concat(horizontal);\n\n    _.map(function(name) {\n      d3.select('.resize' + name).select('rect')\n        .attr('width', 6 / scaling).attr('x', -3 / scaling);\n    }, horizontalRescale);\n\n    _.map(function(name) {\n      d3.select('.resize' + name).select('rect')\n        .attr('height', 6 / scaling).attr('y', -3 / scaling);\n    }, verticalRescale);\n  }\n\n  /* We are copying the scale here because brushes do not play nice with\n   * zooming. All sorts of nasty things happen when the scales get changed\n   * underneath a brush. */\n  const originalXScale = xScale.copy();\n  const originalYScale = yScale.copy();\n  var brush = d3.svg.brush()\n    .x(xScale.copy())\n    .y(yScale.copy())\n    .on('brush', function() {\n      if (!brush.empty()) {\n        dataObj.addSpatialFilter(brush.extent(), 'spatial');\n        resizeBrushBoundary();\n      }\n    })\n    .on('brushend', function() {\n      if (brush.empty()) {\n        dataObj.removeSpatialFilter('spatial-stop');\n        const mouse = d3.mouse(this);\n        const x = originalXScale.invert(mouse[0]);\n        const y = originalYScale.invert(mouse[1]);\n        updateGeVOLink(x, y);\n      } else {\n        dataObj.addSpatialFilter(brush.extent(), 'spatial-stop');\n        resizeBrushBoundary();\n      }\n    });\n\n  const canvas = d3.select(id + '-canvas')\n    .attr('width', getWidth())\n    .attr('height', getHeight())\n    .style('left', SYNTENY_MARGIN)\n    .style('top', SYNTENY_MARGIN);\n\n  const backCanvas = d3.select(id + '-canvas-background')\n    .attr('width', getWidth())\n    .attr('height', getHeight())\n    .style('left', SYNTENY_MARGIN)\n    .style('top', SYNTENY_MARGIN);\n\n  const context = canvas.node().getContext('2d');\n  const background = backCanvas.node().getContext('2d');\n\n  var svg = d3.select(id);\n\n  var TEXT_OFFSET = 35;\n  var TEXT_BOX_HEIGHT = 25;\n  svg.append('text')\n    .attr('x', (getWidth() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('width', (getWidth() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('y', SYNTENY_MARGIN + getHeight() + TEXT_OFFSET)\n    .attr('height', TEXT_BOX_HEIGHT)\n    .classed('plot-title', true)\n    .text(meta.x_name);\n\n  svg.append('text')\n    .attr('transform', 'rotate(-90)')\n    .attr('x', -2 * (getHeight() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('width', (getHeight() + 2 * SYNTENY_MARGIN) / 3)\n    .attr('y', SYNTENY_MARGIN - TEXT_OFFSET)\n    .attr('height', TEXT_BOX_HEIGHT)\n    .classed('plot-title', true)\n    .text(meta.y_name);\n\n  svg\n    .append('defs')\n    .append('clipPath')\n    .attr('id', 'plot-clip-box')\n    .append('rect')\n    .attr('x', 0)\n    .attr('width', getWidth())\n    .attr('y', 0)\n    .attr('height', getHeight())\n    .attr('fill', 'black');\n\n  const midpoints = function(points) {\n    return _.zipWith((a, b) => (a + b) / 2, _.initial(points), _.tail(points));\n  };\n\n  var xOffsets = dataObj.getXLineOffsets();\n  var xMidpoints = midpoints(xOffsets);\n\n  const xOffsetToName = _.zipObject(xMidpoints, dataObj.getXLineNames());\n  const xAxisBase = () => d3.svg.axis().scale(xScale).orient('bottom');\n\n  var xGridLines = xAxisBase()\n    .tickFormat('')\n    .tickSize(-getHeight());\n\n  var xLabels = xAxisBase()\n    .tickFormat(x => xOffsetToName[x])\n    .tickSize(0);\n\n  const transformer = transform([\n    {translate: [SYNTENY_MARGIN, getHeight() + SYNTENY_MARGIN]}\n  ]);\n  var xAxisWrapper = svg.append('g').attr('transform', transformer);\n  var xAxisGapsGroup = xAxisWrapper.append('g');\n  var xAxisLineGroup = xAxisWrapper.append('g');\n\n  var yOffsets = dataObj.getYLineOffsets();\n  var yMidpoints = midpoints(yOffsets);\n\n  const yOffsetToName = _.zipObject(yMidpoints, dataObj.getYLineNames());\n  const yAxisBase = () => d3.svg.axis().scale(yScale).orient('left');\n\n  var yGridLines = yAxisBase()\n    .tickFormat('')\n    .tickSize(-getWidth());\n\n  var yLabels = yAxisBase()\n    .tickFormat(x => yOffsetToName[x])\n    .tickSize(0);\n\n  var yAxisWrapper = svg.append('g')\n    .attr('transform',\n      transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]));\n  var yAxisGapsGroup = yAxisWrapper.append('g');\n  var yAxisLineGroup = yAxisWrapper.append('g');\n\n  makeLabels();\n\n  svg = svg\n    .append('g')\n    .attr('transform',\n      transform([{translate: [SYNTENY_MARGIN, SYNTENY_MARGIN]}]))\n    .append('g').attr('id', 'zoom-group')\n    .call(zoom).on('mousedown.zoom', null); //disable panning\n\n  var brushGroup = svg\n    .append('g').attr('clip-path', 'url(#plot-clip-box)')\n    .append('g').attr('id', 'brush-group')\n    .call(brush);\n\n  var colorScale = initialColorScale;\n\n  function drawBG() {\n    const allDots = dataObj.currentData().raw;\n    const width = getWidth();\n    const height = getHeight();\n    background.clearRect(0, 0, width, height);\n    background.fillStyle = UNSELECTED_DOT_FILL;\n    _.each(function(d) {\n      const cx = xScale(d.x_relative_offset);\n      const cy = yScale(d.y_relative_offset);\n\n      if (cx < 0 || cx > width || cy < 0 || cy > height)\n        return;\n\n      background.fillRect(cx - CIRCLE_RADIUS,\n        cy - CIRCLE_RADIUS,\n        CIRCLE_RADIUS,\n        CIRCLE_RADIUS);\n    }, allDots);\n  }\n\n  function draw(elapsedMS, initialColorScale, finalColorScale) {\n    var start = Date.now();\n\n    var intermediateColorScale;\n    var t = Math.min(\n      (DOTPLOT_COLOR_TRANS_LEN - elapsedMS) / DOTPLOT_COLOR_TRANS_LEN, 1);\n    intermediateColorScale = interpolateScales(initialColorScale,\n      finalColorScale,\n      t);\n\n    var allData = dataObj.currentData();\n    var activeDots = allData.active;\n\n    //console.log('Time after collecting data', Date.now() - start);\n    start = Date.now();\n\n    const width = getWidth();\n    const height = getHeight();\n\n    context.clearRect(0, 0, width, height);\n\n    /* On top, active dots */\n    var groups = [];\n    var index = 0;\n\n    activeDots.sort((a, b) => b[field] - a[field]);\n    const rounded = x => {\n      return Math.floor(x[field] * ROUNDING_FACTOR) / ROUNDING_FACTOR;\n    };\n    while (index < activeDots.length) {\n      var low = index;\n      var val = rounded(activeDots[index]);\n      index = _.sortedLastIndexBy(x => -rounded(x), {\n        [field]: val\n      }, activeDots);\n      groups.push([low, index]);\n    }\n\n    _.each(function([loIndex, hiIndex]) {\n      context.fillStyle = intermediateColorScale(rounded(activeDots[loIndex]));\n      for (var i = loIndex; i < hiIndex; i++) {\n        const d = activeDots[i];\n        const cx = xScale(d.x_relative_offset);\n        const cy = yScale(d.y_relative_offset);\n\n        if (cx < 0 || cx > width || cy < 0 || cy > height)\n          continue;\n\n        context.fillRect(cx - CIRCLE_RADIUS,\n          cy - CIRCLE_RADIUS,\n          CIRCLE_RADIUS,\n          CIRCLE_RADIUS);\n      }\n    }, groups);\n\n    if (highlighted) {\n      context.beginPath();\n      context.strokeStyle = 'red';\n      context.arc(xScale(highlighted.x_relative_offset),\n        yScale(highlighted.y_relative_offset), 10, 0, 2 * Math.PI);\n      context.stroke();\n    }\n\n    const diff = Date.now() - start;\n    //console.log('Start of call to end of draw call:', diff);\n    if (elapsedMS > 0) {\n      setTimeout(draw, 0, elapsedMS - diff, initialColorScale, finalColorScale);\n    }\n  }\n\n  function interpolateScales(a, b, t) {\n    const aDomain = a.domain();\n    const bDomain = b.domain();\n    const min = Math.min(aDomain[0], bDomain[0]);\n    const max = Math.max(aDomain[aDomain.length - 1],\n      bDomain[bDomain.length - 1]);\n    const domain = utils.samplePointsInRange([min, max + 1],\n                                    NUM_COLOR_SCALE_INTERPOLATION_SAMPLES);\n    const range = _.map(function(input) {\n      return d3.interpolateRgb(a(input), b(input))(t);\n    }, domain);\n    return d3.scale.linear().domain(domain).range(range);\n  }\n\n  function setSyntenyData() {\n    draw(0, colorScale, colorScale);\n  }\n  dataObj.addListener(setSyntenyData);\n  drawBG();\n  setSyntenyData();\n\n  function setNavigationMode(mode) {\n    if (mode === 'pan') {\n      d3.select(id).select('#brush-group').on('mousedown.brush', null);\n      d3.select(id).select('#zoom-group').call(zoom);\n      d3.select(id).select('#brush-group').style('pointer-events', null);\n      d3.select(id).select('#zoom-group').style('pointer-events', 'all');\n      d3.select(id).select('#brush-group').on('click', function() {\n        const mouse = d3.mouse(this);\n        const x = originalXScale.invert(mouse[0]);\n        const y = originalYScale.invert(mouse[1]);\n        updateGeVOLink(x, y);\n      });\n    } else if (mode === 'brush') {\n      d3.select(id).select('#brush-group').call(brush);\n      d3.select(id).select('#brush-group').style('pointer-events', 'all');\n      d3.select(id).select('#zoom-group').on('mousedown.zoom', null);\n    }\n  }\n\n  function setColorScale(newColorScale) {\n    draw(DOTPLOT_COLOR_TRANS_LEN, colorScale, newColorScale);\n    colorScale = newColorScale;\n  }\n\n  function setField(f) {\n    field = f;\n    setSyntenyData();\n  }\n\n  return {\n    setNavMode: setNavigationMode,\n    setColorScale: setColorScale,\n    setField: setField\n  };\n}\n\nexports.synteny = synteny;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/dotplot.js\n **/","import {\n  HISTOGRAM_MARGIN,\n  HISTOGRAM_Y_SCALE_TRANS_LEN,\n  NUM_HISTOGRAM_TICKS,\n  UNSELECTED_BAR_FILL\n} from './constants';\n\nimport persistenceFuncs from './persistence';\nimport utils from './utils';\nimport _ from 'lodash/fp';\nimport d3 from 'd3';\nimport transform from 'svg-transform';\n\nfunction histogram(id, dataObj, field, colorScale) {\n  const dataExtent = d3.extent(_.map(field, dataObj.currentData().raw));\n\n  const plot = d3.select(id);\n  const plotWidth = () =>\n    utils.getComputedAttr(document.getElementById(id.substring(1)), 'width');\n  const plotHeight = () =>\n    utils.getComputedAttr(document.getElementById(id.substring(1)), 'height');\n\n  function plotBrushBrush() {\n    if (!plotBrush.empty()) {\n      dataObj.addDataFilter(plotBrush.extent(), field);\n    }\n  }\n\n  function plotBrushEnd() {\n    if (plotBrush.empty()) {\n      dataObj.removeDataFilter(field);\n    }\n    dataObj.notifyListeners('histogram-stop');\n    updateColors(dataBarSel); // Cancel color animation -- just brushing\n  }\n\n  const xPlotScale = d3.scale.linear()\n    .domain(dataExtent)\n    .range([HISTOGRAM_MARGIN, plotWidth() - HISTOGRAM_MARGIN]);\n\n  const bins = utils.samplePointsInRange(dataExtent, NUM_HISTOGRAM_TICKS);\n  const summaryF = dataObj.currentDataSummary(bins, field);\n  const getYExtent = (summary) => [0, 3 / 2 * _.max(_.map('y', summary))];\n\n  const yPlotScale = d3.scale.linear()\n    .domain(getYExtent(summaryF()))\n    .range([plotHeight() - HISTOGRAM_MARGIN, HISTOGRAM_MARGIN]);\n\n  function updateMinMaxMarkers(persistence) {\n    const summary = summaryF();\n    const extrema = persistenceFuncs.simplify(summary, persistence);\n\n    const isMaxima = (A, i) => A[i].y > Math.max(A[i - 1].y, A[i + 1].y);\n    const shouldBeMarked = (x, i, A) =>\n      i > 0 && i < A.length - 1 && isMaxima(A, i);\n    const markers = _.map(function(d, i, A) {\n      return {\n        color: shouldBeMarked(d, i, A) ? 'red' : 'orange',\n        x: d.x + d.dx / 2,\n        y: d.y\n      };\n    }, extrema);\n\n    const tempSelA = plot.selectAll('.maxMark').data(markers);\n    tempSelA.exit().remove();\n    tempSelA.enter().append('circle').classed('maxMark', 1);\n    tempSelA\n      .attr('cx', d => xPlotScale(d.x))\n      .attr('cy', d => yPlotScale(d.y) - 5)\n      .attr('r', 3)\n      .attr('fill', d => d.color);\n  }\n\n  const plotBrush = d3.svg.brush()\n    .x(xPlotScale)\n    .on('brush', plotBrushBrush)\n    .on('brushend', plotBrushEnd);\n\n  const dataBarSel = plot.selectAll('.dataBars')\n    .data(summaryF())\n    .enter()\n    .append('rect').classed('dataBars', true)\n    .attr('x', d => xPlotScale(d.x))\n    .attr('width', d => xPlotScale(d.x + d.dx) - xPlotScale(d.x));\n\n  const brushSelectForBM = plot.append('g').attr('id', 'plotbrush-group')\n    .attr('transform', transform([{translate: [0, HISTOGRAM_MARGIN]}]))\n    .call(plotBrush);\n  brushSelectForBM.selectAll('rect')\n    .attr('height', plotHeight() - 2 * HISTOGRAM_MARGIN);\n\n  const xAxis = d3.svg.axis().scale(xPlotScale).orient('bottom').tickSize(10);\n  const yAxis = d3.svg.axis().scale(yPlotScale).orient('left').ticks(5);\n\n  plot.append('g')\n    .attr('transform',\n      transform([{translate: [0, plotHeight() - HISTOGRAM_MARGIN]}]))\n    .classed('xAxis', true).call(xAxis);\n  const yAxisSel = plot.append('g')\n    .attr('transform', transform([{translate: [HISTOGRAM_MARGIN, 0]}]))\n    .classed('yAxis', true).call(yAxis);\n\n  const updateHeights = function(selection) {\n    selection.transition(); // cancel transition\n    selection.attr('y', d => yPlotScale(d.y));\n  };\n  const updateColors = function(selection) {\n    selection.transition(); // cancel transition\n    const extent =\n    plotBrush.empty() ? [-Infinity, Infinity] : plotBrush.extent();\n    const active = bin => bin.x + bin.dx > extent[0] && bin.x < extent[1];\n\n    const orZero = x => Math.max(x, 0);\n    const height = plotHeight();\n    selection\n      .attr('height', d => orZero(height - HISTOGRAM_MARGIN - yPlotScale(d.y)))\n      .attr('fill', d => {\n        return active(d) ? colorScale(d.x + d.dx / 2) : UNSELECTED_BAR_FILL;\n      });\n  };\n\n  const updatePlotAttrs = function(selection) {\n    updateHeights(selection);\n    updateColors(selection);\n  };\n\n  function updatePlot(typeHint) {\n    dataBarSel.transition(); /* cancel previous transition */\n\n    typeHint = typeHint || '';\n\n    const summary = summaryF();\n    let tempSel = dataBarSel.data(summary);\n\n    if (typeHint.indexOf('stop') > -1) {\n      yPlotScale.domain(getYExtent(summary));\n      yAxisSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN).call(yAxis);\n      tempSel = tempSel.transition().duration(HISTOGRAM_Y_SCALE_TRANS_LEN);\n    }\n\n    tempSel.call(updatePlotAttrs);\n  }\n\n  dataObj.addListener(updatePlot);\n\n  function setColorScale(newColorScale) {\n    colorScale = newColorScale;\n    updatePlot('stop'); /* trigger animation -- FIXME */\n  }\n\n  function getColorScale() {\n    return colorScale;\n  }\n\n  return {\n    setColorScale: setColorScale,\n    getColorScale: getColorScale,\n    brush: plotBrush,\n    sendBrushEvent: plotBrushBrush,\n    selection: brushSelectForBM,\n    updateMinMaxMarkers: updateMinMaxMarkers,\n    bins: summaryF\n  };\n}\n\nexports.histogram = histogram;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/histogram.js\n **/","import _ from 'lodash/fp';\nimport d3 from 'd3';\nimport queue from 'd3-queue';\nimport sv from './synteny-vis';\nimport crossfilter from 'crossfilter';\n\nexports.makeSyntenyDotPlot = function({\n    data_url,\n    element_id,\n    genome_x,\n    genome_y\n  }) {\n  queue.queue()\n    .defer(d3.text, data_url)\n    .await(function(err, ks) {\n      if (err) {\n        console.log(err);\n        return;\n      }\n\n      // Dirty hacks to make files with no ks work:\n      const have_ks = data_url.endsWith('.ks');\n      if (!have_ks) {\n        const random = () => Math.random() * 3 + 2;\n        ks = ks.split('\\n')\n          .map(x => x[0] === '#' ? x : `${random()},${random()},` + x)\n          .join('\\n');\n      }\n\n      const x_name = genome_x.name;\n      const y_name = genome_y.name;\n\n      const ksData = ksTextToObjects(ks);\n      const xCumLenMap = lengthsToCumulativeBPCounts(genome_x.chromosomes);\n      const yCumLenMap = lengthsToCumulativeBPCounts(genome_y.chromosomes);\n      const inlinedKSData = inlineKSData(ksData, xCumLenMap, yCumLenMap);\n\n      const ksDataObject = createDataObj(inlinedKSData, xCumLenMap, yCumLenMap);\n      console.log('Total synteny dots:', ksDataObject.currentData().raw.length);\n      sv.controller(ksDataObject, element_id, {x_name, y_name, have_ks});\n    });\n};\n\nfunction ksTextToObjects(text) {\n  /* .ks files are delimited with a combination of tabs and double bars. */\n  const csvLines = text\n    .replace(/\\|\\|/g, ',')\n    .replace(/\\t/g, ',')\n    .replace(' ', '')\n    .split('\\n');\n\n  const dots = _(csvLines)\n    .filter(line => line && line[0] !== '#')\n    .map(ksLineToSyntenyDot)\n    .filter(x => x)\n    .value();\n\n  const min_logks = _(dots)\n    .filter(line => isFinite(line.logks))\n    .map(line => line.logks)\n    .min();\n  const min_logkn = _(dots)\n    .filter(line => isFinite(line.logkn))\n    .map(line => line.logkn)\n    .min();\n\n  return _.map(x => {\n    x.logks = isFinite(x.logks) ? x.logks : min_logks;\n    x.logkn = isFinite(x.logkn) ? x.logkn : min_logkn;\n    x.logknks = x.logkn - x.logks;\n    return x;\n  }, dots);\n}\n\nfunction ksLineToSyntenyDot(line) {\n  const fields = line.split(',');\n\n  if(fields[0] === 'NA' || fields[1] === 'NA') {\n    return undefined;\n  }\n\n  const ks = Number(fields[0]);\n  const kn = Number(fields[1]);\n  const log10 = n => Math.log(n) / Math.log(10);\n\n  return {\n    ks,\n    logks: log10(ks),\n    kn,\n    logkn: log10(kn),\n    logknks: log10(kn) - log10(ks),\n    x_chromosome_id: fields[3],\n    y_chromosome_id: fields[15],\n    x_feature_id: fields[9],\n    y_feature_id: fields[21],\n    x_relative_offset: Math.round((Number(fields[4]) + Number(fields[5])) / 2),\n    y_relative_offset: Math.round((Number(fields[16]) + Number(fields[17])) / 2)\n  };\n}\n\nfunction lengthsToCumulativeBPCounts(len_list) {\n  const ntLenList = _(len_list)\n    .sortBy('length')\n    .reverse()\n    .reduce(function(map, kv) {\n      map[kv.name] = map.total;\n      map.total += kv.length;\n      return map;\n    }, {\n      total: 0\n    });\n\n  const nameLenList = _(len_list)\n    .sortBy('name')\n    .reduce(function(map, kv) {\n      map[kv.name] = map.total;\n      map.total += kv.gene_count;\n      return map;\n    }, {\n      total: 0\n    });\n\n  const geneCounts = _.zipObject(\n    _.map(_.get('name'), len_list),\n    _.map(_.get('gene_count'), len_list)\n  );\n\n  return {\n    nt: ntLenList,\n    name: nameLenList,\n    gene_counts: geneCounts\n  };\n}\n\n// Compute absolute BP offset from chromosome and relative offset\nfunction inlineKSData(ks, xmap, ymap) {\n  return _.map(o => {\n    const xShift = xmap.nt[o.x_chromosome_id];\n    const yShift = ymap.nt[o.y_chromosome_id];\n    return { \n      ...o,\n      x_relative_offset: o.x_relative_offset + xShift,\n      y_relative_offset: o.y_relative_offset + yShift\n    };\n  }, ks);\n}\n\nfunction createDataObj(syntenyDots, xmapPair, ymapPair) {\n  const xmap = xmapPair.nt;\n  const ymap = ymapPair.nt;\n  const ret = {};\n\n  const cross = crossfilter(syntenyDots);\n  const cross_all = cross.dimension(x => x.logks);\n  const cross_x = cross.dimension(x => x.x_relative_offset);\n  const cross_y = cross.dimension(x => x.y_relative_offset);\n  const fields = ['logks', 'logkn', 'logknks'];\n  const filters = _.zipObject(\n    fields,\n    _.map(field => cross.dimension(x => x[field]), fields)\n  );\n\n  ret.getXLineOffsets = function() {\n    return _.chain(xmap).values().sortBy().value();\n  };\n\n  ret.getYLineOffsets = function() {\n    return _.chain(ymap).values().sortBy().value();\n  };\n\n  ret.getXLineNames = function() {\n    return filterMapForNames(xmap);\n  };\n\n  ret.getYLineNames = function() {\n    return filterMapForNames(ymap);\n  };\n\n  function filterMapForNames(map) {\n    return _.chain(map)\n      .toPairs()\n      .sortBy('1')\n      .map('0')\n      .reject(x => x === 'total')\n      .value();\n  }\n\n  ret.currentData = function currentData() {\n    return {\n      raw: syntenyDots,\n      active: cross_all.top(Infinity)\n    };\n  };\n\n  ret.currentDataSummary = function currentDataSummary(ticks, field) {\n    const group = filters[field].group(x => ticks[_.sortedIndex(x, ticks)]);\n    const dx = ticks[1] - ticks[0];\n\n    return function() {\n      const groupList = group.top(Infinity);\n      const groups = _.zipObject(\n        _.map(_.get('key'), groupList),\n        _.map(_.get('value'), groupList)\n      );\n\n      return _.map(\n        tick => ({\n          x: Number(tick),\n          y: Number(_.getOr(0, tick, groups)),\n          dx\n        }),\n        ticks\n      );\n    };\n  };\n\n  ret.addSpatialFilter = function(extents, typeHint) {\n    cross_x.filter([extents[0][0], extents[1][0]]);\n    cross_y.filter([extents[0][1], extents[1][1]]);\n    ret.notifyListeners(typeHint);\n  };\n\n  ret.removeSpatialFilter = function(typeHint) {\n    cross_x.filterAll();\n    cross_y.filterAll();\n    ret.notifyListeners(typeHint);\n  };\n\n  ret.addDataFilter = function(extent, field, typeHint) {\n    filters[field].filter(extent);\n    ret.notifyListeners(typeHint || 'data');\n  };\n\n  ret.removeDataFilter = function(field) {\n    filters[field].filterAll();\n    ret.notifyListeners('data-stop');\n  };\n\n  const listeners = [];\n  ret.addListener = function(x) {\n    listeners.push(x);\n  };\n  ret.clearListeners = function() {\n    while(listeners.length > 0) listeners.pop();\n  };\n\n  ret.notifyListeners = function(typeOfChange) {\n    _.each(f => f(typeOfChange), listeners);\n  };\n\n  return ret;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","import histogram from './histogram';\nimport dotplot from './dotplot';\nimport _ from 'lodash/fp';\nimport d3 from 'd3';\nimport autoscale from './auto-colorscale';\nimport utils from './utils';\nimport asyncBenchmark from './async-benchmark';\nimport { onData } from './colorscales';\n\nimport './style.css';\n\nimport {\n  RUN_BENCHMARKS,\n  SHOW_MAXIMA_AND_MINIMA\n} from './constants';\n\nfunction buildDiv(element_id, show_histograms) {\n  const div = d3.select(element_id)\n    .append('div')\n    .classed('_synteny-dotplot-builder', true);\n\n  div.append('svg').attr('id', 'dotplot').classed('dotplot', true);\n\n  const subdiv = div.append('div').classed('dotplot', true);\n  /* pointer-events = none stops the canvas from intercepting brush events\n   * before they get to the svg element below. */\n  subdiv.append('canvas')\n    .attr('id', 'dotplot-canvas-background').classed('dotplot', true)\n    .style('pointer-events', 'none');\n  subdiv.append('canvas')\n    .attr('id', 'dotplot-canvas').classed('dotplot', true)\n    .style('pointer-events', 'none');\n\n  if (show_histograms) {\n    const histogramAndTopForm = div.append('div')\n        .attr('id', 'histogram-and-top-form', true);\n\n    const formWrapperTop = histogramAndTopForm\n        .append('div').attr('id', 'form-wrapper-top');\n    const buttonWrapper = formWrapperTop\n      .append('div')\n      .classed('histogram-button-wrapper', true);\n    buttonWrapper.append('button')\n      .classed('histogram-button', true)\n      .attr('id', 'histogram-button-left')\n      .text('<');\n    buttonWrapper.append('div')\n      .attr('id', 'histogram-button-title')\n      .append('text')\n      .attr('id', 'histogram-button-title-text');\n    buttonWrapper.append('button')\n      .classed('histogram-button', true)\n      .attr('id', 'histogram-button-right')\n      .text('>');\n\n    const histogramWrapper = histogramAndTopForm\n        .append('div').attr('id', 'histogram-wrapper');\n    histogramWrapper.append('svg')\n      .attr('id', 'plot').classed('histogram', true);\n    histogramWrapper.append('svg')\n      .attr('id', 'plot2').classed('histogram', true);\n    histogramWrapper.append('svg')\n      .attr('id', 'plot3').classed('histogram', true);\n  }\n\n  const formWrapper = div.append('div').attr('id', 'form-wrapper');\n  function makeForm(title, optionId, elements, checkIndex) {\n    const navOptions = formWrapper\n      .append('div')\n      .classed('radio-button-box', true);\n    if(title) {\n      navOptions.append('text').text(title + ': ');\n    }\n\n    const navForm = navOptions.append('form').attr('id', optionId);\n    const options = navForm.selectAll('input')\n      .data(elements).enter().append('input')\n      .attr('type', 'radio').attr('name', optionId)\n      .attr('value', d => d[0]);\n\n    options.forEach(function(selection) {\n      selection.forEach(function(element, i) {\n        const label = document.createElement('label');\n        label.textContent = elements[i][1];\n        navForm.node().insertBefore(label, element);\n      });\n    });\n    options[0][checkIndex].checked = true;\n  }\n\n\n  if (show_histograms) {\n    const option = (value, text) => [value, text];\n    formWrapper.append('div')\n      .attr('id', 'form-top-label')\n      .append('strong').text('Controls');\n    makeForm('Navigation', 'mouse-options', [\n      option('brush', 'Brushing'),\n      option('pan', 'Panning')\n    ], 0);\n  \n    formWrapper.append('div').style('height', '10');\n\n    formWrapper.append('strong').text('Color Options');\n    makeForm('Color Scale', 'color-options', [\n      option('auto', 'auto'),\n      option('rainbow_quantized', 'rainbow_quantized')\n    ], 0);\n\n    const persistenceOptions = formWrapper\n      .append('div')\n      .classed('radio-button-box', true);\n    persistenceOptions.append('text').text('Auto-scale peak threshold: ');\n\n    const initialPersistence = 50;\n    persistenceOptions\n      .append('input')\n      .attr('id', 'persistence')\n      .attr('type', 'range')\n      .attr('min', 0)\n      .attr('max', 100)\n      .attr('value', initialPersistence)\n      .attr('step', 1);\n\n    persistenceOptions\n      .append('label')\n      .attr('id', 'persistence-text')\n      .text(initialPersistence);\n  }\n\n  formWrapper.append('div').style('height', '10');\n  formWrapper.append('strong').text('Point Selection');\n  const gevoLink = formWrapper.append('div');\n  gevoLink.append('div').attr('id', 'gevo-link-xname');\n  gevoLink.append('div').attr('id', 'gevo-link-yname');\n  gevoLink\n    .append('button')\n    .attr('id', 'gevo-link')\n    .text('No Point Selected');\n}\n\nfunction controller(dataObj, element_id, meta) {\n\n  buildDiv('#' + element_id, meta.have_ks);\n\n  const refreshPlot = _.debounce(100, function(colorScale) {\n    syntenyPlot.setField(activeField);\n    syntenyPlot.setColorScale(colorScale);\n  });\n\n  const refreshAutoScale = _.throttle(50, function(persistence) {\n    const radio = document.getElementById('color-options');\n    const auto = _.find({value: 'auto'}, radio.children);\n    auto.checked = true;\n\n    const bins = histograms[activeField].bins();\n    const newAutoScale = autoscale.generateAutoScale(bins, persistence);\n\n    histograms[activeField].setColorScale(newAutoScale);\n    refreshPlot(newAutoScale);\n\n    if (SHOW_MAXIMA_AND_MINIMA)\n      _.each(h => h.updateMinMaxMarkers(persistence), histograms);\n  });\n\n  const getPersistence = () => d3.select('#persistence').node().value;\n\n  d3.select('#persistence')\n    .on('input', function() {\n      const p = getPersistence();\n      refreshAutoScale(p);\n      d3.select('#persistence-text').node().innerText = p;\n    });\n\n  var syntenyPlot;\n  /* zoom/pan switching */\n  d3.selectAll('#mouse-options input[name=mouse-options]')\n    .on('change', function() {\n      syntenyPlot.setNavMode(this.value);\n    });\n\n  /* color mode switching */\n  var activeField = 'logks';\n\n  /* Don't be cute and use fat arrow functions here. Fat arrow functions\n   * have a lexically bound \"this\" and we really really need the old \"this\"\n   * scoping, since we are getting value from a form. */\n  d3.selectAll('#color-options input[name=color-options]')\n    .on('change', function() {\n      var newCS;\n      if (this.value === 'auto') {\n        newCS = autoscale.generateAutoScale(\n          histograms[activeField].bins(), getPersistence());\n      } else {\n        newCS = colorScale(activeField, this.value);\n      }\n      histograms[activeField].setColorScale(newCS);\n      syntenyPlot.setColorScale(newCS);\n    });\n\n  const colorScale = onData(dataObj.currentData().raw);\n\n  const initial = colorScale(activeField, 'rg');\n\n  if (!meta.have_ks) {\n    const scale = colorScale(activeField, 'unselected');\n    const synteny = dotplot.synteny;\n    syntenyPlot = synteny('#dotplot', dataObj, 'logks', scale, meta);\n    syntenyPlot.setNavMode('pan');\n    return;\n  }\n\n  function getInitialColorScale(histograms) {\n    const activePlot = histograms[activeField];\n    return autoscale.generateAutoScale(activePlot.bins(), getPersistence());\n  }\n\n  function setUpHistograms(initialCS) {\n    d3.selectAll('.histogram').classed('hidden', false);\n    const histograms = {\n      'logks': histogram.histogram('#plot', dataObj, 'logks', initialCS),\n      'logkn': histogram.histogram('#plot2', dataObj, 'logkn', initialCS),\n      'logknks': histogram.histogram('#plot3', dataObj, 'logknks', initialCS)\n    };\n    const activePlot = histograms[activeField];\n\n    const initialAutoScale = autoscale.generateAutoScale(activePlot.bins(),\n      getPersistence());\n    activePlot.setColorScale(initialAutoScale);\n\n    _(histograms)\n      .toPairs()\n      .filter(([name]) => name !== activeField)\n      .forEach(([name, plot]) => plot.setColorScale(\n        colorScale(name, 'unselected')));\n  \n    //FIXME\n    const name_map = {\n      'logks': 'plot',\n      'logkn': 'plot2',\n      'logknks': 'plot3'\n    };\n\n    var which = 0;\n    const other_smh = ['logks', 'logkn', 'logknks'];\n    const names_smh = ['plot', 'plot2', 'plot3'];\n    const scientific_names = [\n      'Synonomous - ks',\n      'Non-Synonomous - kn',\n      'Non-Synonomous / Synonomous ratio - kn/ks'\n    ];\n\n    const common = () => {\n      d3.selectAll('.histogram').classed('hidden', true);\n      d3.select('#' + names_smh[which]).classed('hidden', false);\n      activeField = other_smh[which];\n      d3.select('#histogram-button-title-text').text(scientific_names[which]);\n      refreshAutoScale(getPersistence());\n    };\n    d3.select('#histogram-button-left')\n      .on('click', () => {\n        which = (which + 2) % 3;\n        common();\n      });\n    d3.select('#histogram-button-right')\n      .on('click', () => {\n        which = (which + 1) % 3;\n        common();\n      });\n  \n    d3.selectAll('.histogram').classed('hidden', true);\n    d3.select('#' + name_map[activeField]).classed('hidden', false);\n    d3.select('#histogram-button-title-text').text(scientific_names[which]);\n  \n    // Since the histograms aren't controlling their own color scale policy \n    // now (a good thing), we need to manually fire of their update methods. \n    // Eventually, we should fix this up.\n    dataObj.addListener(function(typeHint) {\n      if (typeHint.indexOf('stop') > -1 && SHOW_MAXIMA_AND_MINIMA)\n        _.each(h => h.updateMinMaxMarkers(getPersistence()), histograms);\n    });\n    return histograms;\n  }\n\n  var histograms = setUpHistograms(initial);\n  syntenyPlot = dotplot.synteny('#dotplot', dataObj, 'logks',\n    getInitialColorScale(histograms), meta);\n  \n  dataObj.notifyListeners('initial');\n\n  // Resize the window? Tear everything out and rebuild it.\n  window.onresize = () => {\n    ['dotplot', 'plot', 'plot2', 'plot3'].forEach(id => {\n      const el = document.getElementById(id);\n      while(el.firstChild) el.removeChild(el.firstChild);\n    });\n    dataObj.clearListeners();\n    const cs = histograms[activeField].getColorScale();\n    histograms = setUpHistograms(cs);\n    syntenyPlot = dotplot.synteny('#dotplot', dataObj, activeField, cs, meta);\n  };\n\n  /* Benchmark */\n  if (RUN_BENCHMARKS) {\n    const [minLogKs, maxLogKs] = d3.extent(\n      dataObj.currentData().raw, x => x.logks);\n    const points = utils.samplePointsInRange([minLogKs, maxLogKs], 10);\n\n    const rangeList = _(points)\n      .flatMap(lo => _.map(hi => [lo, hi], points))\n      .filter(([lo, hi]) => lo < hi)\n      .value();\n\n    asyncBenchmark.benchmark(rangeList, function(range) {\n      histograms.logks.brush.extent(range);\n      histograms.logks.brush.event(histograms.logks.selection);\n    }, function({average, max}) {\n      alert('Average: ' + average + ', max: ' + max);\n    });\n  }\n}\n\nexports.controller = controller;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/synteny-vis.js\n **/","(function(exports){\ncrossfilter.version = \"1.3.12\";\nfunction crossfilter_identity(d) {\n  return d;\n}\ncrossfilter.permute = permute;\n\nfunction permute(array, index) {\n  for (var i = 0, n = index.length, copy = new Array(n); i < n; ++i) {\n    copy[i] = array[index[i]];\n  }\n  return copy;\n}\nvar bisect = crossfilter.bisect = bisect_by(crossfilter_identity);\n\nbisect.by = bisect_by;\n\nfunction bisect_by(f) {\n\n  // Locate the insertion point for x in a to maintain sorted order. The\n  // arguments lo and hi may be used to specify a subset of the array which\n  // should be considered; by default the entire array is used. If x is already\n  // present in a, the insertion point will be before (to the left of) any\n  // existing entries. The return value is suitable for use as the first\n  // argument to `array.splice` assuming that a is already sorted.\n  //\n  // The returned insertion point i partitions the array a into two halves so\n  // that all v < x for v in a[lo:i] for the left side and all v >= x for v in\n  // a[i:hi] for the right side.\n  function bisectLeft(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (f(a[mid]) < x) lo = mid + 1;\n      else hi = mid;\n    }\n    return lo;\n  }\n\n  // Similar to bisectLeft, but returns an insertion point which comes after (to\n  // the right of) any existing entries of x in a.\n  //\n  // The returned insertion point i partitions the array into two halves so that\n  // all v <= x for v in a[lo:i] for the left side and all v > x for v in\n  // a[i:hi] for the right side.\n  function bisectRight(a, x, lo, hi) {\n    while (lo < hi) {\n      var mid = lo + hi >>> 1;\n      if (x < f(a[mid])) hi = mid;\n      else lo = mid + 1;\n    }\n    return lo;\n  }\n\n  bisectRight.right = bisectRight;\n  bisectRight.left = bisectLeft;\n  return bisectRight;\n}\nvar heap = crossfilter.heap = heap_by(crossfilter_identity);\n\nheap.by = heap_by;\n\nfunction heap_by(f) {\n\n  // Builds a binary heap within the specified array a[lo:hi]. The heap has the\n  // property such that the parent a[lo+i] is always less than or equal to its\n  // two children: a[lo+2*i+1] and a[lo+2*i+2].\n  function heap(a, lo, hi) {\n    var n = hi - lo,\n        i = (n >>> 1) + 1;\n    while (--i > 0) sift(a, i, n, lo);\n    return a;\n  }\n\n  // Sorts the specified array a[lo:hi] in descending order, assuming it is\n  // already a heap.\n  function sort(a, lo, hi) {\n    var n = hi - lo,\n        t;\n    while (--n > 0) t = a[lo], a[lo] = a[lo + n], a[lo + n] = t, sift(a, 1, n, lo);\n    return a;\n  }\n\n  // Sifts the element a[lo+i-1] down the heap, where the heap is the contiguous\n  // slice of array a[lo:lo+n]. This method can also be used to update the heap\n  // incrementally, without incurring the full cost of reconstructing the heap.\n  function sift(a, i, n, lo) {\n    var d = a[--lo + i],\n        x = f(d),\n        child;\n    while ((child = i << 1) <= n) {\n      if (child < n && f(a[lo + child]) > f(a[lo + child + 1])) child++;\n      if (x <= f(a[lo + child])) break;\n      a[lo + i] = a[lo + child];\n      i = child;\n    }\n    a[lo + i] = d;\n  }\n\n  heap.sort = sort;\n  return heap;\n}\nvar heapselect = crossfilter.heapselect = heapselect_by(crossfilter_identity);\n\nheapselect.by = heapselect_by;\n\nfunction heapselect_by(f) {\n  var heap = heap_by(f);\n\n  // Returns a new array containing the top k elements in the array a[lo:hi].\n  // The returned array is not sorted, but maintains the heap property. If k is\n  // greater than hi - lo, then fewer than k elements will be returned. The\n  // order of elements in a is unchanged by this operation.\n  function heapselect(a, lo, hi, k) {\n    var queue = new Array(k = Math.min(hi - lo, k)),\n        min,\n        i,\n        x,\n        d;\n\n    for (i = 0; i < k; ++i) queue[i] = a[lo++];\n    heap(queue, 0, k);\n\n    if (lo < hi) {\n      min = f(queue[0]);\n      do {\n        if (x = f(d = a[lo]) > min) {\n          queue[0] = d;\n          min = f(heap(queue, 0, k)[0]);\n        }\n      } while (++lo < hi);\n    }\n\n    return queue;\n  }\n\n  return heapselect;\n}\nvar insertionsort = crossfilter.insertionsort = insertionsort_by(crossfilter_identity);\n\ninsertionsort.by = insertionsort_by;\n\nfunction insertionsort_by(f) {\n\n  function insertionsort(a, lo, hi) {\n    for (var i = lo + 1; i < hi; ++i) {\n      for (var j = i, t = a[i], x = f(t); j > lo && f(a[j - 1]) > x; --j) {\n        a[j] = a[j - 1];\n      }\n      a[j] = t;\n    }\n    return a;\n  }\n\n  return insertionsort;\n}\n// Algorithm designed by Vladimir Yaroslavskiy.\n// Implementation based on the Dart project; see lib/dart/LICENSE for details.\n\nvar quicksort = crossfilter.quicksort = quicksort_by(crossfilter_identity);\n\nquicksort.by = quicksort_by;\n\nfunction quicksort_by(f) {\n  var insertionsort = insertionsort_by(f);\n\n  function sort(a, lo, hi) {\n    return (hi - lo < quicksort_sizeThreshold\n        ? insertionsort\n        : quicksort)(a, lo, hi);\n  }\n\n  function quicksort(a, lo, hi) {\n    // Compute the two pivots by looking at 5 elements.\n    var sixth = (hi - lo) / 6 | 0,\n        i1 = lo + sixth,\n        i5 = hi - 1 - sixth,\n        i3 = lo + hi - 1 >> 1,  // The midpoint.\n        i2 = i3 - sixth,\n        i4 = i3 + sixth;\n\n    var e1 = a[i1], x1 = f(e1),\n        e2 = a[i2], x2 = f(e2),\n        e3 = a[i3], x3 = f(e3),\n        e4 = a[i4], x4 = f(e4),\n        e5 = a[i5], x5 = f(e5);\n\n    var t;\n\n    // Sort the selected 5 elements using a sorting network.\n    if (x1 > x2) t = e1, e1 = e2, e2 = t, t = x1, x1 = x2, x2 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n    if (x1 > x3) t = e1, e1 = e3, e3 = t, t = x1, x1 = x3, x3 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x1 > x4) t = e1, e1 = e4, e4 = t, t = x1, x1 = x4, x4 = t;\n    if (x3 > x4) t = e3, e3 = e4, e4 = t, t = x3, x3 = x4, x4 = t;\n    if (x2 > x5) t = e2, e2 = e5, e5 = t, t = x2, x2 = x5, x5 = t;\n    if (x2 > x3) t = e2, e2 = e3, e3 = t, t = x2, x2 = x3, x3 = t;\n    if (x4 > x5) t = e4, e4 = e5, e5 = t, t = x4, x4 = x5, x5 = t;\n\n    var pivot1 = e2, pivotValue1 = x2,\n        pivot2 = e4, pivotValue2 = x4;\n\n    // e2 and e4 have been saved in the pivot variables. They will be written\n    // back, once the partitioning is finished.\n    a[i1] = e1;\n    a[i2] = a[lo];\n    a[i3] = e3;\n    a[i4] = a[hi - 1];\n    a[i5] = e5;\n\n    var less = lo + 1,   // First element in the middle partition.\n        great = hi - 2;  // Last element in the middle partition.\n\n    // Note that for value comparison, <, <=, >= and > coerce to a primitive via\n    // Object.prototype.valueOf; == and === do not, so in order to be consistent\n    // with natural order (such as for Date objects), we must do two compares.\n    var pivotsEqual = pivotValue1 <= pivotValue2 && pivotValue1 >= pivotValue2;\n    if (pivotsEqual) {\n\n      // Degenerated case where the partitioning becomes a dutch national flag\n      // problem.\n      //\n      // [ |  < pivot  | == pivot | unpartitioned | > pivot  | ]\n      //  ^             ^          ^             ^            ^\n      // left         less         k           great         right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1) for x in ]left, less[ : x < pivot.\n      //   2) for x in [less, k[ : x == pivot.\n      //   3) for x in ]great, right[ : x > pivot.\n      for (var k = less; k <= great; ++k) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else if (xk > pivotValue1) {\n\n          // Find the first element <= pivot in the range [k - 1, great] and\n          // put [:ek:] there. We know that such an element must exist:\n          // When k == less, then el3 (which is equal to pivot) lies in the\n          // interval. Otherwise a[k - 1] == pivot and the search stops at k-1.\n          // Note that in the latter case invariant 2 will be violated for a\n          // short amount of time. The invariant will be restored when the\n          // pivots are put into their final positions.\n          while (true) {\n            var greatValue = f(a[great]);\n            if (greatValue > pivotValue1) {\n              great--;\n              // This is the only location in the while-loop where a new\n              // iteration is started.\n              continue;\n            } else if (greatValue < pivotValue1) {\n              // Triple exchange.\n              a[k] = a[less];\n              a[less++] = a[great];\n              a[great--] = ek;\n              break;\n            } else {\n              a[k] = a[great];\n              a[great--] = ek;\n              // Note: if great < k then we will exit the outer loop and fix\n              // invariant 2 (which we just violated).\n              break;\n            }\n          }\n        }\n      }\n    } else {\n\n      // We partition the list into three parts:\n      //  1. < pivot1\n      //  2. >= pivot1 && <= pivot2\n      //  3. > pivot2\n      //\n      // During the loop we have:\n      // [ | < pivot1 | >= pivot1 && <= pivot2 | unpartitioned  | > pivot2  | ]\n      //  ^            ^                        ^              ^             ^\n      // left         less                     k              great        right\n      //\n      // a[left] and a[right] are undefined and are filled after the\n      // partitioning.\n      //\n      // Invariants:\n      //   1. for x in ]left, less[ : x < pivot1\n      //   2. for x in [less, k[ : pivot1 <= x && x <= pivot2\n      //   3. for x in ]great, right[ : x > pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk < pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          ++less;\n        } else {\n          if (xk > pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue > pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] <= pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] >= pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // Move pivots into their final positions.\n    // We shrunk the list from both sides (a[left] and a[right] have\n    // meaningless values in them) and now we move elements from the first\n    // and third partition into these locations so that we can store the\n    // pivots.\n    a[lo] = a[less - 1];\n    a[less - 1] = pivot1;\n    a[hi - 1] = a[great + 1];\n    a[great + 1] = pivot2;\n\n    // The list is now partitioned into three partitions:\n    // [ < pivot1   | >= pivot1 && <= pivot2   |  > pivot2   ]\n    //  ^            ^                        ^             ^\n    // left         less                     great        right\n\n    // Recursive descent. (Don't include the pivot values.)\n    sort(a, lo, less - 1);\n    sort(a, great + 2, hi);\n\n    if (pivotsEqual) {\n      // All elements in the second partition are equal to the pivot. No\n      // need to sort them.\n      return a;\n    }\n\n    // In theory it should be enough to call _doSort recursively on the second\n    // partition.\n    // The Android source however removes the pivot elements from the recursive\n    // call if the second partition is too large (more than 2/3 of the list).\n    if (less < i1 && great > i5) {\n      var lessValue, greatValue;\n      while ((lessValue = f(a[less])) <= pivotValue1 && lessValue >= pivotValue1) ++less;\n      while ((greatValue = f(a[great])) <= pivotValue2 && greatValue >= pivotValue2) --great;\n\n      // Copy paste of the previous 3-way partitioning with adaptions.\n      //\n      // We partition the list into three parts:\n      //  1. == pivot1\n      //  2. > pivot1 && < pivot2\n      //  3. == pivot2\n      //\n      // During the loop we have:\n      // [ == pivot1 | > pivot1 && < pivot2 | unpartitioned  | == pivot2 ]\n      //              ^                      ^              ^\n      //            less                     k              great\n      //\n      // Invariants:\n      //   1. for x in [ *, less[ : x == pivot1\n      //   2. for x in [less, k[ : pivot1 < x && x < pivot2\n      //   3. for x in ]great, * ] : x == pivot2\n      for (var k = less; k <= great; k++) {\n        var ek = a[k], xk = f(ek);\n        if (xk <= pivotValue1 && xk >= pivotValue1) {\n          if (k !== less) {\n            a[k] = a[less];\n            a[less] = ek;\n          }\n          less++;\n        } else {\n          if (xk <= pivotValue2 && xk >= pivotValue2) {\n            while (true) {\n              var greatValue = f(a[great]);\n              if (greatValue <= pivotValue2 && greatValue >= pivotValue2) {\n                great--;\n                if (great < k) break;\n                // This is the only location inside the loop where a new\n                // iteration is started.\n                continue;\n              } else {\n                // a[great] < pivot2.\n                if (greatValue < pivotValue1) {\n                  // Triple exchange.\n                  a[k] = a[less];\n                  a[less++] = a[great];\n                  a[great--] = ek;\n                } else {\n                  // a[great] == pivot1.\n                  a[k] = a[great];\n                  a[great--] = ek;\n                }\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    // The second partition has now been cleared of pivot elements and looks\n    // as follows:\n    // [  *  |  > pivot1 && < pivot2  | * ]\n    //        ^                      ^\n    //       less                  great\n    // Sort the second partition using recursive descent.\n\n    // The second partition looks as follows:\n    // [  *  |  >= pivot1 && <= pivot2  | * ]\n    //        ^                        ^\n    //       less                    great\n    // Simply sort it by recursive descent.\n\n    return sort(a, less, great + 1);\n  }\n\n  return sort;\n}\n\nvar quicksort_sizeThreshold = 32;\nvar crossfilter_array8 = crossfilter_arrayUntyped,\n    crossfilter_array16 = crossfilter_arrayUntyped,\n    crossfilter_array32 = crossfilter_arrayUntyped,\n    crossfilter_arrayLengthen = crossfilter_arrayLengthenUntyped,\n    crossfilter_arrayWiden = crossfilter_arrayWidenUntyped;\n\nif (typeof Uint8Array !== \"undefined\") {\n  crossfilter_array8 = function(n) { return new Uint8Array(n); };\n  crossfilter_array16 = function(n) { return new Uint16Array(n); };\n  crossfilter_array32 = function(n) { return new Uint32Array(n); };\n\n  crossfilter_arrayLengthen = function(array, length) {\n    if (array.length >= length) return array;\n    var copy = new array.constructor(length);\n    copy.set(array);\n    return copy;\n  };\n\n  crossfilter_arrayWiden = function(array, width) {\n    var copy;\n    switch (width) {\n      case 16: copy = crossfilter_array16(array.length); break;\n      case 32: copy = crossfilter_array32(array.length); break;\n      default: throw new Error(\"invalid array width!\");\n    }\n    copy.set(array);\n    return copy;\n  };\n}\n\nfunction crossfilter_arrayUntyped(n) {\n  var array = new Array(n), i = -1;\n  while (++i < n) array[i] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayLengthenUntyped(array, length) {\n  var n = array.length;\n  while (n < length) array[n++] = 0;\n  return array;\n}\n\nfunction crossfilter_arrayWidenUntyped(array, width) {\n  if (width > 32) throw new Error(\"invalid array width!\");\n  return array;\n}\nfunction crossfilter_filterExact(bisect, value) {\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, value, 0, n), bisect.right(values, value, 0, n)];\n  };\n}\n\nfunction crossfilter_filterRange(bisect, range) {\n  var min = range[0],\n      max = range[1];\n  return function(values) {\n    var n = values.length;\n    return [bisect.left(values, min, 0, n), bisect.left(values, max, 0, n)];\n  };\n}\n\nfunction crossfilter_filterAll(values) {\n  return [0, values.length];\n}\nfunction crossfilter_null() {\n  return null;\n}\nfunction crossfilter_zero() {\n  return 0;\n}\nfunction crossfilter_reduceIncrement(p) {\n  return p + 1;\n}\n\nfunction crossfilter_reduceDecrement(p) {\n  return p - 1;\n}\n\nfunction crossfilter_reduceAdd(f) {\n  return function(p, v) {\n    return p + +f(v);\n  };\n}\n\nfunction crossfilter_reduceSubtract(f) {\n  return function(p, v) {\n    return p - f(v);\n  };\n}\nexports.crossfilter = crossfilter;\n\nfunction crossfilter() {\n  var crossfilter = {\n    add: add,\n    remove: removeData,\n    dimension: dimension,\n    groupAll: groupAll,\n    size: size\n  };\n\n  var data = [], // the records\n      n = 0, // the number of records; data.length\n      m = 0, // a bit mask representing which dimensions are in use\n      M = 8, // number of dimensions that can fit in `filters`\n      filters = crossfilter_array8(0), // M bits per record; 1 is filtered out\n      filterListeners = [], // when the filters change\n      dataListeners = [], // when data is added\n      removeDataListeners = []; // when data is removed\n\n  // Adds the specified new records to this crossfilter.\n  function add(newData) {\n    var n0 = n,\n        n1 = newData.length;\n\n    // If there's actually new data to add…\n    // Merge the new data into the existing data.\n    // Lengthen the filter bitset to handle the new records.\n    // Notify listeners (dimensions and groups) that new data is available.\n    if (n1) {\n      data = data.concat(newData);\n      filters = crossfilter_arrayLengthen(filters, n += n1);\n      dataListeners.forEach(function(l) { l(newData, n0, n1); });\n    }\n\n    return crossfilter;\n  }\n\n  // Removes all records that match the current filters.\n  function removeData() {\n    var newIndex = crossfilter_index(n, n),\n        removed = [];\n    for (var i = 0, j = 0; i < n; ++i) {\n      if (filters[i]) newIndex[i] = j++;\n      else removed.push(i);\n    }\n\n    // Remove all matching records from groups.\n    filterListeners.forEach(function(l) { l(0, [], removed); });\n\n    // Update indexes.\n    removeDataListeners.forEach(function(l) { l(newIndex); });\n\n    // Remove old filters and data by overwriting.\n    for (var i = 0, j = 0, k; i < n; ++i) {\n      if (k = filters[i]) {\n        if (i !== j) filters[j] = k, data[j] = data[i];\n        ++j;\n      }\n    }\n    data.length = j;\n    while (n > j) filters[--n] = 0;\n  }\n\n  // Adds a new dimension with the specified value accessor function.\n  function dimension(value) {\n    var dimension = {\n      filter: filter,\n      filterExact: filterExact,\n      filterRange: filterRange,\n      filterFunction: filterFunction,\n      filterAll: filterAll,\n      top: top,\n      bottom: bottom,\n      group: group,\n      groupAll: groupAll,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var one = ~m & -~m, // lowest unset bit as mask, e.g., 00001000\n        zero = ~one, // inverted one, e.g., 11110111\n        values, // sorted, cached array\n        index, // value rank ↦ object id\n        newValues, // temporary array storing newly-added values\n        newIndex, // temporary array storing newly-added index\n        sort = quicksort_by(function(i) { return newValues[i]; }),\n        refilter = crossfilter_filterAll, // for recomputing filter\n        refilterFunction, // the custom filter function in use\n        indexListeners = [], // when data is added\n        dimensionGroups = [],\n        lo0 = 0,\n        hi0 = 0;\n\n    // Updating a dimension is a two-stage process. First, we must update the\n    // associated filters for the newly-added records. Once all dimensions have\n    // updated their filters, the groups are notified to update.\n    dataListeners.unshift(preAdd);\n    dataListeners.push(postAdd);\n\n    removeDataListeners.push(removeData);\n\n    // Incorporate any existing data into this dimension, and make sure that the\n    // filter bitset is wide enough to handle the new dimension.\n    m |= one;\n    if (M >= 32 ? !one : m & -(1 << M)) {\n      filters = crossfilter_arrayWiden(filters, M <<= 1);\n    }\n    preAdd(data, 0, n);\n    postAdd(data, 0, n);\n\n    // Incorporates the specified new records into this dimension.\n    // This function is responsible for updating filters, values, and index.\n    function preAdd(newData, n0, n1) {\n\n      // Permute new values into natural order using a sorted index.\n      newValues = newData.map(value);\n      newIndex = sort(crossfilter_range(n1), 0, n1);\n      newValues = permute(newValues, newIndex);\n\n      // Bisect newValues to determine which new records are selected.\n      var bounds = refilter(newValues), lo1 = bounds[0], hi1 = bounds[1], i;\n      if (refilterFunction) {\n        for (i = 0; i < n1; ++i) {\n          if (!refilterFunction(newValues[i], i)) filters[newIndex[i] + n0] |= one;\n        }\n      } else {\n        for (i = 0; i < lo1; ++i) filters[newIndex[i] + n0] |= one;\n        for (i = hi1; i < n1; ++i) filters[newIndex[i] + n0] |= one;\n      }\n\n      // If this dimension previously had no data, then we don't need to do the\n      // more expensive merge operation; use the new values and index as-is.\n      if (!n0) {\n        values = newValues;\n        index = newIndex;\n        lo0 = lo1;\n        hi0 = hi1;\n        return;\n      }\n\n      var oldValues = values,\n          oldIndex = index,\n          i0 = 0,\n          i1 = 0;\n\n      // Otherwise, create new arrays into which to merge new and old.\n      values = new Array(n);\n      index = crossfilter_index(n, n);\n\n      // Merge the old and new sorted values, and old and new index.\n      for (i = 0; i0 < n0 && i1 < n1; ++i) {\n        if (oldValues[i0] < newValues[i1]) {\n          values[i] = oldValues[i0];\n          index[i] = oldIndex[i0++];\n        } else {\n          values[i] = newValues[i1];\n          index[i] = newIndex[i1++] + n0;\n        }\n      }\n\n      // Add any remaining old values.\n      for (; i0 < n0; ++i0, ++i) {\n        values[i] = oldValues[i0];\n        index[i] = oldIndex[i0];\n      }\n\n      // Add any remaining new values.\n      for (; i1 < n1; ++i1, ++i) {\n        values[i] = newValues[i1];\n        index[i] = newIndex[i1] + n0;\n      }\n\n      // Bisect again to recompute lo0 and hi0.\n      bounds = refilter(values), lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // When all filters have updated, notify index listeners of the new values.\n    function postAdd(newData, n0, n1) {\n      indexListeners.forEach(function(l) { l(newValues, newIndex, n0, n1); });\n      newValues = newIndex = null;\n    }\n\n    function removeData(reIndex) {\n      for (var i = 0, j = 0, k; i < n; ++i) {\n        if (filters[k = index[i]]) {\n          if (i !== j) values[j] = values[i];\n          index[j] = reIndex[k];\n          ++j;\n        }\n      }\n      values.length = j;\n      while (j < n) index[j++] = 0;\n\n      // Bisect again to recompute lo0 and hi0.\n      var bounds = refilter(values);\n      lo0 = bounds[0], hi0 = bounds[1];\n    }\n\n    // Updates the selected values based on the specified bounds [lo, hi].\n    // This implementation is used by all the public filter methods.\n    function filterIndexBounds(bounds) {\n      var lo1 = bounds[0],\n          hi1 = bounds[1];\n\n      if (refilterFunction) {\n        refilterFunction = null;\n        filterIndexFunction(function(d, i) { return lo1 <= i && i < hi1; });\n        lo0 = lo1;\n        hi0 = hi1;\n        return dimension;\n      }\n\n      var i,\n          j,\n          k,\n          added = [],\n          removed = [];\n\n      // Fast incremental update based on previous lo index.\n      if (lo1 < lo0) {\n        for (i = lo1, j = Math.min(lo0, hi1); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (lo1 > lo0) {\n        for (i = lo0, j = Math.min(lo1, hi0); i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      // Fast incremental update based on previous hi index.\n      if (hi1 > hi0) {\n        for (i = Math.max(lo1, hi0), j = hi1; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          added.push(k);\n        }\n      } else if (hi1 < hi0) {\n        for (i = Math.max(lo0, hi1), j = hi0; i < j; ++i) {\n          filters[k = index[i]] ^= one;\n          removed.push(k);\n        }\n      }\n\n      lo0 = lo1;\n      hi0 = hi1;\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n      return dimension;\n    }\n\n    // Filters this dimension using the specified range, value, or null.\n    // If the range is null, this is equivalent to filterAll.\n    // If the range is an array, this is equivalent to filterRange.\n    // Otherwise, this is equivalent to filterExact.\n    function filter(range) {\n      return range == null\n          ? filterAll() : Array.isArray(range)\n          ? filterRange(range) : typeof range === \"function\"\n          ? filterFunction(range)\n          : filterExact(range);\n    }\n\n    // Filters this dimension to select the exact value.\n    function filterExact(value) {\n      return filterIndexBounds((refilter = crossfilter_filterExact(bisect, value))(values));\n    }\n\n    // Filters this dimension to select the specified range [lo, hi].\n    // The lower bound is inclusive, and the upper bound is exclusive.\n    function filterRange(range) {\n      return filterIndexBounds((refilter = crossfilter_filterRange(bisect, range))(values));\n    }\n\n    // Clears any filters on this dimension.\n    function filterAll() {\n      return filterIndexBounds((refilter = crossfilter_filterAll)(values));\n    }\n\n    // Filters this dimension using an arbitrary function.\n    function filterFunction(f) {\n      refilter = crossfilter_filterAll;\n\n      filterIndexFunction(refilterFunction = f);\n\n      lo0 = 0;\n      hi0 = n;\n\n      return dimension;\n    }\n\n    function filterIndexFunction(f) {\n      var i,\n          k,\n          x,\n          added = [],\n          removed = [];\n\n      for (i = 0; i < n; ++i) {\n        if (!(filters[k = index[i]] & one) ^ !!(x = f(values[i], i))) {\n          if (x) filters[k] &= zero, added.push(k);\n          else filters[k] |= one, removed.push(k);\n        }\n      }\n      filterListeners.forEach(function(l) { l(one, added, removed); });\n    }\n\n    // Returns the top K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function top(k) {\n      var array = [],\n          i = hi0,\n          j;\n\n      while (--i >= lo0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n      }\n\n      return array;\n    }\n\n    // Returns the bottom K selected records based on this dimension's order.\n    // Note: observes this dimension's filter, unlike group and groupAll.\n    function bottom(k) {\n      var array = [],\n          i = lo0,\n          j;\n\n      while (i < hi0 && k > 0) {\n        if (!filters[j = index[i]]) {\n          array.push(data[j]);\n          --k;\n        }\n        i++;\n      }\n\n      return array;\n    }\n\n    // Adds a new group to this dimension, using the specified key function.\n    function group(key) {\n      var group = {\n        top: top,\n        all: all,\n        reduce: reduce,\n        reduceCount: reduceCount,\n        reduceSum: reduceSum,\n        order: order,\n        orderNatural: orderNatural,\n        size: size,\n        dispose: dispose,\n        remove: dispose // for backwards-compatibility\n      };\n\n      // Ensure that this group will be removed when the dimension is removed.\n      dimensionGroups.push(group);\n\n      var groups, // array of {key, value}\n          groupIndex, // object id ↦ group id\n          groupWidth = 8,\n          groupCapacity = crossfilter_capacity(groupWidth),\n          k = 0, // cardinality\n          select,\n          heap,\n          reduceAdd,\n          reduceRemove,\n          reduceInitial,\n          update = crossfilter_null,\n          reset = crossfilter_null,\n          resetNeeded = true,\n          groupAll = key === crossfilter_null;\n\n      if (arguments.length < 1) key = crossfilter_identity;\n\n      // The group listens to the crossfilter for when any dimension changes, so\n      // that it can update the associated reduce values. It must also listen to\n      // the parent dimension for when data is added, and compute new keys.\n      filterListeners.push(update);\n      indexListeners.push(add);\n      removeDataListeners.push(removeData);\n\n      // Incorporate any existing data into the grouping.\n      add(values, index, 0, n);\n\n      // Incorporates the specified new values into this group.\n      // This function is responsible for updating groups and groupIndex.\n      function add(newValues, newIndex, n0, n1) {\n        var oldGroups = groups,\n            reIndex = crossfilter_index(k, groupCapacity),\n            add = reduceAdd,\n            initial = reduceInitial,\n            k0 = k, // old cardinality\n            i0 = 0, // index of old group\n            i1 = 0, // index of new record\n            j, // object id\n            g0, // old group\n            x0, // old key\n            x1, // new key\n            g, // group to add\n            x; // key of group to add\n\n        // If a reset is needed, we don't need to update the reduce values.\n        if (resetNeeded) add = initial = crossfilter_null;\n\n        // Reset the new groups (k is a lower bound).\n        // Also, make sure that groupIndex exists and is long enough.\n        groups = new Array(k), k = 0;\n        groupIndex = k0 > 1 ? crossfilter_arrayLengthen(groupIndex, n) : crossfilter_index(n, groupCapacity);\n\n        // Get the first old key (x0 of g0), if it exists.\n        if (k0) x0 = (g0 = oldGroups[0]).key;\n\n        // Find the first new key (x1), skipping NaN keys.\n        while (i1 < n1 && !((x1 = key(newValues[i1])) >= x1)) ++i1;\n\n        // While new keys remain…\n        while (i1 < n1) {\n\n          // Determine the lesser of the two current keys; new and old.\n          // If there are no old keys remaining, then always add the new key.\n          if (g0 && x0 <= x1) {\n            g = g0, x = x0;\n\n            // Record the new index of the old group.\n            reIndex[i0] = k;\n\n            // Retrieve the next old key.\n            if (g0 = oldGroups[++i0]) x0 = g0.key;\n          } else {\n            g = {key: x1, value: initial()}, x = x1;\n          }\n\n          // Add the lesser group.\n          groups[k] = g;\n\n          // Add any selected records belonging to the added group, while\n          // advancing the new key and populating the associated group index.\n          while (!(x1 > x)) {\n            groupIndex[j = newIndex[i1] + n0] = k;\n            if (!(filters[j] & zero)) g.value = add(g.value, data[j]);\n            if (++i1 >= n1) break;\n            x1 = key(newValues[i1]);\n          }\n\n          groupIncrement();\n        }\n\n        // Add any remaining old groups that were greater than all new keys.\n        // No incremental reduce is needed; these groups have no new records.\n        // Also record the new index of the old group.\n        while (i0 < k0) {\n          groups[reIndex[i0] = k] = oldGroups[i0++];\n          groupIncrement();\n        }\n\n        // If we added any new groups before any old groups,\n        // update the group index of all the old records.\n        if (k > i0) for (i0 = 0; i0 < n0; ++i0) {\n          groupIndex[i0] = reIndex[groupIndex[i0]];\n        }\n\n        // Modify the update and reset behavior based on the cardinality.\n        // If the cardinality is less than or equal to one, then the groupIndex\n        // is not needed. If the cardinality is zero, then there are no records\n        // and therefore no groups to update or reset. Note that we also must\n        // change the registered listener to point to the new method.\n        j = filterListeners.indexOf(update);\n        if (k > 1) {\n          update = updateMany;\n          reset = resetMany;\n        } else {\n          if (!k && groupAll) {\n            k = 1;\n            groups = [{key: null, value: initial()}];\n          }\n          if (k === 1) {\n            update = updateOne;\n            reset = resetOne;\n          } else {\n            update = crossfilter_null;\n            reset = crossfilter_null;\n          }\n          groupIndex = null;\n        }\n        filterListeners[j] = update;\n\n        // Count the number of added groups,\n        // and widen the group index as needed.\n        function groupIncrement() {\n          if (++k === groupCapacity) {\n            reIndex = crossfilter_arrayWiden(reIndex, groupWidth <<= 1);\n            groupIndex = crossfilter_arrayWiden(groupIndex, groupWidth);\n            groupCapacity = crossfilter_capacity(groupWidth);\n          }\n        }\n      }\n\n      function removeData() {\n        if (k > 1) {\n          var oldK = k,\n              oldGroups = groups,\n              seenGroups = crossfilter_index(oldK, oldK);\n\n          // Filter out non-matches by copying matching group index entries to\n          // the beginning of the array.\n          for (var i = 0, j = 0; i < n; ++i) {\n            if (filters[i]) {\n              seenGroups[groupIndex[j] = groupIndex[i]] = 1;\n              ++j;\n            }\n          }\n\n          // Reassemble groups including only those groups that were referred\n          // to by matching group index entries.  Note the new group index in\n          // seenGroups.\n          groups = [], k = 0;\n          for (i = 0; i < oldK; ++i) {\n            if (seenGroups[i]) {\n              seenGroups[i] = k++;\n              groups.push(oldGroups[i]);\n            }\n          }\n\n          if (k > 1) {\n            // Reindex the group index using seenGroups to find the new index.\n            for (var i = 0; i < j; ++i) groupIndex[i] = seenGroups[groupIndex[i]];\n          } else {\n            groupIndex = null;\n          }\n          filterListeners[filterListeners.indexOf(update)] = k > 1\n              ? (reset = resetMany, update = updateMany)\n              : k === 1 ? (reset = resetOne, update = updateOne)\n              : reset = update = crossfilter_null;\n        } else if (k === 1) {\n          if (groupAll) return;\n          for (var i = 0; i < n; ++i) if (filters[i]) return;\n          groups = [], k = 0;\n          filterListeners[filterListeners.indexOf(update)] =\n          update = reset = crossfilter_null;\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is greater than 1.\n      function updateMany(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g;\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g = groups[groupIndex[k]];\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g = groups[groupIndex[k]];\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Reduces the specified selected or deselected records.\n      // This function is only used when the cardinality is 1.\n      function updateOne(filterOne, added, removed) {\n        if (filterOne === one || resetNeeded) return;\n\n        var i,\n            k,\n            n,\n            g = groups[0];\n\n        // Add the added values.\n        for (i = 0, n = added.length; i < n; ++i) {\n          if (!(filters[k = added[i]] & zero)) {\n            g.value = reduceAdd(g.value, data[k]);\n          }\n        }\n\n        // Remove the removed values.\n        for (i = 0, n = removed.length; i < n; ++i) {\n          if ((filters[k = removed[i]] & zero) === filterOne) {\n            g.value = reduceRemove(g.value, data[k]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is greater than 1.\n      function resetMany() {\n        var i,\n            g;\n\n        // Reset all group values.\n        for (i = 0; i < k; ++i) {\n          groups[i].value = reduceInitial();\n        }\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g = groups[groupIndex[i]];\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Recomputes the group reduce values from scratch.\n      // This function is only used when the cardinality is 1.\n      function resetOne() {\n        var i,\n            g = groups[0];\n\n        // Reset the singleton group values.\n        g.value = reduceInitial();\n\n        // Add any selected records.\n        for (i = 0; i < n; ++i) {\n          if (!(filters[i] & zero)) {\n            g.value = reduceAdd(g.value, data[i]);\n          }\n        }\n      }\n\n      // Returns the array of group values, in the dimension's natural order.\n      function all() {\n        if (resetNeeded) reset(), resetNeeded = false;\n        return groups;\n      }\n\n      // Returns a new array containing the top K group values, in reduce order.\n      function top(k) {\n        var top = select(all(), 0, groups.length, k);\n        return heap.sort(top, 0, top.length);\n      }\n\n      // Sets the reduce behavior for this group to use the specified functions.\n      // This method lazily recomputes the reduce values, waiting until needed.\n      function reduce(add, remove, initial) {\n        reduceAdd = add;\n        reduceRemove = remove;\n        reduceInitial = initial;\n        resetNeeded = true;\n        return group;\n      }\n\n      // A convenience method for reducing by count.\n      function reduceCount() {\n        return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n      }\n\n      // A convenience method for reducing by sum(value).\n      function reduceSum(value) {\n        return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n      }\n\n      // Sets the reduce order, using the specified accessor.\n      function order(value) {\n        select = heapselect_by(valueOf);\n        heap = heap_by(valueOf);\n        function valueOf(d) { return value(d.value); }\n        return group;\n      }\n\n      // A convenience method for natural ordering by reduce value.\n      function orderNatural() {\n        return order(crossfilter_identity);\n      }\n\n      // Returns the cardinality of this group, irrespective of any filters.\n      function size() {\n        return k;\n      }\n\n      // Removes this group and associated event listeners.\n      function dispose() {\n        var i = filterListeners.indexOf(update);\n        if (i >= 0) filterListeners.splice(i, 1);\n        i = indexListeners.indexOf(add);\n        if (i >= 0) indexListeners.splice(i, 1);\n        i = removeDataListeners.indexOf(removeData);\n        if (i >= 0) removeDataListeners.splice(i, 1);\n        return group;\n      }\n\n      return reduceCount().orderNatural();\n    }\n\n    // A convenience function for generating a singleton group.\n    function groupAll() {\n      var g = group(crossfilter_null), all = g.all;\n      delete g.all;\n      delete g.top;\n      delete g.order;\n      delete g.orderNatural;\n      delete g.size;\n      g.value = function() { return all()[0].value; };\n      return g;\n    }\n\n    // Removes this dimension and associated groups and event listeners.\n    function dispose() {\n      dimensionGroups.forEach(function(group) { group.dispose(); });\n      var i = dataListeners.indexOf(preAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = dataListeners.indexOf(postAdd);\n      if (i >= 0) dataListeners.splice(i, 1);\n      i = removeDataListeners.indexOf(removeData);\n      if (i >= 0) removeDataListeners.splice(i, 1);\n      m &= zero;\n      return filterAll();\n    }\n\n    return dimension;\n  }\n\n  // A convenience method for groupAll on a dummy dimension.\n  // This implementation can be optimized since it always has cardinality 1.\n  function groupAll() {\n    var group = {\n      reduce: reduce,\n      reduceCount: reduceCount,\n      reduceSum: reduceSum,\n      value: value,\n      dispose: dispose,\n      remove: dispose // for backwards-compatibility\n    };\n\n    var reduceValue,\n        reduceAdd,\n        reduceRemove,\n        reduceInitial,\n        resetNeeded = true;\n\n    // The group listens to the crossfilter for when any dimension changes, so\n    // that it can update the reduce value. It must also listen to the parent\n    // dimension for when data is added.\n    filterListeners.push(update);\n    dataListeners.push(add);\n\n    // For consistency; actually a no-op since resetNeeded is true.\n    add(data, 0, n);\n\n    // Incorporates the specified new values into this group.\n    function add(newData, n0) {\n      var i;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = n0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Reduces the specified selected or deselected records.\n    function update(filterOne, added, removed) {\n      var i,\n          k,\n          n;\n\n      if (resetNeeded) return;\n\n      // Add the added values.\n      for (i = 0, n = added.length; i < n; ++i) {\n        if (!filters[k = added[i]]) {\n          reduceValue = reduceAdd(reduceValue, data[k]);\n        }\n      }\n\n      // Remove the removed values.\n      for (i = 0, n = removed.length; i < n; ++i) {\n        if (filters[k = removed[i]] === filterOne) {\n          reduceValue = reduceRemove(reduceValue, data[k]);\n        }\n      }\n    }\n\n    // Recomputes the group reduce value from scratch.\n    function reset() {\n      var i;\n\n      reduceValue = reduceInitial();\n\n      for (i = 0; i < n; ++i) {\n        if (!filters[i]) {\n          reduceValue = reduceAdd(reduceValue, data[i]);\n        }\n      }\n    }\n\n    // Sets the reduce behavior for this group to use the specified functions.\n    // This method lazily recomputes the reduce value, waiting until needed.\n    function reduce(add, remove, initial) {\n      reduceAdd = add;\n      reduceRemove = remove;\n      reduceInitial = initial;\n      resetNeeded = true;\n      return group;\n    }\n\n    // A convenience method for reducing by count.\n    function reduceCount() {\n      return reduce(crossfilter_reduceIncrement, crossfilter_reduceDecrement, crossfilter_zero);\n    }\n\n    // A convenience method for reducing by sum(value).\n    function reduceSum(value) {\n      return reduce(crossfilter_reduceAdd(value), crossfilter_reduceSubtract(value), crossfilter_zero);\n    }\n\n    // Returns the computed reduce value.\n    function value() {\n      if (resetNeeded) reset(), resetNeeded = false;\n      return reduceValue;\n    }\n\n    // Removes this group and associated event listeners.\n    function dispose() {\n      var i = filterListeners.indexOf(update);\n      if (i >= 0) filterListeners.splice(i);\n      i = dataListeners.indexOf(add);\n      if (i >= 0) dataListeners.splice(i);\n      return group;\n    }\n\n    return reduceCount();\n  }\n\n  // Returns the number of records in this crossfilter, irrespective of any filters.\n  function size() {\n    return n;\n  }\n\n  return arguments.length\n      ? add(arguments[0])\n      : crossfilter;\n}\n\n// Returns an array of size n, big enough to store ids up to m.\nfunction crossfilter_index(n, m) {\n  return (m < 0x101\n      ? crossfilter_array8 : m < 0x10001\n      ? crossfilter_array16\n      : crossfilter_array32)(n);\n}\n\n// Constructs a new array of size n, with sequential values from 0 to n - 1.\nfunction crossfilter_range(n) {\n  var range = crossfilter_index(n, n);\n  for (var i = -1; ++i < n;) range[i] = i;\n  return range;\n}\n\nfunction crossfilter_capacity(w) {\n  return w === 8\n      ? 0x100 : w === 16\n      ? 0x10000\n      : 0x100000000;\n}\n})(typeof exports !== 'undefined' && exports || this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/crossfilter.js\n ** module id = 14\n ** module chunks = 0\n **/","module.exports = require(\"./crossfilter\").crossfilter;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/crossfilter/index.js\n ** module id = 15\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"._synteny-dotplot-builder{width:100%;height:100%}._synteny-dotplot-builder .extent{fill:grey;opacity:.2}._synteny-dotplot-builder .domain{fill:none;stroke:#000}._synteny-dotplot-builder #form-wrapper,._synteny-dotplot-builder #histogram-and-top-form,._synteny-dotplot-builder .dotplot{border:1px solid #191;border-radius:0;box-sizing:border-box}._synteny-dotplot-builder .dotplot{float:left;position:relative}._synteny-dotplot-builder .dotplot:not(#dotplot){float:left;position:absolute}._synteny-dotplot-builder #dotplot{width:70%;height:100%}._synteny-dotplot-builder #dotplot .tick line{stroke:rgba(0,0,0,.25)}._synteny-dotplot-builder .histogram-button-wrapper{width:80%;margin-left:10%}._synteny-dotplot-builder .histogram-button{position:relative;float:left;width:10%;color:grey}._synteny-dotplot-builder #histogram-button-title{position:relative;float:left;width:80%;text-align:center}._synteny-dotplot-builder .hidden{display:none}._synteny-dotplot-builder .pressed{color:#000}._synteny-dotplot-builder #histogram-and-top-form{float:right;width:28.5%;height:65%}._synteny-dotplot-builder #histogram-wrapper{float:right;width:100%;height:90%}._synteny-dotplot-builder .histogram{position:relative;width:100%;height:100%}._synteny-dotplot-builder .histogram .histogram-title{font-size:14pt}._synteny-dotplot-builder .histogram .tick line{stroke:grey}._synteny-dotplot-builder #form-wrapper{margin-top:1.5%;float:right;width:28.5%;height:auto;font-size:14pt}._synteny-dotplot-builder #form-wrapper-top{float:right;width:100%;height:10%;font-size:14pt}._synteny-dotplot-builder form{display:inline}#histogram-button-left,#histogram-button-right,#histogram-button-title{margin-top:2%}#form-wrapper strong,#form-wrapper text,#gevo-link,#gevo-link-xname,#gevo-link-yname{margin-left:2%}#gevo-link{margin-bottom:2%}#form-top-label{margin-top:2%}\", \"\"]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader!./src/style.css\n ** module id = 16\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 17\n ** module chunks = 0\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_queue = global.d3_queue || {})));\n}(this, function (exports) { 'use strict';\n\n  var version = \"2.0.3\";\n\n  var slice = [].slice;\n\n  var noabort = {};\n\n  function Queue(size) {\n    if (!(size >= 1)) throw new Error;\n    this._size = size;\n    this._call =\n    this._error = null;\n    this._tasks = [];\n    this._data = [];\n    this._waiting =\n    this._active =\n    this._ended =\n    this._start = 0; // inside a synchronous task callback?\n  }\n\n  Queue.prototype = queue.prototype = {\n    constructor: Queue,\n    defer: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      if (this._error != null) return this;\n      var t = slice.call(arguments, 1);\n      t.push(callback);\n      ++this._waiting, this._tasks.push(t);\n      poke(this);\n      return this;\n    },\n    abort: function() {\n      if (this._error == null) abort(this, new Error(\"abort\"));\n      return this;\n    },\n    await: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n      maybeNotify(this);\n      return this;\n    },\n    awaitAll: function(callback) {\n      if (typeof callback !== \"function\" || this._call) throw new Error;\n      this._call = callback;\n      maybeNotify(this);\n      return this;\n    }\n  };\n\n  function poke(q) {\n    if (!q._start) try { start(q); } // let the current task complete\n    catch (e) { if (q._tasks[q._ended + q._active - 1]) abort(q, e); } // task errored synchronously\n  }\n\n  function start(q) {\n    while (q._start = q._waiting && q._active < q._size) {\n      var i = q._ended + q._active,\n          t = q._tasks[i],\n          j = t.length - 1,\n          c = t[j];\n      t[j] = end(q, i);\n      --q._waiting, ++q._active;\n      t = c.apply(null, t);\n      if (!q._tasks[i]) continue; // task finished synchronously\n      q._tasks[i] = t || noabort;\n    }\n  }\n\n  function end(q, i) {\n    return function(e, r) {\n      if (!q._tasks[i]) return; // ignore multiple callbacks\n      --q._active, ++q._ended;\n      q._tasks[i] = null;\n      if (q._error != null) return; // ignore secondary errors\n      if (e != null) {\n        abort(q, e);\n      } else {\n        q._data[i] = r;\n        if (q._waiting) poke(q);\n        else maybeNotify(q);\n      }\n    };\n  }\n\n  function abort(q, e) {\n    var i = q._tasks.length, t;\n    q._error = e; // ignore active callbacks\n    q._data = undefined; // allow gc\n    q._waiting = NaN; // prevent starting\n\n    while (--i >= 0) {\n      if (t = q._tasks[i]) {\n        q._tasks[i] = null;\n        if (t.abort) try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n\n    q._active = NaN; // allow notification\n    maybeNotify(q);\n  }\n\n  function maybeNotify(q) {\n    if (!q._active && q._call) q._call(q._error, q._data);\n  }\n\n  function queue(concurrency) {\n    return new Queue(arguments.length ? +concurrency : Infinity);\n  }\n\n  exports.version = version;\n  exports.queue = queue;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/d3-queue/build/d3-queue.js\n ** module id = 18\n ** module chunks = 0\n **/","var mapping = require('./_mapping'),\n    mutateMap = mapping.mutate,\n    fallbackHolder = require('./placeholder');\n\n/**\n * Creates a function, with an arity of `n`, that invokes `func` with the\n * arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} n The arity of the new function.\n * @returns {Function} Returns the new function.\n */\nfunction baseArity(func, n) {\n  return n == 2\n    ? function(a, b) { return func.apply(undefined, arguments); }\n    : function(a) { return func.apply(undefined, arguments); };\n}\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments, ignoring\n * any additional arguments.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @param {number} n The arity cap.\n * @returns {Function} Returns the new function.\n */\nfunction baseAry(func, n) {\n  return n == 2\n    ? function(a, b) { return func(a, b); }\n    : function(a) { return func(a); };\n}\n\n/**\n * Creates a clone of `array`.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the cloned array.\n */\nfunction cloneArray(array) {\n  var length = array ? array.length : 0,\n      result = Array(length);\n\n  while (length--) {\n    result[length] = array[length];\n  }\n  return result;\n}\n\n/**\n * Creates a function that clones a given object using the assignment `func`.\n *\n * @private\n * @param {Function} func The assignment function.\n * @returns {Function} Returns the new cloner function.\n */\nfunction createCloner(func) {\n  return function(object) {\n    return func({}, object);\n  };\n}\n\n/**\n * Creates a function that wraps `func` and uses `cloner` to clone the first\n * argument it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} cloner The function to clone arguments.\n * @returns {Function} Returns the new immutable function.\n */\nfunction wrapImmutable(func, cloner) {\n  return function() {\n    var length = arguments.length;\n    if (!length) {\n      return;\n    }\n    var args = Array(length);\n    while (length--) {\n      args[length] = arguments[length];\n    }\n    var result = args[0] = cloner.apply(undefined, args);\n    func.apply(undefined, args);\n    return result;\n  };\n}\n\n/**\n * The base implementation of `convert` which accepts a `util` object of methods\n * required to perform conversions.\n *\n * @param {Object} util The util object.\n * @param {string} name The name of the function to convert.\n * @param {Function} func The function to convert.\n * @param {Object} [options] The options object.\n * @param {boolean} [options.cap=true] Specify capping iteratee arguments.\n * @param {boolean} [options.curry=true] Specify currying.\n * @param {boolean} [options.fixed=true] Specify fixed arity.\n * @param {boolean} [options.immutable=true] Specify immutable operations.\n * @param {boolean} [options.rearg=true] Specify rearranging arguments.\n * @returns {Function|Object} Returns the converted function or object.\n */\nfunction baseConvert(util, name, func, options) {\n  var setPlaceholder,\n      isLib = typeof name == 'function',\n      isObj = name === Object(name);\n\n  if (isObj) {\n    options = func;\n    func = name;\n    name = undefined;\n  }\n  if (func == null) {\n    throw new TypeError;\n  }\n  options || (options = {});\n\n  var config = {\n    'cap': 'cap' in options ? options.cap : true,\n    'curry': 'curry' in options ? options.curry : true,\n    'fixed': 'fixed' in options ? options.fixed : true,\n    'immutable': 'immutable' in options ? options.immutable : true,\n    'rearg': 'rearg' in options ? options.rearg : true\n  };\n\n  var forceCurry = ('curry' in options) && options.curry,\n      forceFixed = ('fixed' in options) && options.fixed,\n      forceRearg = ('rearg' in options) && options.rearg,\n      placeholder = isLib ? func : fallbackHolder,\n      pristine = isLib ? func.runInContext() : undefined;\n\n  var helpers = isLib ? func : {\n    'ary': util.ary,\n    'assign': util.assign,\n    'clone': util.clone,\n    'curry': util.curry,\n    'forEach': util.forEach,\n    'isArray': util.isArray,\n    'isFunction': util.isFunction,\n    'iteratee': util.iteratee,\n    'keys': util.keys,\n    'rearg': util.rearg,\n    'spread': util.spread,\n    'toInteger': util.toInteger,\n    'toPath': util.toPath\n  };\n\n  var ary = helpers.ary,\n      assign = helpers.assign,\n      clone = helpers.clone,\n      curry = helpers.curry,\n      each = helpers.forEach,\n      isArray = helpers.isArray,\n      isFunction = helpers.isFunction,\n      keys = helpers.keys,\n      rearg = helpers.rearg,\n      spread = helpers.spread,\n      toInteger = helpers.toInteger,\n      toPath = helpers.toPath;\n\n  var aryMethodKeys = keys(mapping.aryMethod);\n\n  var wrappers = {\n    'castArray': function(castArray) {\n      return function() {\n        var value = arguments[0];\n        return isArray(value)\n          ? castArray(cloneArray(value))\n          : castArray.apply(undefined, arguments);\n      };\n    },\n    'iteratee': function(iteratee) {\n      return function() {\n        var func = arguments[0],\n            arity = arguments[1],\n            result = iteratee(func, arity),\n            length = result.length;\n\n        if (config.cap && typeof arity == 'number') {\n          arity = arity > 2 ? (arity - 2) : 1;\n          return (length && length <= arity) ? result : baseAry(result, arity);\n        }\n        return result;\n      };\n    },\n    'mixin': function(mixin) {\n      return function(source) {\n        var func = this;\n        if (!isFunction(func)) {\n          return mixin(func, Object(source));\n        }\n        var pairs = [];\n        each(keys(source), function(key) {\n          if (isFunction(source[key])) {\n            pairs.push([key, func.prototype[key]]);\n          }\n        });\n\n        mixin(func, Object(source));\n\n        each(pairs, function(pair) {\n          var value = pair[1];\n          if (isFunction(value)) {\n            func.prototype[pair[0]] = value;\n          } else {\n            delete func.prototype[pair[0]];\n          }\n        });\n        return func;\n      };\n    },\n    'nthArg': function(nthArg) {\n      return function(n) {\n        var arity = n < 0 ? 1 : (toInteger(n) + 1);\n        return curry(nthArg(n), arity);\n      };\n    },\n    'rearg': function(rearg) {\n      return function(func, indexes) {\n        var arity = indexes ? indexes.length : 0;\n        return curry(rearg(func, indexes), arity);\n      };\n    },\n    'runInContext': function(runInContext) {\n      return function(context) {\n        return baseConvert(util, runInContext(context), options);\n      };\n    }\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Casts `func` to a function with an arity capped iteratee if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCap(name, func) {\n    if (config.cap) {\n      var indexes = mapping.iterateeRearg[name];\n      if (indexes) {\n        return iterateeRearg(func, indexes);\n      }\n      var n = !isLib && mapping.iterateeAry[name];\n      if (n) {\n        return iterateeAry(func, n);\n      }\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to a curried function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castCurry(name, func, n) {\n    return (forceCurry || (config.curry && n > 1))\n      ? curry(func, n)\n      : func;\n  }\n\n  /**\n   * Casts `func` to a fixed arity function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the cast function.\n   */\n  function castFixed(name, func, n) {\n    if (config.fixed && (forceFixed || !mapping.skipFixed[name])) {\n      var data = mapping.methodSpread[name],\n          start = data && data.start;\n\n      return start  === undefined ? ary(func, n) : spread(func, start);\n    }\n    return func;\n  }\n\n  /**\n   * Casts `func` to an rearged function if needed.\n   *\n   * @private\n   * @param {string} name The name of the function to inspect.\n   * @param {Function} func The function to inspect.\n   * @param {number} n The arity of `func`.\n   * @returns {Function} Returns the cast function.\n   */\n  function castRearg(name, func, n) {\n    return (config.rearg && n > 1 && (forceRearg || !mapping.skipRearg[name]))\n      ? rearg(func, mapping.methodRearg[name] || mapping.aryRearg[n])\n      : func;\n  }\n\n  /**\n   * Creates a clone of `object` by `path`.\n   *\n   * @private\n   * @param {Object} object The object to clone.\n   * @param {Array|string} path The path to clone by.\n   * @returns {Object} Returns the cloned object.\n   */\n  function cloneByPath(object, path) {\n    path = toPath(path);\n\n    var index = -1,\n        length = path.length,\n        lastIndex = length - 1,\n        result = clone(Object(object)),\n        nested = result;\n\n    while (nested != null && ++index < length) {\n      var key = path[index],\n          value = nested[key];\n\n      if (value != null) {\n        nested[path[index]] = clone(index == lastIndex ? value : Object(value));\n      }\n      nested = nested[key];\n    }\n    return result;\n  }\n\n  /**\n   * Converts `lodash` to an immutable auto-curried iteratee-first data-last\n   * version with conversion `options` applied.\n   *\n   * @param {Object} [options] The options object. See `baseConvert` for more details.\n   * @returns {Function} Returns the converted `lodash`.\n   */\n  function convertLib(options) {\n    return _.runInContext.convert(options)(undefined);\n  }\n\n  /**\n   * Create a converter function for `func` of `name`.\n   *\n   * @param {string} name The name of the function to convert.\n   * @param {Function} func The function to convert.\n   * @returns {Function} Returns the new converter function.\n   */\n  function createConverter(name, func) {\n    var oldOptions = options;\n    return function(options) {\n      var newUtil = isLib ? pristine : helpers,\n          newFunc = isLib ? pristine[name] : func,\n          newOptions = assign(assign({}, oldOptions), options);\n\n      return baseConvert(newUtil, name, newFunc, newOptions);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee, with up to `n`\n   * arguments, ignoring any additional arguments.\n   *\n   * @private\n   * @param {Function} func The function to cap iteratee arguments for.\n   * @param {number} n The arity cap.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeAry(func, n) {\n    return overArg(func, function(func) {\n      return typeof func == 'function' ? baseAry(func, n) : func;\n    });\n  }\n\n  /**\n   * Creates a function that wraps `func` to invoke its iteratee with arguments\n   * arranged according to the specified `indexes` where the argument value at\n   * the first index is provided as the first argument, the argument value at\n   * the second index is provided as the second argument, and so on.\n   *\n   * @private\n   * @param {Function} func The function to rearrange iteratee arguments for.\n   * @param {number[]} indexes The arranged argument indexes.\n   * @returns {Function} Returns the new function.\n   */\n  function iterateeRearg(func, indexes) {\n    return overArg(func, function(func) {\n      var n = indexes.length;\n      return baseArity(rearg(baseAry(func, n), indexes), n);\n    });\n  }\n\n  /**\n   * Creates a function that invokes `func` with its first argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function() {\n      var length = arguments.length;\n      if (!length) {\n        return func();\n      }\n      var args = Array(length);\n      while (length--) {\n        args[length] = arguments[length];\n      }\n      var index = config.rearg ? 0 : (length - 1);\n      args[index] = transform(args[index]);\n      return func.apply(undefined, args);\n    };\n  }\n\n  /**\n   * Creates a function that wraps `func` and applys the conversions\n   * rules by `name`.\n   *\n   * @private\n   * @param {string} name The name of the function to wrap.\n   * @param {Function} func The function to wrap.\n   * @returns {Function} Returns the converted function.\n   */\n  function wrap(name, func) {\n    name = mapping.aliasToReal[name] || name;\n\n    var result,\n        wrapped = func,\n        wrapper = wrappers[name];\n\n    if (wrapper) {\n      wrapped = wrapper(func);\n    }\n    else if (config.immutable) {\n      if (mutateMap.array[name]) {\n        wrapped = wrapImmutable(func, cloneArray);\n      }\n      else if (mutateMap.object[name]) {\n        wrapped = wrapImmutable(func, createCloner(func));\n      }\n      else if (mutateMap.set[name]) {\n        wrapped = wrapImmutable(func, cloneByPath);\n      }\n    }\n    each(aryMethodKeys, function(aryKey) {\n      each(mapping.aryMethod[aryKey], function(otherName) {\n        if (name == otherName) {\n          var spreadData = mapping.methodSpread[name],\n              afterRearg = spreadData && spreadData.afterRearg;\n\n          result = afterRearg\n            ? castFixed(name, castRearg(name, wrapped, aryKey), aryKey)\n            : castRearg(name, castFixed(name, wrapped, aryKey), aryKey);\n\n          result = castCap(name, result);\n          result = castCurry(name, result, aryKey);\n          return false;\n        }\n      });\n      return !result;\n    });\n\n    result || (result = wrapped);\n    if (result == func) {\n      result = forceCurry ? curry(result, 1) : function() {\n        return func.apply(this, arguments);\n      };\n    }\n    result.convert = createConverter(name, func);\n    if (mapping.placeholder[name]) {\n      setPlaceholder = true;\n      result.placeholder = func.placeholder = placeholder;\n    }\n    return result;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  if (!isObj) {\n    return wrap(name, func);\n  }\n  var _ = func;\n\n  // Convert methods by ary cap.\n  var pairs = [];\n  each(aryMethodKeys, function(aryKey) {\n    each(mapping.aryMethod[aryKey], function(key) {\n      var func = _[mapping.remap[key] || key];\n      if (func) {\n        pairs.push([key, wrap(key, func)]);\n      }\n    });\n  });\n\n  // Convert remaining methods.\n  each(keys(_), function(key) {\n    var func = _[key];\n    if (typeof func == 'function') {\n      var length = pairs.length;\n      while (length--) {\n        if (pairs[length][0] == key) {\n          return;\n        }\n      }\n      func.convert = createConverter(key, func);\n      pairs.push([key, func]);\n    }\n  });\n\n  // Assign to `_` leaving `_.prototype` unchanged to allow chaining.\n  each(pairs, function(pair) {\n    _[pair[0]] = pair[1];\n  });\n\n  _.convert = convertLib;\n  if (setPlaceholder) {\n    _.placeholder = placeholder;\n  }\n  // Assign aliases.\n  each(keys(_), function(key) {\n    each(mapping.realToAlias[key] || [], function(alias) {\n      _[alias] = _[key];\n    });\n  });\n\n  return _;\n}\n\nmodule.exports = baseConvert;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/fp/_baseConvert.js\n ** module id = 19\n ** module chunks = 0\n **/","/** Used to map aliases to their real names. */\nexports.aliasToReal = {\n\n  // Lodash aliases.\n  'each': 'forEach',\n  'eachRight': 'forEachRight',\n  'entries': 'toPairs',\n  'entriesIn': 'toPairsIn',\n  'extend': 'assignIn',\n  'extendAll': 'assignInAll',\n  'extendAllWith': 'assignInAllWith',\n  'extendWith': 'assignInWith',\n  'first': 'head',\n\n  // Methods that are curried variants of others.\n  'conforms': 'conformsTo',\n  'matches': 'isMatch',\n  'property': 'get',\n\n  // Ramda aliases.\n  '__': 'placeholder',\n  'F': 'stubFalse',\n  'T': 'stubTrue',\n  'all': 'every',\n  'allPass': 'overEvery',\n  'always': 'constant',\n  'any': 'some',\n  'anyPass': 'overSome',\n  'apply': 'spread',\n  'assoc': 'set',\n  'assocPath': 'set',\n  'complement': 'negate',\n  'compose': 'flowRight',\n  'contains': 'includes',\n  'dissoc': 'unset',\n  'dissocPath': 'unset',\n  'dropLast': 'dropRight',\n  'dropLastWhile': 'dropRightWhile',\n  'equals': 'isEqual',\n  'identical': 'eq',\n  'indexBy': 'keyBy',\n  'init': 'initial',\n  'invertObj': 'invert',\n  'juxt': 'over',\n  'omitAll': 'omit',\n  'nAry': 'ary',\n  'path': 'get',\n  'pathEq': 'matchesProperty',\n  'pathOr': 'getOr',\n  'paths': 'at',\n  'pickAll': 'pick',\n  'pipe': 'flow',\n  'pluck': 'map',\n  'prop': 'get',\n  'propEq': 'matchesProperty',\n  'propOr': 'getOr',\n  'props': 'at',\n  'symmetricDifference': 'xor',\n  'symmetricDifferenceBy': 'xorBy',\n  'symmetricDifferenceWith': 'xorWith',\n  'takeLast': 'takeRight',\n  'takeLastWhile': 'takeRightWhile',\n  'unapply': 'rest',\n  'unnest': 'flatten',\n  'useWith': 'overArgs',\n  'where': 'conformsTo',\n  'whereEq': 'isMatch',\n  'zipObj': 'zipObject'\n};\n\n/** Used to map ary to method names. */\nexports.aryMethod = {\n  '1': [\n    'assignAll', 'assignInAll', 'attempt', 'castArray', 'ceil', 'create',\n    'curry', 'curryRight', 'defaultsAll', 'defaultsDeepAll', 'floor', 'flow',\n    'flowRight', 'fromPairs', 'invert', 'iteratee', 'memoize', 'method', 'mergeAll',\n    'methodOf', 'mixin', 'nthArg', 'over', 'overEvery', 'overSome','rest', 'reverse',\n    'round', 'runInContext', 'spread', 'template', 'trim', 'trimEnd', 'trimStart',\n    'uniqueId', 'words', 'zipAll'\n  ],\n  '2': [\n    'add', 'after', 'ary', 'assign', 'assignAllWith', 'assignIn', 'assignInAllWith',\n    'at', 'before', 'bind', 'bindAll', 'bindKey', 'chunk', 'cloneDeepWith',\n    'cloneWith', 'concat', 'conformsTo', 'countBy', 'curryN', 'curryRightN',\n    'debounce', 'defaults', 'defaultsDeep', 'defaultTo', 'delay', 'difference',\n    'divide', 'drop', 'dropRight', 'dropRightWhile', 'dropWhile', 'endsWith', 'eq',\n    'every', 'filter', 'find', 'findIndex', 'findKey', 'findLast', 'findLastIndex',\n    'findLastKey', 'flatMap', 'flatMapDeep', 'flattenDepth', 'forEach',\n    'forEachRight', 'forIn', 'forInRight', 'forOwn', 'forOwnRight', 'get',\n    'groupBy', 'gt', 'gte', 'has', 'hasIn', 'includes', 'indexOf', 'intersection',\n    'invertBy', 'invoke', 'invokeMap', 'isEqual', 'isMatch', 'join', 'keyBy',\n    'lastIndexOf', 'lt', 'lte', 'map', 'mapKeys', 'mapValues', 'matchesProperty',\n    'maxBy', 'meanBy', 'merge', 'mergeAllWith', 'minBy', 'multiply', 'nth', 'omit',\n    'omitBy', 'overArgs', 'pad', 'padEnd', 'padStart', 'parseInt', 'partial',\n    'partialRight', 'partition', 'pick', 'pickBy', 'propertyOf', 'pull', 'pullAll',\n    'pullAt', 'random', 'range', 'rangeRight', 'rearg', 'reject', 'remove',\n    'repeat', 'restFrom', 'result', 'sampleSize', 'some', 'sortBy', 'sortedIndex',\n    'sortedIndexOf', 'sortedLastIndex', 'sortedLastIndexOf', 'sortedUniqBy',\n    'split', 'spreadFrom', 'startsWith', 'subtract', 'sumBy', 'take', 'takeRight',\n    'takeRightWhile', 'takeWhile', 'tap', 'throttle', 'thru', 'times', 'trimChars',\n    'trimCharsEnd', 'trimCharsStart', 'truncate', 'union', 'uniqBy', 'uniqWith',\n    'unset', 'unzipWith', 'without', 'wrap', 'xor', 'zip', 'zipObject',\n    'zipObjectDeep'\n  ],\n  '3': [\n    'assignInWith', 'assignWith', 'clamp', 'differenceBy', 'differenceWith',\n    'findFrom', 'findIndexFrom', 'findLastFrom', 'findLastIndexFrom', 'getOr',\n    'includesFrom', 'indexOfFrom', 'inRange', 'intersectionBy', 'intersectionWith',\n    'invokeArgs', 'invokeArgsMap', 'isEqualWith', 'isMatchWith', 'flatMapDepth',\n    'lastIndexOfFrom', 'mergeWith', 'orderBy', 'padChars', 'padCharsEnd',\n    'padCharsStart', 'pullAllBy', 'pullAllWith', 'reduce', 'reduceRight', 'replace',\n    'set', 'slice', 'sortedIndexBy', 'sortedLastIndexBy', 'transform', 'unionBy',\n    'unionWith', 'update', 'xorBy', 'xorWith', 'zipWith'\n  ],\n  '4': [\n    'fill', 'setWith', 'updateWith'\n  ]\n};\n\n/** Used to map ary to rearg configs. */\nexports.aryRearg = {\n  '2': [1, 0],\n  '3': [2, 0, 1],\n  '4': [3, 2, 0, 1]\n};\n\n/** Used to map method names to their iteratee ary. */\nexports.iterateeAry = {\n  'dropRightWhile': 1,\n  'dropWhile': 1,\n  'every': 1,\n  'filter': 1,\n  'find': 1,\n  'findFrom': 1,\n  'findIndex': 1,\n  'findIndexFrom': 1,\n  'findKey': 1,\n  'findLast': 1,\n  'findLastFrom': 1,\n  'findLastIndex': 1,\n  'findLastIndexFrom': 1,\n  'findLastKey': 1,\n  'flatMap': 1,\n  'flatMapDeep': 1,\n  'flatMapDepth': 1,\n  'forEach': 1,\n  'forEachRight': 1,\n  'forIn': 1,\n  'forInRight': 1,\n  'forOwn': 1,\n  'forOwnRight': 1,\n  'map': 1,\n  'mapKeys': 1,\n  'mapValues': 1,\n  'partition': 1,\n  'reduce': 2,\n  'reduceRight': 2,\n  'reject': 1,\n  'remove': 1,\n  'some': 1,\n  'takeRightWhile': 1,\n  'takeWhile': 1,\n  'times': 1,\n  'transform': 2\n};\n\n/** Used to map method names to iteratee rearg configs. */\nexports.iterateeRearg = {\n  'mapKeys': [1]\n};\n\n/** Used to map method names to rearg configs. */\nexports.methodRearg = {\n  'assignInAllWith': [1, 2, 0],\n  'assignInWith': [1, 2, 0],\n  'assignAllWith': [1, 2, 0],\n  'assignWith': [1, 2, 0],\n  'differenceBy': [1, 2, 0],\n  'differenceWith': [1, 2, 0],\n  'getOr': [2, 1, 0],\n  'intersectionBy': [1, 2, 0],\n  'intersectionWith': [1, 2, 0],\n  'isEqualWith': [1, 2, 0],\n  'isMatchWith': [2, 1, 0],\n  'mergeAllWith': [1, 2, 0],\n  'mergeWith': [1, 2, 0],\n  'padChars': [2, 1, 0],\n  'padCharsEnd': [2, 1, 0],\n  'padCharsStart': [2, 1, 0],\n  'pullAllBy': [2, 1, 0],\n  'pullAllWith': [2, 1, 0],\n  'setWith': [3, 1, 2, 0],\n  'sortedIndexBy': [2, 1, 0],\n  'sortedLastIndexBy': [2, 1, 0],\n  'unionBy': [1, 2, 0],\n  'unionWith': [1, 2, 0],\n  'updateWith': [3, 1, 2, 0],\n  'xorBy': [1, 2, 0],\n  'xorWith': [1, 2, 0],\n  'zipWith': [1, 2, 0]\n};\n\n/** Used to map method names to spread configs. */\nexports.methodSpread = {\n  'assignAll': { 'start': 0 },\n  'assignAllWith': { 'afterRearg': true, 'start': 1 },\n  'assignInAll': { 'start': 0 },\n  'assignInAllWith': { 'afterRearg': true, 'start': 1 },\n  'defaultsAll': { 'start': 0 },\n  'defaultsDeepAll': { 'start': 0 },\n  'invokeArgs': { 'start': 2 },\n  'invokeArgsMap': { 'start': 2 },\n  'mergeAll': { 'start': 0 },\n  'mergeAllWith': { 'afterRearg': true, 'start': 1 },\n  'partial': { 'start': 1 },\n  'partialRight': { 'start': 1 },\n  'without': { 'start': 1 },\n  'zipAll': { 'start': 0 }\n};\n\n/** Used to identify methods which mutate arrays or objects. */\nexports.mutate = {\n  'array': {\n    'fill': true,\n    'pull': true,\n    'pullAll': true,\n    'pullAllBy': true,\n    'pullAllWith': true,\n    'pullAt': true,\n    'remove': true,\n    'reverse': true\n  },\n  'object': {\n    'assign': true,\n    'assignAll': true,\n    'assignAllWith': true,\n    'assignIn': true,\n    'assignInAll': true,\n    'assignInAllWith': true,\n    'assignInWith': true,\n    'assignWith': true,\n    'defaults': true,\n    'defaultsAll': true,\n    'defaultsDeep': true,\n    'defaultsDeepAll': true,\n    'merge': true,\n    'mergeAll': true,\n    'mergeAllWith': true,\n    'mergeWith': true,\n  },\n  'set': {\n    'set': true,\n    'setWith': true,\n    'unset': true,\n    'update': true,\n    'updateWith': true\n  }\n};\n\n/** Used to track methods with placeholder support */\nexports.placeholder = {\n  'bind': true,\n  'bindKey': true,\n  'curry': true,\n  'curryRight': true,\n  'partial': true,\n  'partialRight': true\n};\n\n/** Used to map real names to their aliases. */\nexports.realToAlias = (function() {\n  var hasOwnProperty = Object.prototype.hasOwnProperty,\n      object = exports.aliasToReal,\n      result = {};\n\n  for (var key in object) {\n    var value = object[key];\n    if (hasOwnProperty.call(result, value)) {\n      result[value].push(key);\n    } else {\n      result[value] = [key];\n    }\n  }\n  return result;\n}());\n\n/** Used to map method names to other names. */\nexports.remap = {\n  'assignAll': 'assign',\n  'assignAllWith': 'assignWith',\n  'assignInAll': 'assignIn',\n  'assignInAllWith': 'assignInWith',\n  'curryN': 'curry',\n  'curryRightN': 'curryRight',\n  'defaultsAll': 'defaults',\n  'defaultsDeepAll': 'defaultsDeep',\n  'findFrom': 'find',\n  'findIndexFrom': 'findIndex',\n  'findLastFrom': 'findLast',\n  'findLastIndexFrom': 'findLastIndex',\n  'getOr': 'get',\n  'includesFrom': 'includes',\n  'indexOfFrom': 'indexOf',\n  'invokeArgs': 'invoke',\n  'invokeArgsMap': 'invokeMap',\n  'lastIndexOfFrom': 'lastIndexOf',\n  'mergeAll': 'merge',\n  'mergeAllWith': 'mergeWith',\n  'padChars': 'pad',\n  'padCharsEnd': 'padEnd',\n  'padCharsStart': 'padStart',\n  'propertyOf': 'get',\n  'restFrom': 'rest',\n  'spreadFrom': 'spread',\n  'trimChars': 'trim',\n  'trimCharsEnd': 'trimEnd',\n  'trimCharsStart': 'trimStart',\n  'zipAll': 'zip'\n};\n\n/** Used to track methods that skip fixing their arity. */\nexports.skipFixed = {\n  'castArray': true,\n  'flow': true,\n  'flowRight': true,\n  'iteratee': true,\n  'mixin': true,\n  'rearg': true,\n  'runInContext': true\n};\n\n/** Used to track methods that skip rearranging arguments. */\nexports.skipRearg = {\n  'add': true,\n  'assign': true,\n  'assignIn': true,\n  'bind': true,\n  'bindKey': true,\n  'concat': true,\n  'difference': true,\n  'divide': true,\n  'eq': true,\n  'gt': true,\n  'gte': true,\n  'isEqual': true,\n  'lt': true,\n  'lte': true,\n  'matchesProperty': true,\n  'merge': true,\n  'multiply': true,\n  'overArgs': true,\n  'partial': true,\n  'partialRight': true,\n  'propertyOf': true,\n  'random': true,\n  'range': true,\n  'rangeRight': true,\n  'subtract': true,\n  'zip': true,\n  'zipObject': true,\n  'zipObjectDeep': true\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/fp/_mapping.js\n ** module id = 20\n ** module chunks = 0\n **/","/**\n * The default argument placeholder value for methods.\n *\n * @type {Object}\n */\nmodule.exports = {};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/fp/placeholder.js\n ** module id = 21\n ** module chunks = 0\n **/","/**\n * @license\n * lodash lodash.com/license | Underscore.js 1.8.3 underscorejs.org/LICENSE\n */\n;(function(){function t(t,n){return t.set(n[0],n[1]),t}function n(t,n){return t.add(n),t}function r(t,n,r){switch(r.length){case 0:return t.call(n);case 1:return t.call(n,r[0]);case 2:return t.call(n,r[0],r[1]);case 3:return t.call(n,r[0],r[1],r[2])}return t.apply(n,r)}function e(t,n,r,e){for(var u=-1,o=t?t.length:0;++u<o;){var i=t[u];n(e,i,r(i),t)}return e}function u(t,n){for(var r=-1,e=t?t.length:0;++r<e&&false!==n(t[r],r,t););return t}function o(t,n){for(var r=t?t.length:0;r--&&false!==n(t[r],r,t););\nreturn t}function i(t,n){for(var r=-1,e=t?t.length:0;++r<e;)if(!n(t[r],r,t))return false;return true}function f(t,n){for(var r=-1,e=t?t.length:0,u=0,o=[];++r<e;){var i=t[r];n(i,r,t)&&(o[u++]=i)}return o}function c(t,n){return!(!t||!t.length)&&-1<d(t,n,0)}function a(t,n,r){for(var e=-1,u=t?t.length:0;++e<u;)if(r(n,t[e]))return true;return false}function l(t,n){for(var r=-1,e=t?t.length:0,u=Array(e);++r<e;)u[r]=n(t[r],r,t);return u}function s(t,n){for(var r=-1,e=n.length,u=t.length;++r<e;)t[u+r]=n[r];return t}function h(t,n,r,e){\nvar u=-1,o=t?t.length:0;for(e&&o&&(r=t[++u]);++u<o;)r=n(r,t[u],u,t);return r}function p(t,n,r,e){var u=t?t.length:0;for(e&&u&&(r=t[--u]);u--;)r=n(r,t[u],u,t);return r}function _(t,n){for(var r=-1,e=t?t.length:0;++r<e;)if(n(t[r],r,t))return true;return false}function v(t,n,r){var e;return r(t,function(t,r,u){if(n(t,r,u))return e=r,false}),e}function g(t,n,r,e){var u=t.length;for(r+=e?1:-1;e?r--:++r<u;)if(n(t[r],r,t))return r;return-1}function d(t,n,r){if(n!==n)return g(t,b,r);--r;for(var e=t.length;++r<e;)if(t[r]===n)return r;\nreturn-1}function y(t,n,r,e){--r;for(var u=t.length;++r<u;)if(e(t[r],n))return r;return-1}function b(t){return t!==t}function x(t,n){var r=t?t.length:0;return r?k(t,n)/r:q}function j(t){return function(n){return null==n?P:n[t]}}function w(t){return function(n){return null==t?P:t[n]}}function m(t,n,r,e,u){return u(t,function(t,u,o){r=e?(e=false,t):n(r,t,u,o)}),r}function A(t,n){var r=t.length;for(t.sort(n);r--;)t[r]=t[r].c;return t}function k(t,n){for(var r,e=-1,u=t.length;++e<u;){var o=n(t[e]);o!==P&&(r=r===P?o:r+o);\n}return r}function E(t,n){for(var r=-1,e=Array(t);++r<t;)e[r]=n(r);return e}function O(t,n){return l(n,function(n){return[n,t[n]]})}function S(t){return function(n){return t(n)}}function I(t,n){return l(n,function(n){return t[n]})}function R(t,n){return t.has(n)}function W(t,n){for(var r=-1,e=t.length;++r<e&&-1<d(n,t[r],0););return r}function B(t,n){for(var r=t.length;r--&&-1<d(n,t[r],0););return r}function L(t){return\"\\\\\"+Ft[t]}function C(t){var n=false;if(null!=t&&typeof t.toString!=\"function\")try{\nn=!!(t+\"\")}catch(t){}return n}function U(t){var n=-1,r=Array(t.size);return t.forEach(function(t,e){r[++n]=[e,t]}),r}function M(t,n){return function(r){return t(n(r))}}function z(t,n){for(var r=-1,e=t.length,u=0,o=[];++r<e;){var i=t[r];i!==n&&\"__lodash_placeholder__\"!==i||(t[r]=\"__lodash_placeholder__\",o[u++]=r)}return o}function D(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=t}),r}function T(t){var n=-1,r=Array(t.size);return t.forEach(function(t){r[++n]=[t,t]}),r}function $(t){\nif(Ut.test(t)){for(var n=Lt.lastIndex=0;Lt.test(t);)n++;t=n}else t=en(t);return t}function F(t){return Ut.test(t)?t.match(Lt)||[]:t.split(\"\")}function N(w){function St(t){return Hu.call(t)}function It(t){if(ou(t)&&!Fi(t)&&!(t instanceof $t)){if(t instanceof Lt)return t;if(Gu.call(t,\"__wrapped__\"))return Oe(t)}return new Lt(t)}function Rt(){}function Lt(t,n){this.__wrapped__=t,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=P}function $t(t){this.__wrapped__=t,this.__actions__=[],\nthis.__dir__=1,this.__filtered__=false,this.__iteratees__=[],this.__takeCount__=4294967295,this.__views__=[]}function Ft(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Zt(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function qt(t){var n=-1,r=t?t.length:0;for(this.clear();++n<r;){var e=t[n];this.set(e[0],e[1])}}function Kt(t){var n=-1,r=t?t.length:0;for(this.__data__=new qt;++n<r;)this.add(t[n])}function Gt(t){this.__data__=new Zt(t);\n}function Yt(t,n){var r,e=Fi(t)||He(t)?E(t.length,Fu):[],u=e.length,o=!!u;for(r in t)!n&&!Gu.call(t,r)||o&&(\"length\"==r||ge(r,u))||e.push(r);return e}function en(t,n,r,e){return t===P||Ye(t,Zu[r])&&!Gu.call(e,r)?n:t}function an(t,n,r){(r===P||Ye(t[n],r))&&(typeof n!=\"number\"||r!==P||n in t)||(t[n]=r)}function ln(t,n,r){var e=t[n];Gu.call(t,n)&&Ye(e,r)&&(r!==P||n in t)||(t[n]=r)}function sn(t,n){for(var r=t.length;r--;)if(Ye(t[r][0],n))return r;return-1}function hn(t,n,r,e){return Po(t,function(t,u,o){\nn(e,t,r(t),o)}),e}function pn(t,n){return t&&Br(n,bu(n),t)}function _n(t,n){for(var r=-1,e=null==t,u=n.length,o=Cu(u);++r<u;)o[r]=e?P:du(t,n[r]);return o}function vn(t,n,r){return t===t&&(r!==P&&(t=t<=r?t:r),n!==P&&(t=t>=n?t:n)),t}function gn(t,n,r,e,o,i,f){var c;if(e&&(c=i?e(t,o,i,f):e(t)),c!==P)return c;if(!uu(t))return t;if(o=Fi(t)){if(c=he(t),!n)return Wr(t,c)}else{var a=St(t),l=\"[object Function]\"==a||\"[object GeneratorFunction]\"==a;if(Pi(t))return Er(t,n);if(\"[object Object]\"==a||\"[object Arguments]\"==a||l&&!i){\nif(C(t))return i?t:{};if(c=pe(l?{}:t),!n)return Lr(t,pn(c,t))}else{if(!Tt[a])return i?t:{};c=_e(t,a,gn,n)}}if(f||(f=new Gt),i=f.get(t))return i;if(f.set(t,c),!o)var s=r?Rn(t,bu,Ho):bu(t);return u(s||t,function(u,o){s&&(o=u,u=t[o]),ln(c,o,gn(u,n,r,e,o,t,f))}),c}function dn(t){var n=bu(t);return function(r){return yn(r,t,n)}}function yn(t,n,r){var e=r.length;if(null==t)return!e;for(t=Tu(t);e--;){var u=r[e],o=n[u],i=t[u];if(i===P&&!(u in t)||!o(i))return false}return true}function bn(t){return uu(t)?oo(t):{};\n}function xn(t,n,r){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return ni(function(){t.apply(P,r)},n)}function jn(t,n,r,e){var u=-1,o=c,i=true,f=t.length,s=[],h=n.length;if(!f)return s;r&&(n=l(n,S(r))),e?(o=a,i=false):200<=n.length&&(o=R,i=false,n=new Kt(n));t:for(;++u<f;){var p=t[u],_=r?r(p):p,p=e||0!==p?p:0;if(i&&_===_){for(var v=h;v--;)if(n[v]===_)continue t;s.push(p)}else o(n,_,e)||s.push(p)}return s}function wn(t,n){var r=true;return Po(t,function(t,e,u){return r=!!n(t,e,u)}),r}function mn(t,n,r){\nfor(var e=-1,u=t.length;++e<u;){var o=t[e],i=n(o);if(null!=i&&(f===P?i===i&&!au(i):r(i,f)))var f=i,c=o}return c}function An(t,n){var r=[];return Po(t,function(t,e,u){n(t,e,u)&&r.push(t)}),r}function kn(t,n,r,e,u){var o=-1,i=t.length;for(r||(r=ve),u||(u=[]);++o<i;){var f=t[o];0<n&&r(f)?1<n?kn(f,n-1,r,e,u):s(u,f):e||(u[u.length]=f)}return u}function En(t,n){return t&&qo(t,n,bu)}function On(t,n){return t&&Vo(t,n,bu)}function Sn(t,n){return f(n,function(n){return nu(t[n])})}function In(t,n){n=ye(n,t)?[n]:Ar(n);\nfor(var r=0,e=n.length;null!=t&&r<e;)t=t[Ae(n[r++])];return r&&r==e?t:P}function Rn(t,n,r){return n=n(t),Fi(t)?n:s(n,r(t))}function Wn(t,n){return t>n}function Bn(t,n){return null!=t&&Gu.call(t,n)}function Ln(t,n){return null!=t&&n in Tu(t)}function Cn(t,n,r){for(var e=r?a:c,u=t[0].length,o=t.length,i=o,f=Cu(o),s=1/0,h=[];i--;){var p=t[i];i&&n&&(p=l(p,S(n))),s=jo(p.length,s),f[i]=!r&&(n||120<=u&&120<=p.length)?new Kt(i&&p):P}var p=t[0],_=-1,v=f[0];t:for(;++_<u&&h.length<s;){var g=p[_],d=n?n(g):g,g=r||0!==g?g:0;\nif(v?!R(v,d):!e(h,d,r)){for(i=o;--i;){var y=f[i];if(y?!R(y,d):!e(t[i],d,r))continue t}v&&v.push(d),h.push(g)}}return h}function Un(t,n,r){var e={};return En(t,function(t,u,o){n(e,r(t),u,o)}),e}function Mn(t,n,e){return ye(n,t)||(n=Ar(n),t=me(t,n),n=We(n)),n=null==t?t:t[Ae(n)],null==n?P:r(n,t,e)}function zn(t){return ou(t)&&\"[object ArrayBuffer]\"==Hu.call(t)}function Dn(t){return ou(t)&&\"[object Date]\"==Hu.call(t)}function Tn(t,n,r,e,u){if(t===n)n=true;else if(null==t||null==n||!uu(t)&&!ou(n))n=t!==t&&n!==n;else t:{\nvar o=Fi(t),i=Fi(n),f=\"[object Array]\",c=\"[object Array]\";o||(f=St(t),f=\"[object Arguments]\"==f?\"[object Object]\":f),i||(c=St(n),c=\"[object Arguments]\"==c?\"[object Object]\":c);var a=\"[object Object]\"==f&&!C(t),i=\"[object Object]\"==c&&!C(n);if((c=f==c)&&!a)u||(u=new Gt),n=o||Gi(t)?ee(t,n,Tn,r,e,u):ue(t,n,f,Tn,r,e,u);else{if(!(2&e)&&(o=a&&Gu.call(t,\"__wrapped__\"),f=i&&Gu.call(n,\"__wrapped__\"),o||f)){t=o?t.value():t,n=f?n.value():n,u||(u=new Gt),n=Tn(t,n,r,e,u);break t}if(c)n:if(u||(u=new Gt),o=2&e,\nf=bu(t),i=f.length,c=bu(n).length,i==c||o){for(a=i;a--;){var l=f[a];if(!(o?l in n:Gu.call(n,l))){n=false;break n}}if((c=u.get(t))&&u.get(n))n=c==n;else{c=true,u.set(t,n),u.set(n,t);for(var s=o;++a<i;){var l=f[a],h=t[l],p=n[l];if(r)var _=o?r(p,h,l,n,t,u):r(h,p,l,t,n,u);if(_===P?h!==p&&!Tn(h,p,r,e,u):!_){c=false;break}s||(s=\"constructor\"==l)}c&&!s&&(r=t.constructor,e=n.constructor,r!=e&&\"constructor\"in t&&\"constructor\"in n&&!(typeof r==\"function\"&&r instanceof r&&typeof e==\"function\"&&e instanceof e)&&(c=false)),\nu.delete(t),u.delete(n),n=c}}else n=false;else n=false}}return n}function $n(t){return ou(t)&&\"[object Map]\"==St(t)}function Fn(t,n,r,e){var u=r.length,o=u,i=!e;if(null==t)return!o;for(t=Tu(t);u--;){var f=r[u];if(i&&f[2]?f[1]!==t[f[0]]:!(f[0]in t))return false}for(;++u<o;){var f=r[u],c=f[0],a=t[c],l=f[1];if(i&&f[2]){if(a===P&&!(c in t))return false}else{if(f=new Gt,e)var s=e(a,l,c,t,n,f);if(s===P?!Tn(l,a,e,3,f):!s)return false}}return true}function Nn(t){return!(!uu(t)||Vu&&Vu in t)&&(nu(t)||C(t)?Xu:wt).test(ke(t))}function Pn(t){\nreturn uu(t)&&\"[object RegExp]\"==Hu.call(t)}function Zn(t){return ou(t)&&\"[object Set]\"==St(t)}function qn(t){return ou(t)&&eu(t.length)&&!!Dt[Hu.call(t)]}function Vn(t){return typeof t==\"function\"?t:null==t?Ou:typeof t==\"object\"?Fi(t)?Qn(t[0],t[1]):Hn(t):Wu(t)}function Kn(t){if(!xe(t))return bo(t);var n,r=[];for(n in Tu(t))Gu.call(t,n)&&\"constructor\"!=n&&r.push(n);return r}function Gn(t){if(!uu(t)){var n=[];if(null!=t)for(var r in Tu(t))n.push(r);return n}r=xe(t);var e=[];for(n in t)(\"constructor\"!=n||!r&&Gu.call(t,n))&&e.push(n);\nreturn e}function Jn(t,n){return t<n}function Yn(t,n){var r=-1,e=Qe(t)?Cu(t.length):[];return Po(t,function(t,u,o){e[++r]=n(t,u,o)}),e}function Hn(t){var n=ae(t);return 1==n.length&&n[0][2]?je(n[0][0],n[0][1]):function(r){return r===t||Fn(r,t,n)}}function Qn(t,n){return ye(t)&&n===n&&!uu(n)?je(Ae(t),n):function(r){var e=du(r,t);return e===P&&e===n?yu(r,t):Tn(n,e,P,3)}}function Xn(t,n,r,e,o){if(t!==n){if(!Fi(n)&&!Gi(n))var i=Gn(n);u(i||n,function(u,f){if(i&&(f=u,u=n[f]),uu(u)){o||(o=new Gt);var c=f,a=o,l=t[c],s=n[c],h=a.get(s);\nif(h)an(t,c,h);else{var h=e?e(l,s,c+\"\",t,n,a):P,p=h===P;p&&(h=s,Fi(s)||Gi(s)?Fi(l)?h=l:Xe(l)?h=Wr(l):(p=false,h=gn(s,true)):fu(s)||He(s)?He(l)?h=vu(l):!uu(l)||r&&nu(l)?(p=false,h=gn(s,true)):h=l:p=false),p&&(a.set(s,h),Xn(h,s,r,e,a),a.delete(s)),an(t,c,h)}}else c=e?e(t[f],u,f+\"\",t,n,o):P,c===P&&(c=u),an(t,f,c)})}}function tr(t,n){var r=t.length;if(r)return n+=0>n?r:0,ge(n,r)?t[n]:P}function nr(t,n,r){var e=-1;return n=l(n.length?n:[Ou],S(fe())),t=Yn(t,function(t){return{a:l(n,function(n){return n(t)}),b:++e,c:t\n}}),A(t,function(t,n){var e;t:{e=-1;for(var u=t.a,o=n.a,i=u.length,f=r.length;++e<i;){var c=Sr(u[e],o[e]);if(c){e=e>=f?c:c*(\"desc\"==r[e]?-1:1);break t}}e=t.b-n.b}return e})}function rr(t,n){return t=Tu(t),er(t,n,function(n,r){return r in t})}function er(t,n,r){for(var e=-1,u=n.length,o={};++e<u;){var i=n[e],f=t[i];r(f,i)&&(o[i]=f)}return o}function ur(t){return function(n){return In(n,t)}}function or(t,n,r,e){var u=e?y:d,o=-1,i=n.length,f=t;for(t===n&&(n=Wr(n)),r&&(f=l(t,S(r)));++o<i;)for(var c=0,a=n[o],a=r?r(a):a;-1<(c=u(f,a,c,e));)f!==t&&fo.call(f,c,1),\nfo.call(t,c,1);return t}function ir(t,n){for(var r=t?n.length:0,e=r-1;r--;){var u=n[r];if(r==e||u!==o){var o=u;if(ge(u))fo.call(t,u,1);else if(ye(u,t))delete t[Ae(u)];else{var u=Ar(u),i=me(t,u);null!=i&&delete i[Ae(We(u))]}}}}function fr(t,n){return t+po(mo()*(n-t+1))}function cr(t,n){var r=\"\";if(!t||1>n||9007199254740991<n)return r;do n%2&&(r+=t),(n=po(n/2))&&(t+=t);while(n);return r}function ar(t,n){return n=xo(n===P?t.length-1:n,0),function(){for(var e=arguments,u=-1,o=xo(e.length-n,0),i=Cu(o);++u<o;)i[u]=e[n+u];\nfor(u=-1,o=Cu(n+1);++u<n;)o[u]=e[u];return o[n]=i,r(t,this,o)}}function lr(t,n,r,e){if(!uu(t))return t;n=ye(n,t)?[n]:Ar(n);for(var u=-1,o=n.length,i=o-1,f=t;null!=f&&++u<o;){var c=Ae(n[u]),a=r;if(u!=i){var l=f[c],a=e?e(l,c,f):P;a===P&&(a=uu(l)?l:ge(n[u+1])?[]:{})}ln(f,c,a),f=f[c]}return t}function sr(t,n,r){var e=-1,u=t.length;for(0>n&&(n=-n>u?0:u+n),r=r>u?u:r,0>r&&(r+=u),u=n>r?0:r-n>>>0,n>>>=0,r=Cu(u);++e<u;)r[e]=t[e+n];return r}function hr(t,n){var r;return Po(t,function(t,e,u){return r=n(t,e,u),\n!r}),!!r}function pr(t,n,r){var e=0,u=t?t.length:e;if(typeof n==\"number\"&&n===n&&2147483647>=u){for(;e<u;){var o=e+u>>>1,i=t[o];null!==i&&!au(i)&&(r?i<=n:i<n)?e=o+1:u=o}return u}return _r(t,n,Ou,r)}function _r(t,n,r,e){n=r(n);for(var u=0,o=t?t.length:0,i=n!==n,f=null===n,c=au(n),a=n===P;u<o;){var l=po((u+o)/2),s=r(t[l]),h=s!==P,p=null===s,_=s===s,v=au(s);(i?e||_:a?_&&(e||h):f?_&&h&&(e||!p):c?_&&h&&!p&&(e||!v):p||v?0:e?s<=n:s<n)?u=l+1:o=l}return jo(o,4294967294)}function vr(t,n){for(var r=-1,e=t.length,u=0,o=[];++r<e;){\nvar i=t[r],f=n?n(i):i;if(!r||!Ye(f,c)){var c=f;o[u++]=0===i?0:i}}return o}function gr(t){return typeof t==\"number\"?t:au(t)?q:+t}function dr(t){if(typeof t==\"string\")return t;if(au(t))return No?No.call(t):\"\";var n=t+\"\";return\"0\"==n&&1/t==-Z?\"-0\":n}function yr(t,n,r){var e=-1,u=c,o=t.length,i=true,f=[],l=f;if(r)i=false,u=a;else if(200<=o){if(u=n?null:Jo(t))return D(u);i=false,u=R,l=new Kt}else l=n?[]:f;t:for(;++e<o;){var s=t[e],h=n?n(s):s,s=r||0!==s?s:0;if(i&&h===h){for(var p=l.length;p--;)if(l[p]===h)continue t;\nn&&l.push(h),f.push(s)}else u(l,h,r)||(l!==f&&l.push(h),f.push(s))}return f}function br(t,n,r,e){for(var u=t.length,o=e?u:-1;(e?o--:++o<u)&&n(t[o],o,t););return r?sr(t,e?0:o,e?o+1:u):sr(t,e?o+1:0,e?u:o)}function xr(t,n){var r=t;return r instanceof $t&&(r=r.value()),h(n,function(t,n){return n.func.apply(n.thisArg,s([t],n.args))},r)}function jr(t,n,r){for(var e=-1,u=t.length;++e<u;)var o=o?s(jn(o,t[e],n,r),jn(t[e],o,n,r)):t[e];return o&&o.length?yr(o,n,r):[]}function wr(t,n,r){for(var e=-1,u=t.length,o=n.length,i={};++e<u;)r(i,t[e],e<o?n[e]:P);\nreturn i}function mr(t){return Xe(t)?t:[]}function Ar(t){return Fi(t)?t:ei(t)}function kr(t,n,r){var e=t.length;return r=r===P?e:r,!n&&r>=e?t:sr(t,n,r)}function Er(t,n){if(n)return t.slice();var r=new t.constructor(t.length);return t.copy(r),r}function Or(t){var n=new t.constructor(t.byteLength);return new ro(n).set(new ro(t)),n}function Sr(t,n){if(t!==n){var r=t!==P,e=null===t,u=t===t,o=au(t),i=n!==P,f=null===n,c=n===n,a=au(n);if(!f&&!a&&!o&&t>n||o&&i&&c&&!f&&!a||e&&i&&c||!r&&c||!u)return 1;if(!e&&!o&&!a&&t<n||a&&r&&u&&!e&&!o||f&&r&&u||!i&&u||!c)return-1;\n}return 0}function Ir(t,n,r,e){var u=-1,o=t.length,i=r.length,f=-1,c=n.length,a=xo(o-i,0),l=Cu(c+a);for(e=!e;++f<c;)l[f]=n[f];for(;++u<i;)(e||u<o)&&(l[r[u]]=t[u]);for(;a--;)l[f++]=t[u++];return l}function Rr(t,n,r,e){var u=-1,o=t.length,i=-1,f=r.length,c=-1,a=n.length,l=xo(o-f,0),s=Cu(l+a);for(e=!e;++u<l;)s[u]=t[u];for(l=u;++c<a;)s[l+c]=n[c];for(;++i<f;)(e||u<o)&&(s[l+r[i]]=t[u++]);return s}function Wr(t,n){var r=-1,e=t.length;for(n||(n=Cu(e));++r<e;)n[r]=t[r];return n}function Br(t,n,r,e){r||(r={});\nfor(var u=-1,o=n.length;++u<o;){var i=n[u],f=e?e(r[i],t[i],i,r,t):P;ln(r,i,f===P?t[i]:f)}return r}function Lr(t,n){return Br(t,Ho(t),n)}function Cr(t,n){return function(r,u){var o=Fi(r)?e:hn,i=n?n():{};return o(r,t,fe(u,2),i)}}function Ur(t){return ar(function(n,r){var e=-1,u=r.length,o=1<u?r[u-1]:P,i=2<u?r[2]:P,o=3<t.length&&typeof o==\"function\"?(u--,o):P;for(i&&de(r[0],r[1],i)&&(o=3>u?P:o,u=1),n=Tu(n);++e<u;)(i=r[e])&&t(n,i,e,o);return n})}function Mr(t,n){return function(r,e){if(null==r)return r;\nif(!Qe(r))return t(r,e);for(var u=r.length,o=n?u:-1,i=Tu(r);(n?o--:++o<u)&&false!==e(i[o],o,i););return r}}function zr(t){return function(n,r,e){var u=-1,o=Tu(n);e=e(n);for(var i=e.length;i--;){var f=e[t?i:++u];if(false===r(o[f],f,o))break}return n}}function Dr(t,n,r){function e(){return(this&&this!==Vt&&this instanceof e?o:t).apply(u?r:this,arguments)}var u=1&n,o=Fr(t);return e}function Tr(t){return function(n){n=gu(n);var r=Ut.test(n)?F(n):P,e=r?r[0]:n.charAt(0);return n=r?kr(r,1).join(\"\"):n.slice(1),\ne[t]()+n}}function $r(t){return function(n){return h(ku(Au(n).replace(Wt,\"\")),t,\"\")}}function Fr(t){return function(){var n=arguments;switch(n.length){case 0:return new t;case 1:return new t(n[0]);case 2:return new t(n[0],n[1]);case 3:return new t(n[0],n[1],n[2]);case 4:return new t(n[0],n[1],n[2],n[3]);case 5:return new t(n[0],n[1],n[2],n[3],n[4]);case 6:return new t(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new t(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var r=bn(t.prototype),n=t.apply(r,n);return uu(n)?n:r;\n}}function Nr(t,n,e){function u(){for(var i=arguments.length,f=Cu(i),c=i,a=ie(u);c--;)f[c]=arguments[c];return c=3>i&&f[0]!==a&&f[i-1]!==a?[]:z(f,a),i-=c.length,i<e?Xr(t,n,qr,u.placeholder,P,f,c,P,P,e-i):r(this&&this!==Vt&&this instanceof u?o:t,this,f)}var o=Fr(t);return u}function Pr(t){return function(n,r,e){var u=Tu(n);if(!Qe(n)){var o=fe(r,3);n=bu(n),r=function(t){return o(u[t],t,u)}}return r=t(n,r,e),-1<r?u[o?n[r]:r]:P}}function Zr(t){return ar(function(n){n=kn(n,1);var r=n.length,e=r,u=Lt.prototype.thru;\nfor(t&&n.reverse();e--;){var o=n[e];if(typeof o!=\"function\")throw new Nu(\"Expected a function\");if(u&&!i&&\"wrapper\"==oe(o))var i=new Lt([],(true))}for(e=i?e:r;++e<r;)var o=n[e],u=oe(o),f=\"wrapper\"==u?Yo(o):P,i=f&&be(f[0])&&424==f[1]&&!f[4].length&&1==f[9]?i[oe(f[0])].apply(i,f[3]):1==o.length&&be(o)?i[u]():i.thru(o);return function(){var t=arguments,e=t[0];if(i&&1==t.length&&Fi(e)&&200<=e.length)return i.plant(e).value();for(var u=0,t=r?n[u].apply(this,t):e;++u<r;)t=n[u].call(this,t);return t}})}function qr(t,n,r,e,u,o,i,f,c,a){\nfunction l(){for(var d=arguments.length,y=Cu(d),b=d;b--;)y[b]=arguments[b];if(_){var x,j=ie(l),b=y.length;for(x=0;b--;)y[b]===j&&x++}if(e&&(y=Ir(y,e,u,_)),o&&(y=Rr(y,o,i,_)),d-=x,_&&d<a)return j=z(y,j),Xr(t,n,qr,l.placeholder,r,y,j,f,c,a-d);if(j=h?r:this,b=p?j[t]:t,d=y.length,f){x=y.length;for(var w=jo(f.length,x),m=Wr(y);w--;){var A=f[w];y[w]=ge(A,x)?m[A]:P}}else v&&1<d&&y.reverse();return s&&c<d&&(y.length=c),this&&this!==Vt&&this instanceof l&&(b=g||Fr(b)),b.apply(j,y)}var s=128&n,h=1&n,p=2&n,_=24&n,v=512&n,g=p?P:Fr(t);\nreturn l}function Vr(t,n){return function(r,e){return Un(r,t,n(e))}}function Kr(t,n){return function(r,e){var u;if(r===P&&e===P)return n;if(r!==P&&(u=r),e!==P){if(u===P)return e;typeof r==\"string\"||typeof e==\"string\"?(r=dr(r),e=dr(e)):(r=gr(r),e=gr(e)),u=t(r,e)}return u}}function Gr(t){return ar(function(n){return n=1==n.length&&Fi(n[0])?l(n[0],S(fe())):l(kn(n,1),S(fe())),ar(function(e){var u=this;return t(n,function(t){return r(t,u,e)})})})}function Jr(t,n){n=n===P?\" \":dr(n);var r=n.length;return 2>r?r?cr(n,t):n:(r=cr(n,ho(t/$(n))),\nUt.test(n)?kr(F(r),0,t).join(\"\"):r.slice(0,t))}function Yr(t,n,e,u){function o(){for(var n=-1,c=arguments.length,a=-1,l=u.length,s=Cu(l+c),h=this&&this!==Vt&&this instanceof o?f:t;++a<l;)s[a]=u[a];for(;c--;)s[a++]=arguments[++n];return r(h,i?e:this,s)}var i=1&n,f=Fr(t);return o}function Hr(t){return function(n,r,e){e&&typeof e!=\"number\"&&de(n,r,e)&&(r=e=P),n=su(n),r===P?(r=n,n=0):r=su(r),e=e===P?n<r?1:-1:su(e);var u=-1;r=xo(ho((r-n)/(e||1)),0);for(var o=Cu(r);r--;)o[t?r:++u]=n,n+=e;return o}}function Qr(t){\nreturn function(n,r){return typeof n==\"string\"&&typeof r==\"string\"||(n=_u(n),r=_u(r)),t(n,r)}}function Xr(t,n,r,e,u,o,i,f,c,a){var l=8&n,s=l?i:P;i=l?P:i;var h=l?o:P;return o=l?P:o,n=(n|(l?32:64))&~(l?64:32),4&n||(n&=-4),u=[t,n,u,h,s,o,i,f,c,a],r=r.apply(P,u),be(t)&&ti(r,u),r.placeholder=e,ri(r,t,n)}function te(t){var n=Du[t];return function(t,r){if(t=_u(t),r=jo(hu(r),292)){var e=(gu(t)+\"e\").split(\"e\"),e=n(e[0]+\"e\"+(+e[1]+r)),e=(gu(e)+\"e\").split(\"e\");return+(e[0]+\"e\"+(+e[1]-r))}return n(t)}}function ne(t){\nreturn function(n){var r=St(n);return\"[object Map]\"==r?U(n):\"[object Set]\"==r?T(n):O(n,t(n))}}function re(t,n,r,e,u,o,i,f){var c=2&n;if(!c&&typeof t!=\"function\")throw new Nu(\"Expected a function\");var a=e?e.length:0;if(a||(n&=-97,e=u=P),i=i===P?i:xo(hu(i),0),f=f===P?f:hu(f),a-=u?u.length:0,64&n){var l=e,s=u;e=u=P}var h=c?P:Yo(t);return o=[t,n,r,e,u,l,s,o,i,f],h&&(r=o[1],t=h[1],n=r|t,e=128==t&&8==r||128==t&&256==r&&o[7].length<=h[8]||384==t&&h[7].length<=h[8]&&8==r,131>n||e)&&(1&t&&(o[2]=h[2],n|=1&r?0:4),\n(r=h[3])&&(e=o[3],o[3]=e?Ir(e,r,h[4]):r,o[4]=e?z(o[3],\"__lodash_placeholder__\"):h[4]),(r=h[5])&&(e=o[5],o[5]=e?Rr(e,r,h[6]):r,o[6]=e?z(o[5],\"__lodash_placeholder__\"):h[6]),(r=h[7])&&(o[7]=r),128&t&&(o[8]=null==o[8]?h[8]:jo(o[8],h[8])),null==o[9]&&(o[9]=h[9]),o[0]=h[0],o[1]=n),t=o[0],n=o[1],r=o[2],e=o[3],u=o[4],f=o[9]=null==o[9]?c?0:t.length:xo(o[9]-a,0),!f&&24&n&&(n&=-25),ri((h?Ko:ti)(n&&1!=n?8==n||16==n?Nr(t,n,f):32!=n&&33!=n||u.length?qr.apply(P,o):Yr(t,n,r,e):Dr(t,n,r),o),t,n)}function ee(t,n,r,e,u,o){\nvar i=2&u,f=t.length,c=n.length;if(f!=c&&!(i&&c>f))return false;if((c=o.get(t))&&o.get(n))return c==n;var c=-1,a=true,l=1&u?new Kt:P;for(o.set(t,n),o.set(n,t);++c<f;){var s=t[c],h=n[c];if(e)var p=i?e(h,s,c,n,t,o):e(s,h,c,t,n,o);if(p!==P){if(p)continue;a=false;break}if(l){if(!_(n,function(t,n){if(!l.has(n)&&(s===t||r(s,t,e,u,o)))return l.add(n)})){a=false;break}}else if(s!==h&&!r(s,h,e,u,o)){a=false;break}}return o.delete(t),o.delete(n),a}function ue(t,n,r,e,u,o,i){switch(r){case\"[object DataView]\":if(t.byteLength!=n.byteLength||t.byteOffset!=n.byteOffset)break;\nt=t.buffer,n=n.buffer;case\"[object ArrayBuffer]\":if(t.byteLength!=n.byteLength||!e(new ro(t),new ro(n)))break;return true;case\"[object Boolean]\":case\"[object Date]\":case\"[object Number]\":return Ye(+t,+n);case\"[object Error]\":return t.name==n.name&&t.message==n.message;case\"[object RegExp]\":case\"[object String]\":return t==n+\"\";case\"[object Map]\":var f=U;case\"[object Set]\":if(f||(f=D),t.size!=n.size&&!(2&o))break;return(r=i.get(t))?r==n:(o|=1,i.set(t,n),n=ee(f(t),f(n),e,u,o,i),i.delete(t),n);case\"[object Symbol]\":\nif(Fo)return Fo.call(t)==Fo.call(n)}return false}function oe(t){for(var n=t.name+\"\",r=Co[n],e=Gu.call(Co,n)?r.length:0;e--;){var u=r[e],o=u.func;if(null==o||o==t)return u.name}return n}function ie(t){return(Gu.call(It,\"placeholder\")?It:t).placeholder}function fe(){var t=It.iteratee||Su,t=t===Su?Vn:t;return arguments.length?t(arguments[0],arguments[1]):t}function ce(t,n){var r=t.__data__,e=typeof n;return(\"string\"==e||\"number\"==e||\"symbol\"==e||\"boolean\"==e?\"__proto__\"!==n:null===n)?r[typeof n==\"string\"?\"string\":\"hash\"]:r.map;\n}function ae(t){for(var n=bu(t),r=n.length;r--;){var e=n[r],u=t[e];n[r]=[e,u,u===u&&!uu(u)]}return n}function le(t,n){var r=null==t?P:t[n];return Nn(r)?r:P}function se(t,n,r){n=ye(n,t)?[n]:Ar(n);for(var e,u=-1,o=n.length;++u<o;){var i=Ae(n[u]);if(!(e=null!=t&&r(t,i)))break;t=t[i]}return e?e:(o=t?t.length:0,!!o&&eu(o)&&ge(i,o)&&(Fi(t)||He(t)))}function he(t){var n=t.length,r=t.constructor(n);return n&&\"string\"==typeof t[0]&&Gu.call(t,\"index\")&&(r.index=t.index,r.input=t.input),r}function pe(t){return typeof t.constructor!=\"function\"||xe(t)?{}:bn(eo(t));\n}function _e(r,e,u,o){var i=r.constructor;switch(e){case\"[object ArrayBuffer]\":return Or(r);case\"[object Boolean]\":case\"[object Date]\":return new i((+r));case\"[object DataView]\":return e=o?Or(r.buffer):r.buffer,new r.constructor(e,r.byteOffset,r.byteLength);case\"[object Float32Array]\":case\"[object Float64Array]\":case\"[object Int8Array]\":case\"[object Int16Array]\":case\"[object Int32Array]\":case\"[object Uint8Array]\":case\"[object Uint8ClampedArray]\":case\"[object Uint16Array]\":case\"[object Uint32Array]\":\nreturn e=o?Or(r.buffer):r.buffer,new r.constructor(e,r.byteOffset,r.length);case\"[object Map]\":return e=o?u(U(r),true):U(r),h(e,t,new r.constructor);case\"[object Number]\":case\"[object String]\":return new i(r);case\"[object RegExp]\":return e=new r.constructor(r.source,yt.exec(r)),e.lastIndex=r.lastIndex,e;case\"[object Set]\":return e=o?u(D(r),true):D(r),h(e,n,new r.constructor);case\"[object Symbol]\":return Fo?Tu(Fo.call(r)):{}}}function ve(t){return Fi(t)||He(t)||!!(co&&t&&t[co])}function ge(t,n){return n=null==n?9007199254740991:n,\n!!n&&(typeof t==\"number\"||At.test(t))&&-1<t&&0==t%1&&t<n}function de(t,n,r){if(!uu(r))return false;var e=typeof n;return!!(\"number\"==e?Qe(r)&&ge(n,r.length):\"string\"==e&&n in r)&&Ye(r[n],t)}function ye(t,n){if(Fi(t))return false;var r=typeof t;return!(\"number\"!=r&&\"symbol\"!=r&&\"boolean\"!=r&&null!=t&&!au(t))||(ut.test(t)||!et.test(t)||null!=n&&t in Tu(n))}function be(t){var n=oe(t),r=It[n];return typeof r==\"function\"&&n in $t.prototype&&(t===r||(n=Yo(r),!!n&&t===n[0]))}function xe(t){var n=t&&t.constructor;\nreturn t===(typeof n==\"function\"&&n.prototype||Zu)}function je(t,n){return function(r){return null!=r&&(r[t]===n&&(n!==P||t in Tu(r)))}}function we(t,n,r,e,u,o){return uu(t)&&uu(n)&&(o.set(n,t),Xn(t,n,P,we,o),o.delete(n)),t}function me(t,n){return 1==n.length?t:In(t,sr(n,0,-1))}function Ae(t){if(typeof t==\"string\"||au(t))return t;var n=t+\"\";return\"0\"==n&&1/t==-Z?\"-0\":n}function ke(t){if(null!=t){try{return Ku.call(t)}catch(t){}return t+\"\"}return\"\"}function Ee(t,n){return u(V,function(r){var e=\"_.\"+r[0];\nn&r[1]&&!c(t,e)&&t.push(e)}),t.sort()}function Oe(t){if(t instanceof $t)return t.clone();var n=new Lt(t.__wrapped__,t.__chain__);return n.__actions__=Wr(t.__actions__),n.__index__=t.__index__,n.__values__=t.__values__,n}function Se(t,n,r){var e=t?t.length:0;return e?(r=null==r?0:hu(r),0>r&&(r=xo(e+r,0)),g(t,fe(n,3),r)):-1}function Ie(t,n,r){var e=t?t.length:0;if(!e)return-1;var u=e-1;return r!==P&&(u=hu(r),u=0>r?xo(e+u,0):jo(u,e-1)),g(t,fe(n,3),u,true)}function Re(t){return t&&t.length?t[0]:P}function We(t){\nvar n=t?t.length:0;return n?t[n-1]:P}function Be(t,n){return t&&t.length&&n&&n.length?or(t,n):t}function Le(t){return t?Ao.call(t):t}function Ce(t){if(!t||!t.length)return[];var n=0;return t=f(t,function(t){if(Xe(t))return n=xo(t.length,n),true}),E(n,function(n){return l(t,j(n))})}function Ue(t,n){if(!t||!t.length)return[];var e=Ce(t);return null==n?e:l(e,function(t){return r(n,P,t)})}function Me(t){return t=It(t),t.__chain__=true,t}function ze(t,n){return n(t)}function De(){return this}function Te(t,n){\nreturn(Fi(t)?u:Po)(t,fe(n,3))}function $e(t,n){return(Fi(t)?o:Zo)(t,fe(n,3))}function Fe(t,n){return(Fi(t)?l:Yn)(t,fe(n,3))}function Ne(t,n,r){var e=-1,u=lu(t),o=u.length,i=o-1;for(n=(r?de(t,n,r):n===P)?1:vn(hu(n),0,o);++e<n;)t=fr(e,i),r=u[t],u[t]=u[e],u[e]=r;return u.length=n,u}function Pe(t,n,r){return n=r?P:n,n=t&&null==n?t.length:n,re(t,128,P,P,P,P,n)}function Ze(t,n){var r;if(typeof n!=\"function\")throw new Nu(\"Expected a function\");return t=hu(t),function(){return 0<--t&&(r=n.apply(this,arguments)),\n1>=t&&(n=P),r}}function qe(t,n,r){return n=r?P:n,t=re(t,8,P,P,P,P,P,n),t.placeholder=qe.placeholder,t}function Ve(t,n,r){return n=r?P:n,t=re(t,16,P,P,P,P,P,n),t.placeholder=Ve.placeholder,t}function Ke(t,n,r){function e(n){var r=c,e=a;return c=a=P,_=n,s=t.apply(e,r)}function u(t){var r=t-p;return t-=_,p===P||r>=n||0>r||g&&t>=l}function o(){var t=Ri();if(u(t))return i(t);var r,e=ni;r=t-_,t=n-(t-p),r=g?jo(t,l-r):t,h=e(o,r)}function i(t){return h=P,d&&c?e(t):(c=a=P,s)}function f(){var t=Ri(),r=u(t);if(c=arguments,\na=this,p=t,r){if(h===P)return _=t=p,h=ni(o,n),v?e(t):s;if(g)return h=ni(o,n),e(p)}return h===P&&(h=ni(o,n)),s}var c,a,l,s,h,p,_=0,v=false,g=false,d=true;if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=_u(n)||0,uu(r)&&(v=!!r.leading,l=(g=\"maxWait\"in r)?xo(_u(r.maxWait)||0,n):l,d=\"trailing\"in r?!!r.trailing:d),f.cancel=function(){h!==P&&Go(h),_=0,c=p=a=h=P},f.flush=function(){return h===P?s:i(Ri())},f}function Ge(t,n){function r(){var e=arguments,u=n?n.apply(this,e):e[0],o=r.cache;return o.has(u)?o.get(u):(e=t.apply(this,e),\nr.cache=o.set(u,e),e)}if(typeof t!=\"function\"||n&&typeof n!=\"function\")throw new Nu(\"Expected a function\");return r.cache=new(Ge.Cache||qt),r}function Je(t){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return function(){var n=arguments;switch(n.length){case 0:return!t.call(this);case 1:return!t.call(this,n[0]);case 2:return!t.call(this,n[0],n[1]);case 3:return!t.call(this,n[0],n[1],n[2])}return!t.apply(this,n)}}function Ye(t,n){return t===n||t!==t&&n!==n}function He(t){return Xe(t)&&Gu.call(t,\"callee\")&&(!io.call(t,\"callee\")||\"[object Arguments]\"==Hu.call(t));\n}function Qe(t){return null!=t&&eu(t.length)&&!nu(t)}function Xe(t){return ou(t)&&Qe(t)}function tu(t){return!!ou(t)&&(\"[object Error]\"==Hu.call(t)||typeof t.message==\"string\"&&typeof t.name==\"string\")}function nu(t){return t=uu(t)?Hu.call(t):\"\",\"[object Function]\"==t||\"[object GeneratorFunction]\"==t}function ru(t){return typeof t==\"number\"&&t==hu(t)}function eu(t){return typeof t==\"number\"&&-1<t&&0==t%1&&9007199254740991>=t}function uu(t){var n=typeof t;return!!t&&(\"object\"==n||\"function\"==n)}function ou(t){\nreturn!!t&&typeof t==\"object\"}function iu(t){return typeof t==\"number\"||ou(t)&&\"[object Number]\"==Hu.call(t)}function fu(t){return!(!ou(t)||\"[object Object]\"!=Hu.call(t)||C(t))&&(t=eo(t),null===t||(t=Gu.call(t,\"constructor\")&&t.constructor,typeof t==\"function\"&&t instanceof t&&Ku.call(t)==Yu))}function cu(t){return typeof t==\"string\"||!Fi(t)&&ou(t)&&\"[object String]\"==Hu.call(t)}function au(t){return typeof t==\"symbol\"||ou(t)&&\"[object Symbol]\"==Hu.call(t)}function lu(t){if(!t)return[];if(Qe(t))return cu(t)?F(t):Wr(t);\nif(uo&&t[uo]){t=t[uo]();for(var n,r=[];!(n=t.next()).done;)r.push(n.value);return r}return n=St(t),(\"[object Map]\"==n?U:\"[object Set]\"==n?D:wu)(t)}function su(t){return t?(t=_u(t),t===Z||t===-Z?1.7976931348623157e308*(0>t?-1:1):t===t?t:0):0===t?t:0}function hu(t){t=su(t);var n=t%1;return t===t?n?t-n:t:0}function pu(t){return t?vn(hu(t),0,4294967295):0}function _u(t){if(typeof t==\"number\")return t;if(au(t))return q;if(uu(t)&&(t=typeof t.valueOf==\"function\"?t.valueOf():t,t=uu(t)?t+\"\":t),typeof t!=\"string\")return 0===t?t:+t;\nt=t.replace(at,\"\");var n=jt.test(t);return n||mt.test(t)?Pt(t.slice(2),n?2:8):xt.test(t)?q:+t}function vu(t){return Br(t,xu(t))}function gu(t){return null==t?\"\":dr(t)}function du(t,n,r){return t=null==t?P:In(t,n),t===P?r:t}function yu(t,n){return null!=t&&se(t,n,Ln)}function bu(t){return Qe(t)?Yt(t):Kn(t)}function xu(t){return Qe(t)?Yt(t,true):Gn(t)}function ju(t,n){return null==t?{}:er(t,Rn(t,xu,Qo),fe(n))}function wu(t){return t?I(t,bu(t)):[]}function mu(t){return jf(gu(t).toLowerCase())}function Au(t){\nreturn(t=gu(t))&&t.replace(kt,un).replace(Bt,\"\")}function ku(t,n,r){return t=gu(t),n=r?P:n,n===P?Mt.test(t)?t.match(Ct)||[]:t.match(vt)||[]:t.match(n)||[]}function Eu(t){return function(){return t}}function Ou(t){return t}function Su(t){return Vn(typeof t==\"function\"?t:gn(t,true))}function Iu(t,n,r){var e=bu(n),o=Sn(n,e);null!=r||uu(n)&&(o.length||!e.length)||(r=n,n=t,t=this,o=Sn(n,bu(n)));var i=!(uu(r)&&\"chain\"in r&&!r.chain),f=nu(t);return u(o,function(r){var e=n[r];t[r]=e,f&&(t.prototype[r]=function(){\nvar n=this.__chain__;if(i||n){var r=t(this.__wrapped__);return(r.__actions__=Wr(this.__actions__)).push({func:e,args:arguments,thisArg:t}),r.__chain__=n,r}return e.apply(t,s([this.value()],arguments))})}),t}function Ru(){}function Wu(t){return ye(t)?j(Ae(t)):ur(t)}function Bu(){return[]}function Lu(){return false}w=w?cn.defaults(Vt.Object(),w,cn.pick(Vt,zt)):Vt;var Cu=w.Array,Uu=w.Date,Mu=w.Error,zu=w.Function,Du=w.Math,Tu=w.Object,$u=w.RegExp,Fu=w.String,Nu=w.TypeError,Pu=Cu.prototype,Zu=Tu.prototype,qu=w[\"__core-js_shared__\"],Vu=function(){\nvar t=/[^.]+$/.exec(qu&&qu.keys&&qu.keys.IE_PROTO||\"\");return t?\"Symbol(src)_1.\"+t:\"\"}(),Ku=zu.prototype.toString,Gu=Zu.hasOwnProperty,Ju=0,Yu=Ku.call(Tu),Hu=Zu.toString,Qu=Vt._,Xu=$u(\"^\"+Ku.call(Gu).replace(ft,\"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g,\"$1.*?\")+\"$\"),to=Jt?w.Buffer:P,no=w.Symbol,ro=w.Uint8Array,eo=M(Tu.getPrototypeOf,Tu),uo=no?no.iterator:P,oo=Tu.create,io=Zu.propertyIsEnumerable,fo=Pu.splice,co=no?no.isConcatSpreadable:P,ao=w.clearTimeout!==Vt.clearTimeout&&w.clearTimeout,lo=Uu&&Uu.now!==Vt.Date.now&&Uu.now,so=w.setTimeout!==Vt.setTimeout&&w.setTimeout,ho=Du.ceil,po=Du.floor,_o=Tu.getOwnPropertySymbols,vo=to?to.isBuffer:P,go=w.isFinite,yo=Pu.join,bo=M(Tu.keys,Tu),xo=Du.max,jo=Du.min,wo=w.parseInt,mo=Du.random,Ao=Pu.reverse,ko=le(w,\"DataView\"),Eo=le(w,\"Map\"),Oo=le(w,\"Promise\"),So=le(w,\"Set\"),Io=le(w,\"WeakMap\"),Ro=le(Tu,\"create\"),Wo=function(){\nvar t=le(Tu,\"defineProperty\"),n=le.name;return n&&2<n.length?t:P}(),Bo=Io&&new Io,Lo=!io.call({valueOf:1},\"valueOf\"),Co={},Uo=ke(ko),Mo=ke(Eo),zo=ke(Oo),Do=ke(So),To=ke(Io),$o=no?no.prototype:P,Fo=$o?$o.valueOf:P,No=$o?$o.toString:P;It.templateSettings={escape:tt,evaluate:nt,interpolate:rt,variable:\"\",imports:{_:It}},It.prototype=Rt.prototype,It.prototype.constructor=It,Lt.prototype=bn(Rt.prototype),Lt.prototype.constructor=Lt,$t.prototype=bn(Rt.prototype),$t.prototype.constructor=$t,Ft.prototype.clear=function(){\nthis.__data__=Ro?Ro(null):{}},Ft.prototype.delete=function(t){return this.has(t)&&delete this.__data__[t]},Ft.prototype.get=function(t){var n=this.__data__;return Ro?(t=n[t],\"__lodash_hash_undefined__\"===t?P:t):Gu.call(n,t)?n[t]:P},Ft.prototype.has=function(t){var n=this.__data__;return Ro?n[t]!==P:Gu.call(n,t)},Ft.prototype.set=function(t,n){return this.__data__[t]=Ro&&n===P?\"__lodash_hash_undefined__\":n,this},Zt.prototype.clear=function(){this.__data__=[]},Zt.prototype.delete=function(t){var n=this.__data__;\nreturn t=sn(n,t),!(0>t)&&(t==n.length-1?n.pop():fo.call(n,t,1),true)},Zt.prototype.get=function(t){var n=this.__data__;return t=sn(n,t),0>t?P:n[t][1]},Zt.prototype.has=function(t){return-1<sn(this.__data__,t)},Zt.prototype.set=function(t,n){var r=this.__data__,e=sn(r,t);return 0>e?r.push([t,n]):r[e][1]=n,this},qt.prototype.clear=function(){this.__data__={hash:new Ft,map:new(Eo||Zt),string:new Ft}},qt.prototype.delete=function(t){return ce(this,t).delete(t)},qt.prototype.get=function(t){return ce(this,t).get(t);\n},qt.prototype.has=function(t){return ce(this,t).has(t)},qt.prototype.set=function(t,n){return ce(this,t).set(t,n),this},Kt.prototype.add=Kt.prototype.push=function(t){return this.__data__.set(t,\"__lodash_hash_undefined__\"),this},Kt.prototype.has=function(t){return this.__data__.has(t)},Gt.prototype.clear=function(){this.__data__=new Zt},Gt.prototype.delete=function(t){return this.__data__.delete(t)},Gt.prototype.get=function(t){return this.__data__.get(t)},Gt.prototype.has=function(t){return this.__data__.has(t);\n},Gt.prototype.set=function(t,n){var r=this.__data__;if(r instanceof Zt){if(r=r.__data__,!Eo||199>r.length)return r.push([t,n]),this;r=this.__data__=new qt(r)}return r.set(t,n),this};var Po=Mr(En),Zo=Mr(On,true),qo=zr(),Vo=zr(true),Ko=Bo?function(t,n){return Bo.set(t,n),t}:Ou,Go=ao||function(t){return Vt.clearTimeout(t)},Jo=So&&1/D(new So([,-0]))[1]==Z?function(t){return new So(t)}:Ru,Yo=Bo?function(t){return Bo.get(t)}:Ru,Ho=_o?M(_o,Tu):Bu,Qo=_o?function(t){for(var n=[];t;)s(n,Ho(t)),t=eo(t);return n;\n}:Bu;(ko&&\"[object DataView]\"!=St(new ko(new ArrayBuffer(1)))||Eo&&\"[object Map]\"!=St(new Eo)||Oo&&\"[object Promise]\"!=St(Oo.resolve())||So&&\"[object Set]\"!=St(new So)||Io&&\"[object WeakMap]\"!=St(new Io))&&(St=function(t){var n=Hu.call(t);if(t=(t=\"[object Object]\"==n?t.constructor:P)?ke(t):P)switch(t){case Uo:return\"[object DataView]\";case Mo:return\"[object Map]\";case zo:return\"[object Promise]\";case Do:return\"[object Set]\";case To:return\"[object WeakMap]\"}return n});var Xo=qu?nu:Lu,ti=function(){\nvar t=0,n=0;return function(r,e){var u=Ri(),o=16-(u-n);if(n=u,0<o){if(150<=++t)return r}else t=0;return Ko(r,e)}}(),ni=so||function(t,n){return Vt.setTimeout(t,n)},ri=Wo?function(t,n,r){n+=\"\";var e;e=(e=n.match(pt))?e[1].split(_t):[],r=Ee(e,r),e=r.length;var u=e-1;return r[u]=(1<e?\"& \":\"\")+r[u],r=r.join(2<e?\", \":\" \"),n=n.replace(ht,\"{\\n/* [wrapped with \"+r+\"] */\\n\"),Wo(t,\"toString\",{configurable:true,enumerable:false,value:Eu(n)})}:Ou,ei=Ge(function(t){t=gu(t);var n=[];return ot.test(t)&&n.push(\"\"),t.replace(it,function(t,r,e,u){\nn.push(e?u.replace(gt,\"$1\"):r||t)}),n}),ui=ar(function(t,n){return Xe(t)?jn(t,kn(n,1,Xe,true)):[]}),oi=ar(function(t,n){var r=We(n);return Xe(r)&&(r=P),Xe(t)?jn(t,kn(n,1,Xe,true),fe(r,2)):[]}),ii=ar(function(t,n){var r=We(n);return Xe(r)&&(r=P),Xe(t)?jn(t,kn(n,1,Xe,true),P,r):[]}),fi=ar(function(t){var n=l(t,mr);return n.length&&n[0]===t[0]?Cn(n):[]}),ci=ar(function(t){var n=We(t),r=l(t,mr);return n===We(r)?n=P:r.pop(),r.length&&r[0]===t[0]?Cn(r,fe(n,2)):[]}),ai=ar(function(t){var n=We(t),r=l(t,mr);return n===We(r)?n=P:r.pop(),\nr.length&&r[0]===t[0]?Cn(r,P,n):[]}),li=ar(Be),si=ar(function(t,n){n=kn(n,1);var r=t?t.length:0,e=_n(t,n);return ir(t,l(n,function(t){return ge(t,r)?+t:t}).sort(Sr)),e}),hi=ar(function(t){return yr(kn(t,1,Xe,true))}),pi=ar(function(t){var n=We(t);return Xe(n)&&(n=P),yr(kn(t,1,Xe,true),fe(n,2))}),_i=ar(function(t){var n=We(t);return Xe(n)&&(n=P),yr(kn(t,1,Xe,true),P,n)}),vi=ar(function(t,n){return Xe(t)?jn(t,n):[]}),gi=ar(function(t){return jr(f(t,Xe))}),di=ar(function(t){var n=We(t);return Xe(n)&&(n=P),\njr(f(t,Xe),fe(n,2))}),yi=ar(function(t){var n=We(t);return Xe(n)&&(n=P),jr(f(t,Xe),P,n)}),bi=ar(Ce),xi=ar(function(t){var n=t.length,n=1<n?t[n-1]:P,n=typeof n==\"function\"?(t.pop(),n):P;return Ue(t,n)}),ji=ar(function(t){function n(n){return _n(n,t)}t=kn(t,1);var r=t.length,e=r?t[0]:0,u=this.__wrapped__;return!(1<r||this.__actions__.length)&&u instanceof $t&&ge(e)?(u=u.slice(e,+e+(r?1:0)),u.__actions__.push({func:ze,args:[n],thisArg:P}),new Lt(u,this.__chain__).thru(function(t){return r&&!t.length&&t.push(P),\nt})):this.thru(n)}),wi=Cr(function(t,n,r){Gu.call(t,r)?++t[r]:t[r]=1}),mi=Pr(Se),Ai=Pr(Ie),ki=Cr(function(t,n,r){Gu.call(t,r)?t[r].push(n):t[r]=[n]}),Ei=ar(function(t,n,e){var u=-1,o=typeof n==\"function\",i=ye(n),f=Qe(t)?Cu(t.length):[];return Po(t,function(t){var c=o?n:i&&null!=t?t[n]:P;f[++u]=c?r(c,t,e):Mn(t,n,e)}),f}),Oi=Cr(function(t,n,r){t[r]=n}),Si=Cr(function(t,n,r){t[r?0:1].push(n)},function(){return[[],[]]}),Ii=ar(function(t,n){if(null==t)return[];var r=n.length;return 1<r&&de(t,n[0],n[1])?n=[]:2<r&&de(n[0],n[1],n[2])&&(n=[n[0]]),\nnr(t,kn(n,1),[])}),Ri=lo||function(){return Vt.Date.now()},Wi=ar(function(t,n,r){var e=1;if(r.length)var u=z(r,ie(Wi)),e=32|e;return re(t,e,n,r,u)}),Bi=ar(function(t,n,r){var e=3;if(r.length)var u=z(r,ie(Bi)),e=32|e;return re(n,e,t,r,u)}),Li=ar(function(t,n){return xn(t,1,n)}),Ci=ar(function(t,n,r){return xn(t,_u(n)||0,r)});Ge.Cache=qt;var Ui=ar(function(t,n){n=1==n.length&&Fi(n[0])?l(n[0],S(fe())):l(kn(n,1),S(fe()));var e=n.length;return ar(function(u){for(var o=-1,i=jo(u.length,e);++o<i;)u[o]=n[o].call(this,u[o]);\nreturn r(t,this,u)})}),Mi=ar(function(t,n){var r=z(n,ie(Mi));return re(t,32,P,n,r)}),zi=ar(function(t,n){var r=z(n,ie(zi));return re(t,64,P,n,r)}),Di=ar(function(t,n){return re(t,256,P,P,P,kn(n,1))}),Ti=Qr(Wn),$i=Qr(function(t,n){return t>=n}),Fi=Cu.isArray,Ni=Ht?S(Ht):zn,Pi=vo||Lu,Zi=Qt?S(Qt):Dn,qi=Xt?S(Xt):$n,Vi=tn?S(tn):Pn,Ki=nn?S(nn):Zn,Gi=rn?S(rn):qn,Ji=Qr(Jn),Yi=Qr(function(t,n){return t<=n}),Hi=Ur(function(t,n){if(Lo||xe(n)||Qe(n))Br(n,bu(n),t);else for(var r in n)Gu.call(n,r)&&ln(t,r,n[r]);\n}),Qi=Ur(function(t,n){Br(n,xu(n),t)}),Xi=Ur(function(t,n,r,e){Br(n,xu(n),t,e)}),tf=Ur(function(t,n,r,e){Br(n,bu(n),t,e)}),nf=ar(function(t,n){return _n(t,kn(n,1))}),rf=ar(function(t){return t.push(P,en),r(Xi,P,t)}),ef=ar(function(t){return t.push(P,we),r(af,P,t)}),uf=Vr(function(t,n,r){t[n]=r},Eu(Ou)),of=Vr(function(t,n,r){Gu.call(t,n)?t[n].push(r):t[n]=[r]},fe),ff=ar(Mn),cf=Ur(function(t,n,r){Xn(t,n,r)}),af=Ur(function(t,n,r,e){Xn(t,n,r,e)}),lf=ar(function(t,n){return null==t?{}:(n=l(kn(n,1),Ae),\nrr(t,jn(Rn(t,xu,Qo),n)))}),sf=ar(function(t,n){return null==t?{}:rr(t,l(kn(n,1),Ae))}),hf=ne(bu),pf=ne(xu),_f=$r(function(t,n,r){return n=n.toLowerCase(),t+(r?mu(n):n)}),vf=$r(function(t,n,r){return t+(r?\"-\":\"\")+n.toLowerCase()}),gf=$r(function(t,n,r){return t+(r?\" \":\"\")+n.toLowerCase()}),df=Tr(\"toLowerCase\"),yf=$r(function(t,n,r){return t+(r?\"_\":\"\")+n.toLowerCase()}),bf=$r(function(t,n,r){return t+(r?\" \":\"\")+jf(n)}),xf=$r(function(t,n,r){return t+(r?\" \":\"\")+n.toUpperCase()}),jf=Tr(\"toUpperCase\"),wf=ar(function(t,n){\ntry{return r(t,P,n)}catch(t){return tu(t)?t:new Mu(t)}}),mf=ar(function(t,n){return u(kn(n,1),function(n){n=Ae(n),t[n]=Wi(t[n],t)}),t}),Af=Zr(),kf=Zr(true),Ef=ar(function(t,n){return function(r){return Mn(r,t,n)}}),Of=ar(function(t,n){return function(r){return Mn(t,r,n)}}),Sf=Gr(l),If=Gr(i),Rf=Gr(_),Wf=Hr(),Bf=Hr(true),Lf=Kr(function(t,n){return t+n},0),Cf=te(\"ceil\"),Uf=Kr(function(t,n){return t/n},1),Mf=te(\"floor\"),zf=Kr(function(t,n){return t*n},1),Df=te(\"round\"),Tf=Kr(function(t,n){return t-n},0);return It.after=function(t,n){\nif(typeof n!=\"function\")throw new Nu(\"Expected a function\");return t=hu(t),function(){if(1>--t)return n.apply(this,arguments)}},It.ary=Pe,It.assign=Hi,It.assignIn=Qi,It.assignInWith=Xi,It.assignWith=tf,It.at=nf,It.before=Ze,It.bind=Wi,It.bindAll=mf,It.bindKey=Bi,It.castArray=function(){if(!arguments.length)return[];var t=arguments[0];return Fi(t)?t:[t]},It.chain=Me,It.chunk=function(t,n,r){if(n=(r?de(t,n,r):n===P)?1:xo(hu(n),0),r=t?t.length:0,!r||1>n)return[];for(var e=0,u=0,o=Cu(ho(r/n));e<r;)o[u++]=sr(t,e,e+=n);\nreturn o},It.compact=function(t){for(var n=-1,r=t?t.length:0,e=0,u=[];++n<r;){var o=t[n];o&&(u[e++]=o)}return u},It.concat=function(){for(var t=arguments.length,n=Cu(t?t-1:0),r=arguments[0],e=t;e--;)n[e-1]=arguments[e];return t?s(Fi(r)?Wr(r):[r],kn(n,1)):[]},It.cond=function(t){var n=t?t.length:0,e=fe();return t=n?l(t,function(t){if(\"function\"!=typeof t[1])throw new Nu(\"Expected a function\");return[e(t[0]),t[1]]}):[],ar(function(e){for(var u=-1;++u<n;){var o=t[u];if(r(o[0],this,e))return r(o[1],this,e);\n}})},It.conforms=function(t){return dn(gn(t,true))},It.constant=Eu,It.countBy=wi,It.create=function(t,n){var r=bn(t);return n?pn(r,n):r},It.curry=qe,It.curryRight=Ve,It.debounce=Ke,It.defaults=rf,It.defaultsDeep=ef,It.defer=Li,It.delay=Ci,It.difference=ui,It.differenceBy=oi,It.differenceWith=ii,It.drop=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),sr(t,0>n?0:n,e)):[]},It.dropRight=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),n=e-n,sr(t,0,0>n?0:n)):[]},It.dropRightWhile=function(t,n){\nreturn t&&t.length?br(t,fe(n,3),true,true):[]},It.dropWhile=function(t,n){return t&&t.length?br(t,fe(n,3),true):[]},It.fill=function(t,n,r,e){var u=t?t.length:0;if(!u)return[];for(r&&typeof r!=\"number\"&&de(t,n,r)&&(r=0,e=u),u=t.length,r=hu(r),0>r&&(r=-r>u?0:u+r),e=e===P||e>u?u:hu(e),0>e&&(e+=u),e=r>e?0:pu(e);r<e;)t[r++]=n;return t},It.filter=function(t,n){return(Fi(t)?f:An)(t,fe(n,3))},It.flatMap=function(t,n){return kn(Fe(t,n),1)},It.flatMapDeep=function(t,n){return kn(Fe(t,n),Z)},It.flatMapDepth=function(t,n,r){\nreturn r=r===P?1:hu(r),kn(Fe(t,n),r)},It.flatten=function(t){return t&&t.length?kn(t,1):[]},It.flattenDeep=function(t){return t&&t.length?kn(t,Z):[]},It.flattenDepth=function(t,n){return t&&t.length?(n=n===P?1:hu(n),kn(t,n)):[]},It.flip=function(t){return re(t,512)},It.flow=Af,It.flowRight=kf,It.fromPairs=function(t){for(var n=-1,r=t?t.length:0,e={};++n<r;){var u=t[n];e[u[0]]=u[1]}return e},It.functions=function(t){return null==t?[]:Sn(t,bu(t))},It.functionsIn=function(t){return null==t?[]:Sn(t,xu(t));\n},It.groupBy=ki,It.initial=function(t){return t&&t.length?sr(t,0,-1):[]},It.intersection=fi,It.intersectionBy=ci,It.intersectionWith=ai,It.invert=uf,It.invertBy=of,It.invokeMap=Ei,It.iteratee=Su,It.keyBy=Oi,It.keys=bu,It.keysIn=xu,It.map=Fe,It.mapKeys=function(t,n){var r={};return n=fe(n,3),En(t,function(t,e,u){r[n(t,e,u)]=t}),r},It.mapValues=function(t,n){var r={};return n=fe(n,3),En(t,function(t,e,u){r[e]=n(t,e,u)}),r},It.matches=function(t){return Hn(gn(t,true))},It.matchesProperty=function(t,n){\nreturn Qn(t,gn(n,true))},It.memoize=Ge,It.merge=cf,It.mergeWith=af,It.method=Ef,It.methodOf=Of,It.mixin=Iu,It.negate=Je,It.nthArg=function(t){return t=hu(t),ar(function(n){return tr(n,t)})},It.omit=lf,It.omitBy=function(t,n){return ju(t,Je(fe(n)))},It.once=function(t){return Ze(2,t)},It.orderBy=function(t,n,r,e){return null==t?[]:(Fi(n)||(n=null==n?[]:[n]),r=e?P:r,Fi(r)||(r=null==r?[]:[r]),nr(t,n,r))},It.over=Sf,It.overArgs=Ui,It.overEvery=If,It.overSome=Rf,It.partial=Mi,It.partialRight=zi,It.partition=Si,\nIt.pick=sf,It.pickBy=ju,It.property=Wu,It.propertyOf=function(t){return function(n){return null==t?P:In(t,n)}},It.pull=li,It.pullAll=Be,It.pullAllBy=function(t,n,r){return t&&t.length&&n&&n.length?or(t,n,fe(r,2)):t},It.pullAllWith=function(t,n,r){return t&&t.length&&n&&n.length?or(t,n,P,r):t},It.pullAt=si,It.range=Wf,It.rangeRight=Bf,It.rearg=Di,It.reject=function(t,n){return(Fi(t)?f:An)(t,Je(fe(n,3)))},It.remove=function(t,n){var r=[];if(!t||!t.length)return r;var e=-1,u=[],o=t.length;for(n=fe(n,3);++e<o;){\nvar i=t[e];n(i,e,t)&&(r.push(i),u.push(e))}return ir(t,u),r},It.rest=function(t,n){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=n===P?n:hu(n),ar(t,n)},It.reverse=Le,It.sampleSize=Ne,It.set=function(t,n,r){return null==t?t:lr(t,n,r)},It.setWith=function(t,n,r,e){return e=typeof e==\"function\"?e:P,null==t?t:lr(t,n,r,e)},It.shuffle=function(t){return Ne(t,4294967295)},It.slice=function(t,n,r){var e=t?t.length:0;return e?(r&&typeof r!=\"number\"&&de(t,n,r)?(n=0,r=e):(n=null==n?0:hu(n),\nr=r===P?e:hu(r)),sr(t,n,r)):[]},It.sortBy=Ii,It.sortedUniq=function(t){return t&&t.length?vr(t):[]},It.sortedUniqBy=function(t,n){return t&&t.length?vr(t,fe(n,2)):[]},It.split=function(t,n,r){return r&&typeof r!=\"number\"&&de(t,n,r)&&(n=r=P),r=r===P?4294967295:r>>>0,r?(t=gu(t))&&(typeof n==\"string\"||null!=n&&!Vi(n))&&(n=dr(n),!n&&Ut.test(t))?kr(F(t),0,r):t.split(n,r):[]},It.spread=function(t,n){if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return n=n===P?0:xo(hu(n),0),ar(function(e){\nvar u=e[n];return e=kr(e,0,n),u&&s(e,u),r(t,this,e)})},It.tail=function(t){var n=t?t.length:0;return n?sr(t,1,n):[]},It.take=function(t,n,r){return t&&t.length?(n=r||n===P?1:hu(n),sr(t,0,0>n?0:n)):[]},It.takeRight=function(t,n,r){var e=t?t.length:0;return e?(n=r||n===P?1:hu(n),n=e-n,sr(t,0>n?0:n,e)):[]},It.takeRightWhile=function(t,n){return t&&t.length?br(t,fe(n,3),false,true):[]},It.takeWhile=function(t,n){return t&&t.length?br(t,fe(n,3)):[]},It.tap=function(t,n){return n(t),t},It.throttle=function(t,n,r){\nvar e=true,u=true;if(typeof t!=\"function\")throw new Nu(\"Expected a function\");return uu(r)&&(e=\"leading\"in r?!!r.leading:e,u=\"trailing\"in r?!!r.trailing:u),Ke(t,n,{leading:e,maxWait:n,trailing:u})},It.thru=ze,It.toArray=lu,It.toPairs=hf,It.toPairsIn=pf,It.toPath=function(t){return Fi(t)?l(t,Ae):au(t)?[t]:Wr(ei(t))},It.toPlainObject=vu,It.transform=function(t,n,r){var e=Fi(t)||Gi(t);if(n=fe(n,4),null==r)if(e||uu(t)){var o=t.constructor;r=e?Fi(t)?new o:[]:nu(o)?bn(eo(t)):{}}else r={};return(e?u:En)(t,function(t,e,u){\nreturn n(r,t,e,u)}),r},It.unary=function(t){return Pe(t,1)},It.union=hi,It.unionBy=pi,It.unionWith=_i,It.uniq=function(t){return t&&t.length?yr(t):[]},It.uniqBy=function(t,n){return t&&t.length?yr(t,fe(n,2)):[]},It.uniqWith=function(t,n){return t&&t.length?yr(t,P,n):[]},It.unset=function(t,n){var r;if(null==t)r=true;else{r=t;var e=n,e=ye(e,r)?[e]:Ar(e);r=me(r,e),e=Ae(We(e)),r=!(null!=r&&Gu.call(r,e))||delete r[e]}return r},It.unzip=Ce,It.unzipWith=Ue,It.update=function(t,n,r){return null==t?t:lr(t,n,(typeof r==\"function\"?r:Ou)(In(t,n)),void 0);\n},It.updateWith=function(t,n,r,e){return e=typeof e==\"function\"?e:P,null!=t&&(t=lr(t,n,(typeof r==\"function\"?r:Ou)(In(t,n)),e)),t},It.values=wu,It.valuesIn=function(t){return null==t?[]:I(t,xu(t))},It.without=vi,It.words=ku,It.wrap=function(t,n){return n=null==n?Ou:n,Mi(n,t)},It.xor=gi,It.xorBy=di,It.xorWith=yi,It.zip=bi,It.zipObject=function(t,n){return wr(t||[],n||[],ln)},It.zipObjectDeep=function(t,n){return wr(t||[],n||[],lr)},It.zipWith=xi,It.entries=hf,It.entriesIn=pf,It.extend=Qi,It.extendWith=Xi,\nIu(It,It),It.add=Lf,It.attempt=wf,It.camelCase=_f,It.capitalize=mu,It.ceil=Cf,It.clamp=function(t,n,r){return r===P&&(r=n,n=P),r!==P&&(r=_u(r),r=r===r?r:0),n!==P&&(n=_u(n),n=n===n?n:0),vn(_u(t),n,r)},It.clone=function(t){return gn(t,false,true)},It.cloneDeep=function(t){return gn(t,true,true)},It.cloneDeepWith=function(t,n){return gn(t,true,true,n)},It.cloneWith=function(t,n){return gn(t,false,true,n)},It.conformsTo=function(t,n){return null==n||yn(t,n,bu(n))},It.deburr=Au,It.defaultTo=function(t,n){return null==t||t!==t?n:t;\n},It.divide=Uf,It.endsWith=function(t,n,r){t=gu(t),n=dr(n);var e=t.length,e=r=r===P?e:vn(hu(r),0,e);return r-=n.length,0<=r&&t.slice(r,e)==n},It.eq=Ye,It.escape=function(t){return(t=gu(t))&&X.test(t)?t.replace(H,on):t},It.escapeRegExp=function(t){return(t=gu(t))&&ct.test(t)?t.replace(ft,\"\\\\$&\"):t},It.every=function(t,n,r){var e=Fi(t)?i:wn;return r&&de(t,n,r)&&(n=P),e(t,fe(n,3))},It.find=mi,It.findIndex=Se,It.findKey=function(t,n){return v(t,fe(n,3),En)},It.findLast=Ai,It.findLastIndex=Ie,It.findLastKey=function(t,n){\nreturn v(t,fe(n,3),On)},It.floor=Mf,It.forEach=Te,It.forEachRight=$e,It.forIn=function(t,n){return null==t?t:qo(t,fe(n,3),xu)},It.forInRight=function(t,n){return null==t?t:Vo(t,fe(n,3),xu)},It.forOwn=function(t,n){return t&&En(t,fe(n,3))},It.forOwnRight=function(t,n){return t&&On(t,fe(n,3))},It.get=du,It.gt=Ti,It.gte=$i,It.has=function(t,n){return null!=t&&se(t,n,Bn)},It.hasIn=yu,It.head=Re,It.identity=Ou,It.includes=function(t,n,r,e){return t=Qe(t)?t:wu(t),r=r&&!e?hu(r):0,e=t.length,0>r&&(r=xo(e+r,0)),\ncu(t)?r<=e&&-1<t.indexOf(n,r):!!e&&-1<d(t,n,r)},It.indexOf=function(t,n,r){var e=t?t.length:0;return e?(r=null==r?0:hu(r),0>r&&(r=xo(e+r,0)),d(t,n,r)):-1},It.inRange=function(t,n,r){return n=su(n),r===P?(r=n,n=0):r=su(r),t=_u(t),t>=jo(n,r)&&t<xo(n,r)},It.invoke=ff,It.isArguments=He,It.isArray=Fi,It.isArrayBuffer=Ni,It.isArrayLike=Qe,It.isArrayLikeObject=Xe,It.isBoolean=function(t){return true===t||false===t||ou(t)&&\"[object Boolean]\"==Hu.call(t)},It.isBuffer=Pi,It.isDate=Zi,It.isElement=function(t){return!!t&&1===t.nodeType&&ou(t)&&!fu(t);\n},It.isEmpty=function(t){if(Qe(t)&&(Fi(t)||typeof t==\"string\"||typeof t.splice==\"function\"||Pi(t)||He(t)))return!t.length;var n=St(t);if(\"[object Map]\"==n||\"[object Set]\"==n)return!t.size;if(Lo||xe(t))return!bo(t).length;for(var r in t)if(Gu.call(t,r))return false;return true},It.isEqual=function(t,n){return Tn(t,n)},It.isEqualWith=function(t,n,r){var e=(r=typeof r==\"function\"?r:P)?r(t,n):P;return e===P?Tn(t,n,r):!!e},It.isError=tu,It.isFinite=function(t){return typeof t==\"number\"&&go(t)},It.isFunction=nu,\nIt.isInteger=ru,It.isLength=eu,It.isMap=qi,It.isMatch=function(t,n){return t===n||Fn(t,n,ae(n))},It.isMatchWith=function(t,n,r){return r=typeof r==\"function\"?r:P,Fn(t,n,ae(n),r)},It.isNaN=function(t){return iu(t)&&t!=+t},It.isNative=function(t){if(Xo(t))throw new Mu(\"This method is not supported with core-js. Try https://github.com/es-shims.\");return Nn(t)},It.isNil=function(t){return null==t},It.isNull=function(t){return null===t},It.isNumber=iu,It.isObject=uu,It.isObjectLike=ou,It.isPlainObject=fu,\nIt.isRegExp=Vi,It.isSafeInteger=function(t){return ru(t)&&-9007199254740991<=t&&9007199254740991>=t},It.isSet=Ki,It.isString=cu,It.isSymbol=au,It.isTypedArray=Gi,It.isUndefined=function(t){return t===P},It.isWeakMap=function(t){return ou(t)&&\"[object WeakMap]\"==St(t)},It.isWeakSet=function(t){return ou(t)&&\"[object WeakSet]\"==Hu.call(t)},It.join=function(t,n){return t?yo.call(t,n):\"\"},It.kebabCase=vf,It.last=We,It.lastIndexOf=function(t,n,r){var e=t?t.length:0;if(!e)return-1;var u=e;if(r!==P&&(u=hu(r),\nu=(0>u?xo(e+u,0):jo(u,e-1))+1),n!==n)return g(t,b,u-1,true);for(;u--;)if(t[u]===n)return u;return-1},It.lowerCase=gf,It.lowerFirst=df,It.lt=Ji,It.lte=Yi,It.max=function(t){return t&&t.length?mn(t,Ou,Wn):P},It.maxBy=function(t,n){return t&&t.length?mn(t,fe(n,2),Wn):P},It.mean=function(t){return x(t,Ou)},It.meanBy=function(t,n){return x(t,fe(n,2))},It.min=function(t){return t&&t.length?mn(t,Ou,Jn):P},It.minBy=function(t,n){return t&&t.length?mn(t,fe(n,2),Jn):P},It.stubArray=Bu,It.stubFalse=Lu,It.stubObject=function(){\nreturn{}},It.stubString=function(){return\"\"},It.stubTrue=function(){return true},It.multiply=zf,It.nth=function(t,n){return t&&t.length?tr(t,hu(n)):P},It.noConflict=function(){return Vt._===this&&(Vt._=Qu),this},It.noop=Ru,It.now=Ri,It.pad=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return!n||e>=n?t:(n=(n-e)/2,Jr(po(n),r)+t+Jr(ho(n),r))},It.padEnd=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return n&&e<n?t+Jr(n-e,r):t},It.padStart=function(t,n,r){t=gu(t);var e=(n=hu(n))?$(t):0;return n&&e<n?Jr(n-e,r)+t:t;\n},It.parseInt=function(t,n,r){return r||null==n?n=0:n&&(n=+n),t=gu(t).replace(at,\"\"),wo(t,n||(bt.test(t)?16:10))},It.random=function(t,n,r){if(r&&typeof r!=\"boolean\"&&de(t,n,r)&&(n=r=P),r===P&&(typeof n==\"boolean\"?(r=n,n=P):typeof t==\"boolean\"&&(r=t,t=P)),t===P&&n===P?(t=0,n=1):(t=su(t),n===P?(n=t,t=0):n=su(n)),t>n){var e=t;t=n,n=e}return r||t%1||n%1?(r=mo(),jo(t+r*(n-t+Nt(\"1e-\"+((r+\"\").length-1))),n)):fr(t,n)},It.reduce=function(t,n,r){var e=Fi(t)?h:m,u=3>arguments.length;return e(t,fe(n,4),r,u,Po);\n},It.reduceRight=function(t,n,r){var e=Fi(t)?p:m,u=3>arguments.length;return e(t,fe(n,4),r,u,Zo)},It.repeat=function(t,n,r){return n=(r?de(t,n,r):n===P)?1:hu(n),cr(gu(t),n)},It.replace=function(){var t=arguments,n=gu(t[0]);return 3>t.length?n:n.replace(t[1],t[2])},It.result=function(t,n,r){n=ye(n,t)?[n]:Ar(n);var e=-1,u=n.length;for(u||(t=P,u=1);++e<u;){var o=null==t?P:t[Ae(n[e])];o===P&&(e=u,o=r),t=nu(o)?o.call(t):o}return t},It.round=Df,It.runInContext=N,It.sample=function(t){t=Qe(t)?t:wu(t);var n=t.length;\nreturn 0<n?t[fr(0,n-1)]:P},It.size=function(t){if(null==t)return 0;if(Qe(t))return cu(t)?$(t):t.length;var n=St(t);return\"[object Map]\"==n||\"[object Set]\"==n?t.size:Kn(t).length},It.snakeCase=yf,It.some=function(t,n,r){var e=Fi(t)?_:hr;return r&&de(t,n,r)&&(n=P),e(t,fe(n,3))},It.sortedIndex=function(t,n){return pr(t,n)},It.sortedIndexBy=function(t,n,r){return _r(t,n,fe(r,2))},It.sortedIndexOf=function(t,n){var r=t?t.length:0;if(r){var e=pr(t,n);if(e<r&&Ye(t[e],n))return e}return-1},It.sortedLastIndex=function(t,n){\nreturn pr(t,n,true)},It.sortedLastIndexBy=function(t,n,r){return _r(t,n,fe(r,2),true)},It.sortedLastIndexOf=function(t,n){if(t&&t.length){var r=pr(t,n,true)-1;if(Ye(t[r],n))return r}return-1},It.startCase=bf,It.startsWith=function(t,n,r){return t=gu(t),r=vn(hu(r),0,t.length),n=dr(n),t.slice(r,r+n.length)==n},It.subtract=Tf,It.sum=function(t){return t&&t.length?k(t,Ou):0},It.sumBy=function(t,n){return t&&t.length?k(t,fe(n,2)):0},It.template=function(t,n,r){var e=It.templateSettings;r&&de(t,n,r)&&(n=P),t=gu(t),\nn=Xi({},n,e,en),r=Xi({},n.imports,e.imports,en);var u,o,i=bu(r),f=I(r,i),c=0;r=n.interpolate||Et;var a=\"__p+='\";r=$u((n.escape||Et).source+\"|\"+r.source+\"|\"+(r===rt?dt:Et).source+\"|\"+(n.evaluate||Et).source+\"|$\",\"g\");var l=\"sourceURL\"in n?\"//# sourceURL=\"+n.sourceURL+\"\\n\":\"\";if(t.replace(r,function(n,r,e,i,f,l){return e||(e=i),a+=t.slice(c,l).replace(Ot,L),r&&(u=true,a+=\"'+__e(\"+r+\")+'\"),f&&(o=true,a+=\"';\"+f+\";\\n__p+='\"),e&&(a+=\"'+((__t=(\"+e+\"))==null?'':__t)+'\"),c=l+n.length,n}),a+=\"';\",(n=n.variable)||(a=\"with(obj){\"+a+\"}\"),\na=(o?a.replace(K,\"\"):a).replace(G,\"$1\").replace(J,\"$1;\"),a=\"function(\"+(n||\"obj\")+\"){\"+(n?\"\":\"obj||(obj={});\")+\"var __t,__p=''\"+(u?\",__e=_.escape\":\"\")+(o?\",__j=Array.prototype.join;function print(){__p+=__j.call(arguments,'')}\":\";\")+a+\"return __p}\",n=wf(function(){return zu(i,l+\"return \"+a).apply(P,f)}),n.source=a,tu(n))throw n;return n},It.times=function(t,n){if(t=hu(t),1>t||9007199254740991<t)return[];var r=4294967295,e=jo(t,4294967295);for(n=fe(n),t-=4294967295,e=E(e,n);++r<t;)n(r);return e},It.toFinite=su,\nIt.toInteger=hu,It.toLength=pu,It.toLower=function(t){return gu(t).toLowerCase()},It.toNumber=_u,It.toSafeInteger=function(t){return vn(hu(t),-9007199254740991,9007199254740991)},It.toString=gu,It.toUpper=function(t){return gu(t).toUpperCase()},It.trim=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(at,\"\"):t&&(n=dr(n))?(t=F(t),r=F(n),n=W(t,r),r=B(t,r)+1,kr(t,n,r).join(\"\")):t},It.trimEnd=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(st,\"\"):t&&(n=dr(n))?(t=F(t),n=B(t,F(n))+1,kr(t,0,n).join(\"\")):t;\n},It.trimStart=function(t,n,r){return(t=gu(t))&&(r||n===P)?t.replace(lt,\"\"):t&&(n=dr(n))?(t=F(t),n=W(t,F(n)),kr(t,n).join(\"\")):t},It.truncate=function(t,n){var r=30,e=\"...\";if(uu(n))var u=\"separator\"in n?n.separator:u,r=\"length\"in n?hu(n.length):r,e=\"omission\"in n?dr(n.omission):e;t=gu(t);var o=t.length;if(Ut.test(t))var i=F(t),o=i.length;if(r>=o)return t;if(o=r-$(e),1>o)return e;if(r=i?kr(i,0,o).join(\"\"):t.slice(0,o),u===P)return r+e;if(i&&(o+=r.length-o),Vi(u)){if(t.slice(o).search(u)){var f=r;for(u.global||(u=$u(u.source,gu(yt.exec(u))+\"g\")),\nu.lastIndex=0;i=u.exec(f);)var c=i.index;r=r.slice(0,c===P?o:c)}}else t.indexOf(dr(u),o)!=o&&(u=r.lastIndexOf(u),-1<u&&(r=r.slice(0,u)));return r+e},It.unescape=function(t){return(t=gu(t))&&Q.test(t)?t.replace(Y,fn):t},It.uniqueId=function(t){var n=++Ju;return gu(t)+n},It.upperCase=xf,It.upperFirst=jf,It.each=Te,It.eachRight=$e,It.first=Re,Iu(It,function(){var t={};return En(It,function(n,r){Gu.call(It.prototype,r)||(t[r]=n)}),t}(),{chain:false}),It.VERSION=\"4.15.0\",u(\"bind bindKey curry curryRight partial partialRight\".split(\" \"),function(t){\nIt[t].placeholder=It}),u([\"drop\",\"take\"],function(t,n){$t.prototype[t]=function(r){var e=this.__filtered__;if(e&&!n)return new $t(this);r=r===P?1:xo(hu(r),0);var u=this.clone();return e?u.__takeCount__=jo(r,u.__takeCount__):u.__views__.push({size:jo(r,4294967295),type:t+(0>u.__dir__?\"Right\":\"\")}),u},$t.prototype[t+\"Right\"]=function(n){return this.reverse()[t](n).reverse()}}),u([\"filter\",\"map\",\"takeWhile\"],function(t,n){var r=n+1,e=1==r||3==r;$t.prototype[t]=function(t){var n=this.clone();return n.__iteratees__.push({\niteratee:fe(t,3),type:r}),n.__filtered__=n.__filtered__||e,n}}),u([\"head\",\"last\"],function(t,n){var r=\"take\"+(n?\"Right\":\"\");$t.prototype[t]=function(){return this[r](1).value()[0]}}),u([\"initial\",\"tail\"],function(t,n){var r=\"drop\"+(n?\"\":\"Right\");$t.prototype[t]=function(){return this.__filtered__?new $t(this):this[r](1)}}),$t.prototype.compact=function(){return this.filter(Ou)},$t.prototype.find=function(t){return this.filter(t).head()},$t.prototype.findLast=function(t){return this.reverse().find(t);\n},$t.prototype.invokeMap=ar(function(t,n){return typeof t==\"function\"?new $t(this):this.map(function(r){return Mn(r,t,n)})}),$t.prototype.reject=function(t){return this.filter(Je(fe(t)))},$t.prototype.slice=function(t,n){t=hu(t);var r=this;return r.__filtered__&&(0<t||0>n)?new $t(r):(0>t?r=r.takeRight(-t):t&&(r=r.drop(t)),n!==P&&(n=hu(n),r=0>n?r.dropRight(-n):r.take(n-t)),r)},$t.prototype.takeRightWhile=function(t){return this.reverse().takeWhile(t).reverse()},$t.prototype.toArray=function(){return this.take(4294967295);\n},En($t.prototype,function(t,n){var r=/^(?:filter|find|map|reject)|While$/.test(n),e=/^(?:head|last)$/.test(n),u=It[e?\"take\"+(\"last\"==n?\"Right\":\"\"):n],o=e||/^find/.test(n);u&&(It.prototype[n]=function(){function n(t){return t=u.apply(It,s([t],f)),e&&h?t[0]:t}var i=this.__wrapped__,f=e?[1]:arguments,c=i instanceof $t,a=f[0],l=c||Fi(i);l&&r&&typeof a==\"function\"&&1!=a.length&&(c=l=false);var h=this.__chain__,p=!!this.__actions__.length,a=o&&!h,c=c&&!p;return!o&&l?(i=c?i:new $t(this),i=t.apply(i,f),i.__actions__.push({\nfunc:ze,args:[n],thisArg:P}),new Lt(i,h)):a&&c?t.apply(this,f):(i=this.thru(n),a?e?i.value()[0]:i.value():i)})}),u(\"pop push shift sort splice unshift\".split(\" \"),function(t){var n=Pu[t],r=/^(?:push|sort|unshift)$/.test(t)?\"tap\":\"thru\",e=/^(?:pop|shift)$/.test(t);It.prototype[t]=function(){var t=arguments;if(e&&!this.__chain__){var u=this.value();return n.apply(Fi(u)?u:[],t)}return this[r](function(r){return n.apply(Fi(r)?r:[],t)})}}),En($t.prototype,function(t,n){var r=It[n];if(r){var e=r.name+\"\";\n(Co[e]||(Co[e]=[])).push({name:n,func:r})}}),Co[qr(P,2).name]=[{name:\"wrapper\",func:P}],$t.prototype.clone=function(){var t=new $t(this.__wrapped__);return t.__actions__=Wr(this.__actions__),t.__dir__=this.__dir__,t.__filtered__=this.__filtered__,t.__iteratees__=Wr(this.__iteratees__),t.__takeCount__=this.__takeCount__,t.__views__=Wr(this.__views__),t},$t.prototype.reverse=function(){if(this.__filtered__){var t=new $t(this);t.__dir__=-1,t.__filtered__=true}else t=this.clone(),t.__dir__*=-1;return t;\n},$t.prototype.value=function(){var t,n=this.__wrapped__.value(),r=this.__dir__,e=Fi(n),u=0>r,o=e?n.length:0;t=o;for(var i=this.__views__,f=0,c=-1,a=i.length;++c<a;){var l=i[c],s=l.size;switch(l.type){case\"drop\":f+=s;break;case\"dropRight\":t-=s;break;case\"take\":t=jo(t,f+s);break;case\"takeRight\":f=xo(f,t-s)}}if(t={start:f,end:t},i=t.start,f=t.end,t=f-i,u=u?f:i-1,i=this.__iteratees__,f=i.length,c=0,a=jo(t,this.__takeCount__),!e||200>o||o==t&&a==t)return xr(n,this.__actions__);e=[];t:for(;t--&&c<a;){\nfor(u+=r,o=-1,l=n[u];++o<f;){var h=i[o],s=h.type,h=(0,h.iteratee)(l);if(2==s)l=h;else if(!h){if(1==s)continue t;break t}}e[c++]=l}return e},It.prototype.at=ji,It.prototype.chain=function(){return Me(this)},It.prototype.commit=function(){return new Lt(this.value(),this.__chain__)},It.prototype.next=function(){this.__values__===P&&(this.__values__=lu(this.value()));var t=this.__index__>=this.__values__.length,n=t?P:this.__values__[this.__index__++];return{done:t,value:n}},It.prototype.plant=function(t){\nfor(var n,r=this;r instanceof Rt;){var e=Oe(r);e.__index__=0,e.__values__=P,n?u.__wrapped__=e:n=e;var u=e,r=r.__wrapped__}return u.__wrapped__=t,n},It.prototype.reverse=function(){var t=this.__wrapped__;return t instanceof $t?(this.__actions__.length&&(t=new $t(this)),t=t.reverse(),t.__actions__.push({func:ze,args:[Le],thisArg:P}),new Lt(t,this.__chain__)):this.thru(Le)},It.prototype.toJSON=It.prototype.valueOf=It.prototype.value=function(){return xr(this.__wrapped__,this.__actions__)},It.prototype.first=It.prototype.head,\nuo&&(It.prototype[uo]=De),It}var P,Z=1/0,q=NaN,V=[[\"ary\",128],[\"bind\",1],[\"bindKey\",2],[\"curry\",8],[\"curryRight\",16],[\"flip\",512],[\"partial\",32],[\"partialRight\",64],[\"rearg\",256]],K=/\\b__p\\+='';/g,G=/\\b(__p\\+=)''\\+/g,J=/(__e\\(.*?\\)|\\b__t\\))\\+'';/g,Y=/&(?:amp|lt|gt|quot|#39|#96);/g,H=/[&<>\"'`]/g,Q=RegExp(Y.source),X=RegExp(H.source),tt=/<%-([\\s\\S]+?)%>/g,nt=/<%([\\s\\S]+?)%>/g,rt=/<%=([\\s\\S]+?)%>/g,et=/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,ut=/^\\w*$/,ot=/^\\./,it=/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g,ft=/[\\\\^$.*+?()[\\]{}|]/g,ct=RegExp(ft.source),at=/^\\s+|\\s+$/g,lt=/^\\s+/,st=/\\s+$/,ht=/\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,pt=/\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,_t=/,? & /,vt=/[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g,gt=/\\\\(\\\\)?/g,dt=/\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g,yt=/\\w*$/,bt=/^0x/i,xt=/^[-+]0x[0-9a-f]+$/i,jt=/^0b[01]+$/i,wt=/^\\[object .+?Constructor\\]$/,mt=/^0o[0-7]+$/i,At=/^(?:0|[1-9]\\d*)$/,kt=/[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g,Et=/($^)/,Ot=/['\\n\\r\\u2028\\u2029\\\\]/g,St=\"[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|\\\\ud83c[\\\\udffb-\\\\udfff])?(?:\\\\u200d(?:[^\\\\ud800-\\\\udfff]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])[\\\\ufe0e\\\\ufe0f]?(?:[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|\\\\ud83c[\\\\udffb-\\\\udfff])?)*\",It=\"(?:[\\\\u2700-\\\\u27bf]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff])\"+St,Rt=\"(?:[^\\\\ud800-\\\\udfff][\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]?|[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]|(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}|[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]|[\\\\ud800-\\\\udfff])\",Wt=RegExp(\"['\\u2019]\",\"g\"),Bt=RegExp(\"[\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0]\",\"g\"),Lt=RegExp(\"\\\\ud83c[\\\\udffb-\\\\udfff](?=\\\\ud83c[\\\\udffb-\\\\udfff])|\"+Rt+St,\"g\"),Ct=RegExp([\"[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|$)|(?:[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?(?=[\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000]|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde](?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])|$)|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]?(?:[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]|[^\\\\ud800-\\\\udfff\\\\xac\\\\xb1\\\\xd7\\\\xf7\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf\\\\u2000-\\\\u206f \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\d+\\\\u2700-\\\\u27bfa-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xffA-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde])+(?:['\\u2019](?:d|ll|m|re|s|t|ve))?|[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]+(?:['\\u2019](?:D|LL|M|RE|S|T|VE))?|\\\\d+\",It].join(\"|\"),\"g\"),Ut=RegExp(\"[\\\\u200d\\\\ud800-\\\\udfff\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23\\\\u20d0-\\\\u20f0\\\\ufe0e\\\\ufe0f]\"),Mt=/[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,zt=\"Array Buffer DataView Date Error Float32Array Float64Array Function Int8Array Int16Array Int32Array Map Math Object Promise RegExp Set String Symbol TypeError Uint8Array Uint8ClampedArray Uint16Array Uint32Array WeakMap _ clearTimeout isFinite parseInt setTimeout\".split(\" \"),Dt={};\nDt[\"[object Float32Array]\"]=Dt[\"[object Float64Array]\"]=Dt[\"[object Int8Array]\"]=Dt[\"[object Int16Array]\"]=Dt[\"[object Int32Array]\"]=Dt[\"[object Uint8Array]\"]=Dt[\"[object Uint8ClampedArray]\"]=Dt[\"[object Uint16Array]\"]=Dt[\"[object Uint32Array]\"]=true,Dt[\"[object Arguments]\"]=Dt[\"[object Array]\"]=Dt[\"[object ArrayBuffer]\"]=Dt[\"[object Boolean]\"]=Dt[\"[object DataView]\"]=Dt[\"[object Date]\"]=Dt[\"[object Error]\"]=Dt[\"[object Function]\"]=Dt[\"[object Map]\"]=Dt[\"[object Number]\"]=Dt[\"[object Object]\"]=Dt[\"[object RegExp]\"]=Dt[\"[object Set]\"]=Dt[\"[object String]\"]=Dt[\"[object WeakMap]\"]=false;\nvar Tt={};Tt[\"[object Arguments]\"]=Tt[\"[object Array]\"]=Tt[\"[object ArrayBuffer]\"]=Tt[\"[object DataView]\"]=Tt[\"[object Boolean]\"]=Tt[\"[object Date]\"]=Tt[\"[object Float32Array]\"]=Tt[\"[object Float64Array]\"]=Tt[\"[object Int8Array]\"]=Tt[\"[object Int16Array]\"]=Tt[\"[object Int32Array]\"]=Tt[\"[object Map]\"]=Tt[\"[object Number]\"]=Tt[\"[object Object]\"]=Tt[\"[object RegExp]\"]=Tt[\"[object Set]\"]=Tt[\"[object String]\"]=Tt[\"[object Symbol]\"]=Tt[\"[object Uint8Array]\"]=Tt[\"[object Uint8ClampedArray]\"]=Tt[\"[object Uint16Array]\"]=Tt[\"[object Uint32Array]\"]=true,\nTt[\"[object Error]\"]=Tt[\"[object Function]\"]=Tt[\"[object WeakMap]\"]=false;var $t,Ft={\"\\\\\":\"\\\\\",\"'\":\"'\",\"\\n\":\"n\",\"\\r\":\"r\",\"\\u2028\":\"u2028\",\"\\u2029\":\"u2029\"},Nt=parseFloat,Pt=parseInt,Zt=typeof global==\"object\"&&global&&global.Object===Object&&global,qt=typeof self==\"object\"&&self&&self.Object===Object&&self,Vt=Zt||qt||Function(\"return this\")(),Kt=typeof exports==\"object\"&&exports&&!exports.nodeType&&exports,Gt=Kt&&typeof module==\"object\"&&module&&!module.nodeType&&module,Jt=Gt&&Gt.exports===Kt,Yt=Jt&&Zt.g;\nt:{try{$t=Yt&&Yt.f(\"util\");break t}catch(t){}$t=void 0}var Ht=$t&&$t.isArrayBuffer,Qt=$t&&$t.isDate,Xt=$t&&$t.isMap,tn=$t&&$t.isRegExp,nn=$t&&$t.isSet,rn=$t&&$t.isTypedArray,en=j(\"length\"),un=w({\"\\xc0\":\"A\",\"\\xc1\":\"A\",\"\\xc2\":\"A\",\"\\xc3\":\"A\",\"\\xc4\":\"A\",\"\\xc5\":\"A\",\"\\xe0\":\"a\",\"\\xe1\":\"a\",\"\\xe2\":\"a\",\"\\xe3\":\"a\",\"\\xe4\":\"a\",\"\\xe5\":\"a\",\"\\xc7\":\"C\",\"\\xe7\":\"c\",\"\\xd0\":\"D\",\"\\xf0\":\"d\",\"\\xc8\":\"E\",\"\\xc9\":\"E\",\"\\xca\":\"E\",\"\\xcb\":\"E\",\"\\xe8\":\"e\",\"\\xe9\":\"e\",\"\\xea\":\"e\",\"\\xeb\":\"e\",\"\\xcc\":\"I\",\"\\xcd\":\"I\",\"\\xce\":\"I\",\"\\xcf\":\"I\",\n\"\\xec\":\"i\",\"\\xed\":\"i\",\"\\xee\":\"i\",\"\\xef\":\"i\",\"\\xd1\":\"N\",\"\\xf1\":\"n\",\"\\xd2\":\"O\",\"\\xd3\":\"O\",\"\\xd4\":\"O\",\"\\xd5\":\"O\",\"\\xd6\":\"O\",\"\\xd8\":\"O\",\"\\xf2\":\"o\",\"\\xf3\":\"o\",\"\\xf4\":\"o\",\"\\xf5\":\"o\",\"\\xf6\":\"o\",\"\\xf8\":\"o\",\"\\xd9\":\"U\",\"\\xda\":\"U\",\"\\xdb\":\"U\",\"\\xdc\":\"U\",\"\\xf9\":\"u\",\"\\xfa\":\"u\",\"\\xfb\":\"u\",\"\\xfc\":\"u\",\"\\xdd\":\"Y\",\"\\xfd\":\"y\",\"\\xff\":\"y\",\"\\xc6\":\"Ae\",\"\\xe6\":\"ae\",\"\\xde\":\"Th\",\"\\xfe\":\"th\",\"\\xdf\":\"ss\",\"\\u0100\":\"A\",\"\\u0102\":\"A\",\"\\u0104\":\"A\",\"\\u0101\":\"a\",\"\\u0103\":\"a\",\"\\u0105\":\"a\",\"\\u0106\":\"C\",\"\\u0108\":\"C\",\"\\u010a\":\"C\",\"\\u010c\":\"C\",\n\"\\u0107\":\"c\",\"\\u0109\":\"c\",\"\\u010b\":\"c\",\"\\u010d\":\"c\",\"\\u010e\":\"D\",\"\\u0110\":\"D\",\"\\u010f\":\"d\",\"\\u0111\":\"d\",\"\\u0112\":\"E\",\"\\u0114\":\"E\",\"\\u0116\":\"E\",\"\\u0118\":\"E\",\"\\u011a\":\"E\",\"\\u0113\":\"e\",\"\\u0115\":\"e\",\"\\u0117\":\"e\",\"\\u0119\":\"e\",\"\\u011b\":\"e\",\"\\u011c\":\"G\",\"\\u011e\":\"G\",\"\\u0120\":\"G\",\"\\u0122\":\"G\",\"\\u011d\":\"g\",\"\\u011f\":\"g\",\"\\u0121\":\"g\",\"\\u0123\":\"g\",\"\\u0124\":\"H\",\"\\u0126\":\"H\",\"\\u0125\":\"h\",\"\\u0127\":\"h\",\"\\u0128\":\"I\",\"\\u012a\":\"I\",\"\\u012c\":\"I\",\"\\u012e\":\"I\",\"\\u0130\":\"I\",\"\\u0129\":\"i\",\"\\u012b\":\"i\",\"\\u012d\":\"i\",\"\\u012f\":\"i\",\n\"\\u0131\":\"i\",\"\\u0134\":\"J\",\"\\u0135\":\"j\",\"\\u0136\":\"K\",\"\\u0137\":\"k\",\"\\u0138\":\"k\",\"\\u0139\":\"L\",\"\\u013b\":\"L\",\"\\u013d\":\"L\",\"\\u013f\":\"L\",\"\\u0141\":\"L\",\"\\u013a\":\"l\",\"\\u013c\":\"l\",\"\\u013e\":\"l\",\"\\u0140\":\"l\",\"\\u0142\":\"l\",\"\\u0143\":\"N\",\"\\u0145\":\"N\",\"\\u0147\":\"N\",\"\\u014a\":\"N\",\"\\u0144\":\"n\",\"\\u0146\":\"n\",\"\\u0148\":\"n\",\"\\u014b\":\"n\",\"\\u014c\":\"O\",\"\\u014e\":\"O\",\"\\u0150\":\"O\",\"\\u014d\":\"o\",\"\\u014f\":\"o\",\"\\u0151\":\"o\",\"\\u0154\":\"R\",\"\\u0156\":\"R\",\"\\u0158\":\"R\",\"\\u0155\":\"r\",\"\\u0157\":\"r\",\"\\u0159\":\"r\",\"\\u015a\":\"S\",\"\\u015c\":\"S\",\"\\u015e\":\"S\",\n\"\\u0160\":\"S\",\"\\u015b\":\"s\",\"\\u015d\":\"s\",\"\\u015f\":\"s\",\"\\u0161\":\"s\",\"\\u0162\":\"T\",\"\\u0164\":\"T\",\"\\u0166\":\"T\",\"\\u0163\":\"t\",\"\\u0165\":\"t\",\"\\u0167\":\"t\",\"\\u0168\":\"U\",\"\\u016a\":\"U\",\"\\u016c\":\"U\",\"\\u016e\":\"U\",\"\\u0170\":\"U\",\"\\u0172\":\"U\",\"\\u0169\":\"u\",\"\\u016b\":\"u\",\"\\u016d\":\"u\",\"\\u016f\":\"u\",\"\\u0171\":\"u\",\"\\u0173\":\"u\",\"\\u0174\":\"W\",\"\\u0175\":\"w\",\"\\u0176\":\"Y\",\"\\u0177\":\"y\",\"\\u0178\":\"Y\",\"\\u0179\":\"Z\",\"\\u017b\":\"Z\",\"\\u017d\":\"Z\",\"\\u017a\":\"z\",\"\\u017c\":\"z\",\"\\u017e\":\"z\",\"\\u0132\":\"IJ\",\"\\u0133\":\"ij\",\"\\u0152\":\"Oe\",\"\\u0153\":\"oe\",\"\\u0149\":\"'n\",\n\"\\u017f\":\"ss\"}),on=w({\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\",\"'\":\"&#39;\",\"`\":\"&#96;\"}),fn=w({\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"',\"&#39;\":\"'\",\"&#96;\":\"`\"}),cn=N();typeof define==\"function\"&&typeof define.amd==\"object\"&&define.amd?(Vt._=cn, define(function(){return cn})):Gt?((Gt.exports=cn)._=cn,Kt._=cn):Vt._=cn}).call(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/lodash/lodash.min.js\n ** module id = 22\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0,\r\n\tstyleElementsInsertedAtTop = [];\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\t// By default, add <style> tags to the bottom of <head>.\r\n\tif (typeof options.insertAt === \"undefined\") options.insertAt = \"bottom\";\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction insertStyleElement(options, styleElement) {\r\n\tvar head = getHeadElement();\r\n\tvar lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];\r\n\tif (options.insertAt === \"top\") {\r\n\t\tif(!lastStyleElementInsertedAtTop) {\r\n\t\t\thead.insertBefore(styleElement, head.firstChild);\r\n\t\t} else if(lastStyleElementInsertedAtTop.nextSibling) {\r\n\t\t\thead.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);\r\n\t\t} else {\r\n\t\t\thead.appendChild(styleElement);\r\n\t\t}\r\n\t\tstyleElementsInsertedAtTop.push(styleElement);\r\n\t} else if (options.insertAt === \"bottom\") {\r\n\t\thead.appendChild(styleElement);\r\n\t} else {\r\n\t\tthrow new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\r\n\t}\r\n}\r\n\r\nfunction removeStyleElement(styleElement) {\r\n\tstyleElement.parentNode.removeChild(styleElement);\r\n\tvar idx = styleElementsInsertedAtTop.indexOf(styleElement);\r\n\tif(idx >= 0) {\r\n\t\tstyleElementsInsertedAtTop.splice(idx, 1);\r\n\t}\r\n}\r\n\r\nfunction createStyleElement(options) {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tstyleElement.type = \"text/css\";\r\n\tinsertStyleElement(options, styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement(options) {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tlinkElement.rel = \"stylesheet\";\r\n\tinsertStyleElement(options, linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement(options));\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement(options);\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement(options);\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tremoveStyleElement(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 23\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js!./style.css\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js!./style.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/style.css\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 25\n ** module chunks = 0\n **/"],"sourceRoot":""}